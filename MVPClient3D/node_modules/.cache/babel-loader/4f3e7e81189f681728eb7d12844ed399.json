{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/apparatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/apparatus.vue","mtime":1609744120446},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["apparatus.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"apparatus\">\n        <p class=\"page-title\">\n            <span class=\"tool-box\" v-show=\"pageSize == true\">\n                <!-- <el-popover placement=\"left\" width=\"480\" trigger=\"hover\">\n                    <span class=\"contrlbtns\">\n                        <el-button type='success' @click=\"resetEcharts\" size=\"mini\">重置视图</el-button>\n                        <el-button type='primary' size=\"mini\" @click=\"changeEchartsDataZoom(0)\">减少显示数据</el-button>\n                        <span class=\"contrlbtnsinput\">当前总共显示{{echartsDataZoom}}秒数据</span>\n                        <el-button type='primary' @click=\"changeEchartsDataZoom(1)\" size=\"mini\">增加显示数据</el-button>\n                    </span>\n                    <i title=\"更多操作\" slot=\"reference\" class=\"el-icon-warning refreshbtn\"></i>\n                </el-popover> -->\n                <!-- <el-button type='success' @click=\"resetEcharts\" size=\"mini\">重置视图</el-button> -->\n                <!-- <el-button type='primary' size=\"mini\" @click=\"changeEchartsDataZoom(0)\">减少显示数据</el-button>\n                <span class=\"contrlbtnsinput\">当前总共显示{{echartsDataZoom}}秒数据</span>\n                <el-button type='primary' @click=\"changeEchartsDataZoom(1)\" size=\"mini\">增加显示数据</el-button> -->\n                <!-- <span class=\"legend-item\" v-for=\"(item , $index) in legendArray\" :key=\"$index\">\n                    <span class=\"legend-point\" :style=\"{'background':item.color}\" @click=\"showLine(item.id)\">\n                        <span :style=\"{'background':item.color}\" class=\"legend-point-line\"></span>\n                    </span>\n                    <span class=\"legend-title\" @click=\"showYAxisAndWeightLine(item)\">{{item.name}}</span>\n                </span> -->\n            </span>\n            <span class=\"close-btn\" style=\"right:20px\" @click=\"handleSize('apparatus')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n            <span class=\"close-btn\" @click=\"closeItem('apparatus')\"><i class=\"el-icon-circle-close\"></i></span>\n        </p>\n        <div class=\"apparatus-content\">\n            <div class=\"bigScreen\" v-show=\"pageSize == true\">\n                <!-- <div id=\"myChart\" :style=\"{ width: '85%', height: '500px',zIndex:'9',display:'none' }\"></div> -->\n                <div id=\"myChartGL\" :style=\"{ width: '85%', height: '500px',zIndex:'9' }\"></div>\n                <div class=\"apparatus-from-content\">\n                    <div class=\"apparatus-from-content-1\">\n                        <div class=\"top-input\">\n                            <div class=\"form-label-top\">\n                                <p>数据时间</p>\n                                <span class=\"form-label-res\">\n                                    {{form.getDataTime}}\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"from-content\">\n                            <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                                <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                                <span class=\"form-label-res\">\n                                    {{item.vals | formatterDecimals}}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div v-show=\"pageSize == false\" class=\"smellScreen\">\n                <div class=\"top-input-1\">\n                    <div class=\"form-label\">\n                        <p>数据时间</p>\n                        <span class=\"form-label-res\" style=\"max-width: 200px;\">\n                            {{form.getDataTime}}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"grid-content\">\n                    <div style=\"width:100%;height:84px\"></div>\n                    <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                        <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                        <span class=\"form-label-res\">\n                            {{item.vals | formatterDecimals}}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n    name: 'apparatus',\n    data() {\n        return {\n            setInterval: null,\n            settimeouts: null,\n            thisTimes: '',\n            limit: 1,\n            iconName: 'el-icon-right',\n            colorArray: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700'],\n            legendArray: [],\n            form: {\n                getDataTime: '0',\n            },\n            myChartGL: \"\",\n            optionGL: {\n                legend: {\n                    show: false,\n                    orient: 'vertical',\n                    right: 20,\n                    icon: 'roundRect',\n                    textStyle: {\n                        color: '#000'\n                    }\n                },\n                grid3D: {\n                    boxWidth: 240,\n                    boxHeight: 100,\n                    boxDepth: 100,\n                    viewControl: {\n                        projection: 'perspective',\n                        distance: 200,\n                        damping: 0,\n                        alpha: 15,\n                        beta: 8\n                    },\n                    top: 0,\n                    axisTick: {\n                        show: false,\n                    }\n                },\n                backgroundColor: '#fff',\n                visualMap: {\n                    show: false,\n                    dimension: 2,\n                    min: 0,\n                    max: 30,\n                    inRange: {\n                        color: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700']\n                    }\n                },\n                xAxis3D: {\n                    type: 'category',\n                    name: '',\n                    data: [],\n                    axisLabel: {\n                        show: false,\n                        interval: 0  //使x轴都显示\n                    },\n                    splitLine: {\n                        show: true,\n                        interval: 10\n                    }\n                },\n                yAxis3D: {\n                    type: 'category',\n                    name: '',\n                    data: [],\n                    axisLabel: {\n                        show: true,\n                        interval: 0   //使y轴都显示\n                    }\n                },\n                zAxis3D: {\n                    type: 'value',\n                    name: ''\n                },\n                series: []\n            },\n            globelNum: 0,\n            formArray: [],\n            formArrayGL: [],\n            chartsArray: [],\n            chartsArrayGL: [],\n            isEnter: false,\n            echartsDataZoom: 100,\n            clearEchartsInterval: null,\n            count: 0,\n            optionGLSeriesData: [],\n            nowDeep: 0,\n            // devDeep: this.$devDeep\n        }\n    },\n    computed: {\n\n    },\n    created() {\n        this.echartsDataZoom = Number(localStorage.getItem('echartsDataZoom'))\n        if (isNaN(this.echartsDataZoom)) {\n            this.echartsDataZoom = 300\n        }\n        if (this.echartsDataZoom < 100) {\n            this.echartsDataZoom = 100\n        }\n        if (this.echartsDataZoom > 3000) {\n            this.echartsDataZoom = 3000\n        }\n    },\n    beforeMount() {\n    },\n    mounted() {\n        // console.log(this.devDeep)\n        this.getishow()\n        this.getMissionDeep()\n        document.getElementsByClassName('apparatus-from-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementsByClassName('grid-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementById('myChartGL').style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        let _this = this;\n        window.onresize = function () {\n            _this.myChartGL.resize()\n        }\n        this.getDataSec();\n        this.clearEcharts();\n    },\n    filters: {\n        formatterDecimals(val) {\n            if (val == null) {\n                return 0\n            } else if (val == 0) {\n                return 0\n            } else if (typeof val == 'string') {\n                return val\n            } else {\n                return val.toFixed(4)\n            }\n        }\n    },\n    props: {\n        pageSize: Boolean,\n    },\n    watch: {\n        pageSize(newVal, oldVal) {\n            console.log(oldVal)\n            if (newVal == false) {\n                this.iconName = 'el-icon-back'\n            } else {\n                this.iconName = 'el-icon-right'\n            }\n        },\n        // devDeep(newVal, oldVal) {\n        //     console.log(newVal, oldVal)\n        // }\n    },\n    methods: {\n        /**\n         * @description:获取ishow  初始化Echarts的option的yAxis与series \n         * @param {*}\n         * @return {*}\n         */\n        async getishow() {\n            let _this = this;\n            let result = await request({\n                url: \"sys-define/get_ishow_define\",\n                method: \"get\"\n            });\n            try {\n                _this.formArray = JSON.parse(JSON.stringify(result.data));\n                _this.formArrayGL = JSON.parse(JSON.stringify(result.data));\n                if (_this.formArrayGL.length > 0) {\n                    for (let i in _this.formArrayGL) {\n                        if (_this.formArrayGL[i].showInChart == 1) {\n                            _this.chartsArrayGL.push(_this.formArrayGL[i])\n                        }\n                    }\n                    for (let i in _this.chartsArrayGL) {\n                        _this.chartsArrayGL[i].min = 0;\n                        _this.chartsArrayGL[i].max = 0;\n                        _this.optionGL.yAxis3D.data.push({\n                            id: _this.chartsArrayGL[i].serialNo,\n                            value: _this.chartsArrayGL[i].dataName,\n                            position: 'left',\n                            type: 'value',\n                            show: i == 0 ? true : false,\n                            valueEn: _this.chartsArrayGL[i].fieldName,\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 'dataMin' : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 'dataMax' : _this.chartsArrayGL[i].upperLimit,\n                        })\n                        _this.optionGL.series.push({\n                            type: 'line3D',\n                            name: _this.chartsArrayGL[i].dataName,\n                            filed: _this.chartsArrayGL[i].fieldName,\n                            lineStyle: {\n                                // width: 8,\n                            },\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 0 : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 0 : _this.chartsArrayGL[i].upperLimit,\n                            data: []    //每个区的数据一一对应\n                        });\n                        _this.optionGL.series.push({\n                            type: 'scatter3D',\n                            name: _this.chartsArrayGL[i].dataName,\n                            filed: _this.chartsArrayGL[i].fieldName,\n                            symbol: 'circle',\n                            symbolSize: 5,\n                            itemStyle: {\n                                opacity: 1,\n                            },\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 0 : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 0 : _this.chartsArrayGL[i].upperLimit,\n                            label: {  //当type为scatter3D时有label出现\n                                show: false,\n                                position: 'bottom',\n                                distance: 0,\n                                // textStyle: {\n                                //     fontSize: 12,\n                                //     borderWidth: 0,\n                                //     backgroundColor: 'transparent'\n                                // }\n                            },\n                            data: []    //每个区的数据一一对应\n                        });\n                        let ar = [];\n                        // ar.push(null);\n                        // ar.push(_this.chartsArrayGL[i].dataName);\n                        // ar.push(0)\n                        _this.optionGLSeriesData.push(ar)\n                    }\n                    console.log(_this.optionGL);\n                    console.log(_this.optionGLSeriesData)\n                    console.log(_this.chartsArrayGL);\n                    _this.drawLine()\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 初始化Echarts，监听父容器大小自适应宽度、高度\n         * @param {*}\n         * @return {*}\n         */\n        drawLine() {\n            let _this = this;\n            this.myChartGL = this.$echarts.getInstanceByDom(document.getElementById(\"myChartGL\"));\n            if (this.myChartGL === undefined) {\n                this.myChartGL = this.$echarts.init(document.getElementById(\"myChartGL\"));\n            }\n            this.myChartGL.setOption(this.optionGL, true);\n\n            let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n            let erd = elementResizeDetectorMaker();\n            let worldMapContainer = document.getElementById('apparatus');\n            erd.listenTo(worldMapContainer, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementById(\"myChartGL\").style.width = element.offsetWidth + 'px';\n                    _this.myChartGL.resize(); //变化重新渲染饼图\n                })\n            });\n            let apparatusContent = document.getElementsByClassName('apparatus-content')[0];\n            /**\n             * 监听任务内容框是否缩小\n             * */\n            erd.listenTo(apparatusContent, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementsByClassName('apparatus-from-content')[0].style.height = element.clientHeight + 'px';\n                    document.getElementsByClassName('grid-content')[0].style.height = element.clientHeight + 'px';\n                    document.getElementById('myChartGL').style.height = element.clientHeight + 'px';\n                    document.getElementById(\"myChartGL\").style.width = element.offsetWidth + 'px';\n                    _this.myChartGL.resize(); //变化重新渲染饼图\n                })\n            });\n        },\n        /**\n         * @description: 定时器\n         * @param {*}\n         * @return {*}\n         */\n        getDataSec() {\n            let _this = this;\n            window.clearInterval(_this.setInterval);\n            _this.setInterval = setInterval(() => {\n                _this.getApparatusData({\n                    thisTimes: _this.thisTimes,\n                    limit: _this.limit\n                })\n            }, 1000)\n        },\n        /**\n         * @description: 获取Echarts数据\n         * @param {*}\n         * @return {*}\n         */\n        async getApparatusData(row) {\n            let _this = this;\n            let result = await request({\n                url: \"realtime\",\n                method: \"get\",\n                params: {\n                    start_time: row.thisTimes,\n                    limit: row.limit,\n                }\n            });\n            try {\n                /**\n                 * 初始化Echarts  X轴\n                */\n                if (result.data.length > 0) {\n                    let resultUseCharts = JSON.parse(JSON.stringify(result));\n                    // console.log(_this.optionGLSeriesData)\n                    // console.log(resultUseCharts)\n                    for (let kk in resultUseCharts.data) {\n                        for (let i in resultUseCharts.data[kk]) {\n                            if (typeof resultUseCharts.data[kk][i] == 'number') {\n                                resultUseCharts.data[kk][i] = resultUseCharts.data[kk][i] == null ? 0 : Number(resultUseCharts.data[kk][i].toFixed(2))\n                            }\n                        }\n                    }\n                    if (_this.globelNum == 0) {\n                        _this.renderEcharts(resultUseCharts, true)\n                    } else {\n                        _this.renderEcharts(resultUseCharts, false)\n                    }\n                    _this.globelNum += 1;\n                    // 获取时间\n                    _this.form = {\n                        getDataTime: result.data[0].timeTag,\n                    };\n                    _this.thisTimes = result.data[0].timeTag;\n\n                    let resultdata = result.data[0]\n                    // input框赋值\n                    for (let i in _this.formArray) {\n                        for (let j in resultdata) {\n                            if (_this.formArray[i].fieldName == j) {\n                                _this.formArray[i].vals = resultdata[j];\n                            }\n                        }\n                    }\n                    _this.limit = '';\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 动态更新Echarts的option\n         * @param {*} result\n         * @param {*} isFirst\n         * @return {*}\n         */\n        renderEcharts(result, isFirst) {\n            let _this = this;\n            if (!_this.myChartGL) {\n                return\n            }\n            let optionsGL = _this.myChartGL.getOption();\n            let useRollData = result.data;\n            if (useRollData.length > 1) {\n                useRollData.reverse();\n            }\n            // console.log(optionsGL)\n            for (let kk in useRollData) {\n                // 初始化 X 轴数量\n                if (isFirst == true) {\n                    for (let i = 0; i < _this.echartsDataZoom; i++) {\n                        optionsGL.xAxis3D[0].data.push(_this.formatterTimes(useRollData[kk].timeTag, i))\n                    }\n                }\n                if (optionsGL.xAxis3D[0].data.indexOf(useRollData[kk].timeTag) == -1) {\n                    optionsGL.xAxis3D[0].data.push(useRollData[kk].timeTag)\n                }\n                let line3DData = [];\n                let resultdata = useRollData[kk];\n                for (let iiii in optionsGL.series) {\n                    if (optionsGL.series[iiii].type == 'line3D') {\n                        line3DData.push(optionsGL.series[iiii])\n                    }\n                }\n                for (let iii in line3DData) {\n                    let ar = [];\n                    ar.push(resultdata.timeTag);\n                    ar.push(line3DData[iii].name);\n                    for (let j in resultdata) {\n                        if (j == line3DData[iii].filed) {\n                            ar.push(resultdata[j]);\n                        }\n                    }\n                    _this.optionGLSeriesData[iii].push(ar)\n                }\n                // console.log(optionsGL.series)\n                for (let ii in optionsGL.series) {\n                    for (let jj = 0; jj < _this.optionGLSeriesData.length; jj++) {\n                        if (optionsGL.series[ii].name == _this.optionGLSeriesData[jj][0][1]) {\n                            // console.log(optionsGL.series[ii].min)\n                            // console.log(optionsGL.series[ii].max)\n                            // return\n                            if (optionsGL.series[ii].max == 0) {\n                                optionsGL.series[ii].max = _this.nowDeep\n                            }\n                            let oldmin, oldmax, oldresult, newmax, newresult;\n                            oldmin = optionsGL.series[ii].min;\n                            oldmax = optionsGL.series[ii].max;\n                            oldresult = Math.round(_this.optionGLSeriesData[jj][0][2] - optionsGL.series[ii].min);\n                            // newmin = 0;\n                            newmax = oldmax - oldmin;\n                            newresult = Math.round(oldresult / newmax * 100)\n\n                            // let newresult = Math.round((_this.optionGLSeriesData[jj][0][2] - optionsGL.series[ii].min) / (optionsGL.series[ii].max - optionsGL.series[ii].min) * 100);\n                            console.log(newresult)\n                            debugger\n                            _this.optionGLSeriesData[jj][0][2] = newresult\n                            optionsGL.series[ii].data = _this.optionGLSeriesData[jj]\n                        }\n                    }\n\n                }\n                /**\n                 *  固定X轴数量与series的数量\n                */\n                if (optionsGL.xAxis3D[0].data.length > _this.echartsDataZoom) {\n                    optionsGL.xAxis3D[0].data.splice(0, (optionsGL.xAxis3D[0].data.length - _this.echartsDataZoom));\n                }\n                for (let i = 0; i < optionsGL.series.length; i++) {\n                    if (optionsGL.series[i].data.length > _this.echartsDataZoom) {\n                        optionsGL.series[i].data.splice(0, (optionsGL.series[i].data.length - _this.echartsDataZoom));\n                    }\n                }\n            }\n            _this.myChartGL.setOption(optionsGL);\n\n        },\n        /**\n         * @description: 获取任务投放深度\n         * @param {*}\n         * @return {*}\n         */\n        async getMissionDeep() {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_current_job\",\n                method: \"get\"\n            });\n            // console.log(result, \"result\");\n            try {\n                // console.log(result);\n                // _this.nowDeep = 0;\n                if (result.data.length > 0) {\n                    _this.nowDeep = result.data[0].setDeep\n                } else {\n                    _this.nowDeep = 100;\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        /**\n         * @description:关闭当前组件窗口 \n         * @param {*} ele\n         * @return {*}\n         */\n        closeItem(ele) {\n            this.$emit('sendEleName', ele);\n        },\n        /**\n         * @description: 放大缩小当前组件窗口\n         * @param {*} ele\n         * @return {*}\n         */\n        handleSize(ele) {\n            if (this.pageSize == true) {\n                this.pageSize = false;\n            } else {\n                this.pageSize = true;\n            }\n            this.$emit('contrlEleName', {\n                ele: ele,\n                switch: this.pageSize\n            });\n        },\n        /**\n         * @description: 清理Echarts\n         * @param {*}\n         * @return {*}\n         */\n        clearEcharts() {\n            let _this = this;\n            window.clearInterval(_this.clearEchartsInterval)\n            _this.clearEchartsInterval = setInterval(() => {\n                let a = this.myChartGL.getOption();\n                _this.myChartGL.clear();\n                _this.myChartGL.setOption(a);\n                a = null;\n            }, 1000 * 60 * 15)\n        },\n        /**\n         * @description: 格式化时间+1s\n         * @param {*} time\n         * @param {*} sum\n         * @return {*}\n         */\n        formatterTimes(time, sum) {\n            let date = time;\n            if (!date) {\n                return\n            }\n            date = date.substring(0, 19);\n            date = date.replace(/-/g, '/');\n            let timestamp = new Date(date).getTime();\n            if (sum == 0) {\n                timestamp;\n            } else {\n                timestamp = timestamp += (sum * 1000);\n            }\n            var d = new Date(timestamp);\n            var dates = (d.getFullYear()) + \"-\" +\n                (d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1) + \"-\" +\n                (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + \" \" +\n                (d.getHours() < 10 ? '0' + d.getHours() : d.getHours()) + \":\" +\n                (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + \":\" +\n                (d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds());\n            return dates\n        },\n        /**\n         * @description: 改变Echarts的zoom值\n         * @param {*} type\n         * @return {*}\n         */\n        changeEchartsDataZoom(type) {\n            // let _this = this;\n            // if (type == 1) {\n            //     this.echartsDataZoom += 100\n            //     if (this.echartsDataZoom > 3000) {\n            //         this.echartsDataZoom = 3000\n            //     }\n            // } else {\n            //     this.echartsDataZoom -= 100\n            //     if (this.echartsDataZoom < 100) {\n            //         this.echartsDataZoom = 100\n            //     }\n            // }\n            // let a = _this.myChart.getOption();\n            // let t = a.xAxis[0].data[a.xAxis[0].data.length - 1];\n            // let l = a.xAxis[0].data.length;\n            // if (a.xAxis[0].data.length < this.echartsDataZoom) {\n            //     for (let i = 0; i < _this.echartsDataZoom - l; i++) {\n            //         a.xAxis[0].data.push(_this.formatterTimes(t, i))\n            //     }\n            // }\n            // _this.myChart.setOption(a);\n        },\n        /**\n         * @description: 重置图表配置\n         * @param {*}\n         * @return {*}\n         */\n        // resetEcharts() {\n        //     let _this = this;\n        //     let options = _this.myChart.getOption();\n        //     for (let i in options.yAxis) {\n        //         options.yAxis[i].show = false;\n        //     }\n        //     for (let i in options.series) {\n        //         options.series[i].lineStyle.width = 2;\n        //     }\n        //     options.yAxis[0].show = true;\n        //     options.dataZoom[0].start = 0;\n        //     options.dataZoom[0].end = 100;\n        //     _this.myChart.setOption(options);\n        // },\n        /**\n         * @description: 点击legend  文字显示Y轴与线条加粗\n         * @param {*}\n         * @return {*}\n         */\n        // showYAxisAndWeightLine(row) {\n        //     let _this = this;\n        //     // return\n        //     let options = _this.myChart.getOption();\n        //     for (let i in options.yAxis) {\n        //         options.yAxis[i].show = false;\n        //         if (options.yAxis[i].id == row.id) {\n        //             if (row.sameAs == null) {\n        //                 options.yAxis[i].show = true;\n        //                 if (options.series[i].lineStyle.width == 2) {\n        //                     options.series[i].lineStyle.width = 4\n        //                 } else {\n        //                     options.series[i].lineStyle.width = 2\n        //                 }\n        //             } else {\n        //                 for (let k in options.yAxis) {\n        //                     if (options.yAxis[k].id == row.sameAs) {\n        //                         options.yAxis[k].show = true;\n        //                         if (options.series[i].lineStyle.width == 4) {\n        //                             options.series[i].lineStyle.width = 2\n        //                         } else {\n        //                             options.series[i].lineStyle.width = 4\n        //                         }\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     _this.myChart.setOption(options);\n        // },\n        /**\n         * @description: 点击圆点显示折线\n         * @param {*}\n         * @return {*}\n         */\n        // showLine(row) {\n        //     let _this = this\n        //     let options = _this.myChart.getOption()\n        //     for (let i in options.yAxis) {\n        //         if (options.series[i].id == row) {\n        //             if (options.series[i].lineStyle.width == 0) {\n        //                 options.series[i].lineStyle.width = 2;\n        //             } else {\n        //                 options.series[i].lineStyle.width = 0;\n        //             }\n        //         }\n        //     }\n        //     _this.myChart.setOption(options);\n        // },\n\n    }\n}\n</script>\n\n<style scoped>\n.apparatus-content {\n    height: 94%;\n}\n\n.bigScreen {\n    height: 100%;\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n}\n.smellScreen {\n    height: 100%;\n    position: relative;\n    overflow-x: auto;\n}\n.smellScreen::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.from-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 20px;\n    margin-top: 96px;\n    z-index: 99;\n}\n.apparatus-from-content {\n    height: 100%;\n    overflow: hidden;\n    width: 15%;\n    border-left: 1px solid #eee;\n    position: relative;\n}\n.apparatus-from-content::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.apparatus-from-content-1 {\n    height: 100%;\n    overflow: auto;\n    width: 100%;\n    border-left: 1px solid #eee;\n}\n.apparatus-from-content-1::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n\n.page-title {\n    height: 32px;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    border-bottom: 1px solid #eee;\n    cursor: default;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    z-index: 1999;\n    padding-bottom: 5px;\n}\n.page-title .page-title-span {\n    font-size: 16px;\n    color: #409eff;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.page-title .close-btn:hover {\n    color: #5cb6ff;\n}\n.grid-content {\n    padding: 0 20px;\n    z-index: 99;\n    position: relative;\n}\n.grid-content::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.from-content-1 {\n    margin-top: 85px;\n}\n.from-content-1 .el-form-item {\n    margin-bottom: 6px;\n}\n.myChart {\n    border-right: 1px solid #ccc;\n}\n.top-input {\n    cursor: default;\n    margin-bottom: 18px;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    width: 100%;\n}\n.top-input p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.top-input-1 {\n    width: 100%;\n    cursor: default;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    padding: 0 20px;\n}\n.top-input-1 p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.legend-item {\n    display: inline-block;\n    padding: 0 4px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.legend-item .legend-point {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    background: #ccc;\n    border-radius: 50%;\n    position: relative;\n    margin: 0 5px 0 5px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.legend-point-line {\n    display: inline-block;\n    position: absolute;\n    width: 24px;\n    height: 1px;\n    top: 6px;\n    left: -6px;\n    background: #ccc;\n}\n.legend-item .legend-title {\n    font-size: 12px;\n    display: inline-block;\n    padding: 0 3px;\n    line-height: 24px;\n    cursor: pointer;\n}\n\n.form-label {\n    width: 100%;\n    cursor: default;\n    margin: 10px 0;\n}\n.form-label p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    max-width: 200px;\n    text-indent: 3px;\n    white-space: nowrap;\n}\n.form-label-top {\n    cursor: default;\n    margin: 10px 0;\n    padding: 0 20px;\n}\n.form-label-top p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label-top .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    text-indent: 3px;\n}\n.contrlbtns {\n    display: inline-block;\n    margin-left: 20px;\n    z-index: 999;\n}\n.contrlbtns .contrlbtnsinput {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 5px;\n    text-align: center;\n    font-size: 12px;\n}\n.refreshbtn {\n    display: inline-block;\n    margin-right: 10px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.tool-box {\n    display: inline-block;\n    margin-left: 20px;\n}\n</style>"],"sourceRoot":"src/components"}]}