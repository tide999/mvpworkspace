{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/apparatus.vue?vue&type=style&index=0&id=3f1d81c3&scoped=true&lang=css&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/apparatus.vue","mtime":1609744120446},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHBhcmF0dXMtY29udGVudCB7CiAgICBoZWlnaHQ6IDk0JTsKfQoKLmJpZ1NjcmVlbiB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KLnNtZWxsU2NyZWVuIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG92ZXJmbG93LXg6IGF1dG87Cn0KLnNtZWxsU2NyZWVuOjotd2Via2l0LXNjcm9sbGJhciB7CiAgICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUgU2FmYXJpICovCn0KLmZyb20tY29udGVudCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIHBhZGRpbmc6IDAgMjBweDsKICAgIG1hcmdpbi10b3A6IDk2cHg7CiAgICB6LWluZGV4OiA5OTsKfQouYXBwYXJhdHVzLWZyb20tY29udGVudCB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgd2lkdGg6IDE1JTsKICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2VlZTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouYXBwYXJhdHVzLWZyb20tY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXIgewogICAgZGlzcGxheTogbm9uZTsgLyogQ2hyb21lIFNhZmFyaSAqLwp9Ci5hcHBhcmF0dXMtZnJvbS1jb250ZW50LTEgewogICAgaGVpZ2h0OiAxMDAlOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2VlZTsKfQouYXBwYXJhdHVzLWZyb20tY29udGVudC0xOjotd2Via2l0LXNjcm9sbGJhciB7CiAgICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUgU2FmYXJpICovCn0KCi5wYWdlLXRpdGxlIHsKICAgIGhlaWdodDogMzJweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG1hcmdpbjogNXB4IDEwcHg7CiAgICBsaW5lLWhlaWdodDogMzJweDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWVlOwogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsKICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICB1c2VyLXNlbGVjdDogbm9uZTsKICAgIHotaW5kZXg6IDE5OTk7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Owp9Ci5wYWdlLXRpdGxlIC5wYWdlLXRpdGxlLXNwYW4gewogICAgZm9udC1zaXplOiAxNnB4OwogICAgY29sb3I6ICM0MDllZmY7Cn0KLnBhZ2UtdGl0bGUgLmNsb3NlLWJ0biB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMHB4OwogICAgdG9wOiAwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBjb2xvcjogIzMwMzEzMzsKfQoucGFnZS10aXRsZSAuY2xvc2UtYnRuOmhvdmVyIHsKICAgIGNvbG9yOiAjNWNiNmZmOwp9Ci5ncmlkLWNvbnRlbnQgewogICAgcGFkZGluZzogMCAyMHB4OwogICAgei1pbmRleDogOTk7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmdyaWQtY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXIgewogICAgZGlzcGxheTogbm9uZTsgLyogQ2hyb21lIFNhZmFyaSAqLwp9Ci5mcm9tLWNvbnRlbnQtMSB7CiAgICBtYXJnaW4tdG9wOiA4NXB4Owp9Ci5mcm9tLWNvbnRlbnQtMSAuZWwtZm9ybS1pdGVtIHsKICAgIG1hcmdpbi1ib3R0b206IDZweDsKfQoubXlDaGFydCB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjOwp9Ci50b3AtaW5wdXQgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgbWFyZ2luLWJvdHRvbTogMThweDsKICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICB6LWluZGV4OiAxMDA7CiAgICB3aWR0aDogMTAwJTsKfQoudG9wLWlucHV0IHAgewogICAgZm9udC1zaXplOiAxNHB4OwogICAgY29sb3I6ICMzMDMxMzM7CiAgICBsaW5lLWhlaWdodDogNDBweDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBmb250LXdlaWdodDogNjAwOwogICAgbWFyZ2luOiAwOwp9Ci50b3AtaW5wdXQtMSB7CiAgICB3aWR0aDogMTAwJTsKICAgIGN1cnNvcjogZGVmYXVsdDsKICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICB6LWluZGV4OiAxMDA7CiAgICBwYWRkaW5nOiAwIDIwcHg7Cn0KLnRvcC1pbnB1dC0xIHAgewogICAgZm9udC1zaXplOiAxNHB4OwogICAgY29sb3I6ICMzMDMxMzM7CiAgICBsaW5lLWhlaWdodDogNDBweDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBmb250LXdlaWdodDogNjAwOwogICAgbWFyZ2luOiAwOwp9Ci5sZWdlbmQtaXRlbSB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBwYWRkaW5nOiAwIDRweDsKICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOwogICAgLW1zLXVzZXItc2VsZWN0OiBub25lOwogICAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KLmxlZ2VuZC1pdGVtIC5sZWdlbmQtcG9pbnQgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgaGVpZ2h0OiAxMnB4OwogICAgd2lkdGg6IDEycHg7CiAgICBiYWNrZ3JvdW5kOiAjY2NjOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgbWFyZ2luOiAwIDVweCAwIDVweDsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KLmxlZ2VuZC1wb2ludC1saW5lIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHdpZHRoOiAyNHB4OwogICAgaGVpZ2h0OiAxcHg7CiAgICB0b3A6IDZweDsKICAgIGxlZnQ6IC02cHg7CiAgICBiYWNrZ3JvdW5kOiAjY2NjOwp9Ci5sZWdlbmQtaXRlbSAubGVnZW5kLXRpdGxlIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHBhZGRpbmc6IDAgM3B4OwogICAgbGluZS1oZWlnaHQ6IDI0cHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5mb3JtLWxhYmVsIHsKICAgIHdpZHRoOiAxMDAlOwogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgbWFyZ2luOiAxMHB4IDA7Cn0KLmZvcm0tbGFiZWwgcCB7CiAgICBtYXJnaW46IDA7CiAgICBjb2xvcjogIzMwMzEzMzsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGZvbnQtd2VpZ2h0OiA2MDA7Cn0KLmZvcm0tbGFiZWwgLmZvcm0tbGFiZWwtcmVzIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkY2RmZTY7CiAgICBjb2xvcjogIzYwNjI2NjsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIHBhZGRpbmc6IDRweCAzcHg7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICB3aWR0aDogMTAwJTsKICAgIG1heC13aWR0aDogMjAwcHg7CiAgICB0ZXh0LWluZGVudDogM3B4OwogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQouZm9ybS1sYWJlbC10b3AgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgbWFyZ2luOiAxMHB4IDA7CiAgICBwYWRkaW5nOiAwIDIwcHg7Cn0KLmZvcm0tbGFiZWwtdG9wIHAgewogICAgbWFyZ2luOiAwOwogICAgY29sb3I6ICMzMDMxMzM7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBmb250LXdlaWdodDogNjAwOwp9Ci5mb3JtLWxhYmVsLXRvcCAuZm9ybS1sYWJlbC1yZXMgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgYm9yZGVyOiAxcHggc29saWQgI2RjZGZlNjsKICAgIGNvbG9yOiAjNjA2MjY2OwogICAgZm9udC1zaXplOiAxNHB4OwogICAgcGFkZGluZzogNHB4IDNweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIHdpZHRoOiAxMDAlOwogICAgdGV4dC1pbmRlbnQ6IDNweDsKfQouY29udHJsYnRucyB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBtYXJnaW4tbGVmdDogMjBweDsKICAgIHotaW5kZXg6IDk5OTsKfQouY29udHJsYnRucyAuY29udHJsYnRuc2lucHV0IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICBtYXJnaW46IDAgNXB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgZm9udC1zaXplOiAxMnB4Owp9Ci5yZWZyZXNoYnRuIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG1hcmdpbi1yaWdodDogMTBweDsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KLnRvb2wtYm94IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIG1hcmdpbi1sZWZ0OiAyMHB4Owp9Cg=="},{"version":3,"sources":["apparatus.vue"],"names":[],"mappingsksfile":"apparatus.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"apparatus\">\n        <p class=\"page-title\">\n            <span class=\"tool-box\" v-show=\"pageSize == true\">\n                <!-- <el-popover placement=\"left\" width=\"480\" trigger=\"hover\">\n                    <span class=\"contrlbtns\">\n                        <el-button type='success' @click=\"resetEcharts\" size=\"mini\">重置视图</el-button>\n                        <el-button type='primary' size=\"mini\" @click=\"changeEchartsDataZoom(0)\">减少显示数据</el-button>\n                        <span class=\"contrlbtnsinput\">当前总共显示{{echartsDataZoom}}秒数据</span>\n                        <el-button type='primary' @click=\"changeEchartsDataZoom(1)\" size=\"mini\">增加显示数据</el-button>\n                    </span>\n                    <i title=\"更多操作\" slot=\"reference\" class=\"el-icon-warning refreshbtn\"></i>\n                </el-popover> -->\n                <!-- <el-button type='success' @click=\"resetEcharts\" size=\"mini\">重置视图</el-button> -->\n                <!-- <el-button type='primary' size=\"mini\" @click=\"changeEchartsDataZoom(0)\">减少显示数据</el-button>\n                <span class=\"contrlbtnsinput\">当前总共显示{{echartsDataZoom}}秒数据</span>\n                <el-button type='primary' @click=\"changeEchartsDataZoom(1)\" size=\"mini\">增加显示数据</el-button> -->\n                <!-- <span class=\"legend-item\" v-for=\"(item , $index) in legendArray\" :key=\"$index\">\n                    <span class=\"legend-point\" :style=\"{'background':item.color}\" @click=\"showLine(item.id)\">\n                        <span :style=\"{'background':item.color}\" class=\"legend-point-line\"></span>\n                    </span>\n                    <span class=\"legend-title\" @click=\"showYAxisAndWeightLine(item)\">{{item.name}}</span>\n                </span> -->\n            </span>\n            <span class=\"close-btn\" style=\"right:20px\" @click=\"handleSize('apparatus')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n            <span class=\"close-btn\" @click=\"closeItem('apparatus')\"><i class=\"el-icon-circle-close\"></i></span>\n        </p>\n        <div class=\"apparatus-content\">\n            <div class=\"bigScreen\" v-show=\"pageSize == true\">\n                <!-- <div id=\"myChart\" :style=\"{ width: '85%', height: '500px',zIndex:'9',display:'none' }\"></div> -->\n                <div id=\"myChartGL\" :style=\"{ width: '85%', height: '500px',zIndex:'9' }\"></div>\n                <div class=\"apparatus-from-content\">\n                    <div class=\"apparatus-from-content-1\">\n                        <div class=\"top-input\">\n                            <div class=\"form-label-top\">\n                                <p>数据时间</p>\n                                <span class=\"form-label-res\">\n                                    {{form.getDataTime}}\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"from-content\">\n                            <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                                <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                                <span class=\"form-label-res\">\n                                    {{item.vals | formatterDecimals}}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div v-show=\"pageSize == false\" class=\"smellScreen\">\n                <div class=\"top-input-1\">\n                    <div class=\"form-label\">\n                        <p>数据时间</p>\n                        <span class=\"form-label-res\" style=\"max-width: 200px;\">\n                            {{form.getDataTime}}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"grid-content\">\n                    <div style=\"width:100%;height:84px\"></div>\n                    <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                        <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                        <span class=\"form-label-res\">\n                            {{item.vals | formatterDecimals}}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n    name: 'apparatus',\n    data() {\n        return {\n            setInterval: null,\n            settimeouts: null,\n            thisTimes: '',\n            limit: 1,\n            iconName: 'el-icon-right',\n            colorArray: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700'],\n            legendArray: [],\n            form: {\n                getDataTime: '0',\n            },\n            myChartGL: \"\",\n            optionGL: {\n                legend: {\n                    show: false,\n                    orient: 'vertical',\n                    right: 20,\n                    icon: 'roundRect',\n                    textStyle: {\n                        color: '#000'\n                    }\n                },\n                grid3D: {\n                    boxWidth: 240,\n                    boxHeight: 100,\n                    boxDepth: 100,\n                    viewControl: {\n                        projection: 'perspective',\n                        distance: 200,\n                        damping: 0,\n                        alpha: 15,\n                        beta: 8\n                    },\n                    top: 0,\n                    axisTick: {\n                        show: false,\n                    }\n                },\n                backgroundColor: '#fff',\n                visualMap: {\n                    show: false,\n                    dimension: 2,\n                    min: 0,\n                    max: 30,\n                    inRange: {\n                        color: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700']\n                    }\n                },\n                xAxis3D: {\n                    type: 'category',\n                    name: '',\n                    data: [],\n                    axisLabel: {\n                        show: false,\n                        interval: 0  //使x轴都显示\n                    },\n                    splitLine: {\n                        show: true,\n                        interval: 10\n                    }\n                },\n                yAxis3D: {\n                    type: 'category',\n                    name: '',\n                    data: [],\n                    axisLabel: {\n                        show: true,\n                        interval: 0   //使y轴都显示\n                    }\n                },\n                zAxis3D: {\n                    type: 'value',\n                    name: ''\n                },\n                series: []\n            },\n            globelNum: 0,\n            formArray: [],\n            formArrayGL: [],\n            chartsArray: [],\n            chartsArrayGL: [],\n            isEnter: false,\n            echartsDataZoom: 100,\n            clearEchartsInterval: null,\n            count: 0,\n            optionGLSeriesData: [],\n            nowDeep: 0,\n            // devDeep: this.$devDeep\n        }\n    },\n    computed: {\n\n    },\n    created() {\n        this.echartsDataZoom = Number(localStorage.getItem('echartsDataZoom'))\n        if (isNaN(this.echartsDataZoom)) {\n            this.echartsDataZoom = 300\n        }\n        if (this.echartsDataZoom < 100) {\n            this.echartsDataZoom = 100\n        }\n        if (this.echartsDataZoom > 3000) {\n            this.echartsDataZoom = 3000\n        }\n    },\n    beforeMount() {\n    },\n    mounted() {\n        // console.log(this.devDeep)\n        this.getishow()\n        this.getMissionDeep()\n        document.getElementsByClassName('apparatus-from-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementsByClassName('grid-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementById('myChartGL').style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        let _this = this;\n        window.onresize = function () {\n            _this.myChartGL.resize()\n        }\n        this.getDataSec();\n        this.clearEcharts();\n    },\n    filters: {\n        formatterDecimals(val) {\n            if (val == null) {\n                return 0\n            } else if (val == 0) {\n                return 0\n            } else if (typeof val == 'string') {\n                return val\n            } else {\n                return val.toFixed(4)\n            }\n        }\n    },\n    props: {\n        pageSize: Boolean,\n    },\n    watch: {\n        pageSize(newVal, oldVal) {\n            console.log(oldVal)\n            if (newVal == false) {\n                this.iconName = 'el-icon-back'\n            } else {\n                this.iconName = 'el-icon-right'\n            }\n        },\n        // devDeep(newVal, oldVal) {\n        //     console.log(newVal, oldVal)\n        // }\n    },\n    methods: {\n        /**\n         * @description:获取ishow  初始化Echarts的option的yAxis与series \n         * @param {*}\n         * @return {*}\n         */\n        async getishow() {\n            let _this = this;\n            let result = await request({\n                url: \"sys-define/get_ishow_define\",\n                method: \"get\"\n            });\n            try {\n                _this.formArray = JSON.parse(JSON.stringify(result.data));\n                _this.formArrayGL = JSON.parse(JSON.stringify(result.data));\n                if (_this.formArrayGL.length > 0) {\n                    for (let i in _this.formArrayGL) {\n                        if (_this.formArrayGL[i].showInChart == 1) {\n                            _this.chartsArrayGL.push(_this.formArrayGL[i])\n                        }\n                    }\n                    for (let i in _this.chartsArrayGL) {\n                        _this.chartsArrayGL[i].min = 0;\n                        _this.chartsArrayGL[i].max = 0;\n                        _this.optionGL.yAxis3D.data.push({\n                            id: _this.chartsArrayGL[i].serialNo,\n                            value: _this.chartsArrayGL[i].dataName,\n                            position: 'left',\n                            type: 'value',\n                            show: i == 0 ? true : false,\n                            valueEn: _this.chartsArrayGL[i].fieldName,\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 'dataMin' : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 'dataMax' : _this.chartsArrayGL[i].upperLimit,\n                        })\n                        _this.optionGL.series.push({\n                            type: 'line3D',\n                            name: _this.chartsArrayGL[i].dataName,\n                            filed: _this.chartsArrayGL[i].fieldName,\n                            lineStyle: {\n                                // width: 8,\n                            },\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 0 : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 0 : _this.chartsArrayGL[i].upperLimit,\n                            data: []    //每个区的数据一一对应\n                        });\n                        _this.optionGL.series.push({\n                            type: 'scatter3D',\n                            name: _this.chartsArrayGL[i].dataName,\n                            filed: _this.chartsArrayGL[i].fieldName,\n                            symbol: 'circle',\n                            symbolSize: 5,\n                            itemStyle: {\n                                opacity: 1,\n                            },\n                            min: _this.chartsArrayGL[i].lowerLimit == null ? 0 : _this.chartsArrayGL[i].lowerLimit,\n                            max: _this.chartsArrayGL[i].upperLimit == null ? 0 : _this.chartsArrayGL[i].upperLimit,\n                            label: {  //当type为scatter3D时有label出现\n                                show: false,\n                                position: 'bottom',\n                                distance: 0,\n                                // textStyle: {\n                                //     fontSize: 12,\n                                //     borderWidth: 0,\n                                //     backgroundColor: 'transparent'\n                                // }\n                            },\n                            data: []    //每个区的数据一一对应\n                        });\n                        let ar = [];\n                        // ar.push(null);\n                        // ar.push(_this.chartsArrayGL[i].dataName);\n                        // ar.push(0)\n                        _this.optionGLSeriesData.push(ar)\n                    }\n                    console.log(_this.optionGL);\n                    console.log(_this.optionGLSeriesData)\n                    console.log(_this.chartsArrayGL);\n                    _this.drawLine()\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 初始化Echarts，监听父容器大小自适应宽度、高度\n         * @param {*}\n         * @return {*}\n         */\n        drawLine() {\n            let _this = this;\n            this.myChartGL = this.$echarts.getInstanceByDom(document.getElementById(\"myChartGL\"));\n            if (this.myChartGL === undefined) {\n                this.myChartGL = this.$echarts.init(document.getElementById(\"myChartGL\"));\n            }\n            this.myChartGL.setOption(this.optionGL, true);\n\n            let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n            let erd = elementResizeDetectorMaker();\n            let worldMapContainer = document.getElementById('apparatus');\n            erd.listenTo(worldMapContainer, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementById(\"myChartGL\").style.width = element.offsetWidth + 'px';\n                    _this.myChartGL.resize(); //变化重新渲染饼图\n                })\n            });\n            let apparatusContent = document.getElementsByClassName('apparatus-content')[0];\n            /**\n             * 监听任务内容框是否缩小\n             * */\n            erd.listenTo(apparatusContent, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementsByClassName('apparatus-from-content')[0].style.height = element.clientHeight + 'px';\n                    document.getElementsByClassName('grid-content')[0].style.height = element.clientHeight + 'px';\n                    document.getElementById('myChartGL').style.height = element.clientHeight + 'px';\n                    document.getElementById(\"myChartGL\").style.width = element.offsetWidth + 'px';\n                    _this.myChartGL.resize(); //变化重新渲染饼图\n                })\n            });\n        },\n        /**\n         * @description: 定时器\n         * @param {*}\n         * @return {*}\n         */\n        getDataSec() {\n            let _this = this;\n            window.clearInterval(_this.setInterval);\n            _this.setInterval = setInterval(() => {\n                _this.getApparatusData({\n                    thisTimes: _this.thisTimes,\n                    limit: _this.limit\n                })\n            }, 1000)\n        },\n        /**\n         * @description: 获取Echarts数据\n         * @param {*}\n         * @return {*}\n         */\n        async getApparatusData(row) {\n            let _this = this;\n            let result = await request({\n                url: \"realtime\",\n                method: \"get\",\n                params: {\n                    start_time: row.thisTimes,\n                    limit: row.limit,\n                }\n            });\n            try {\n                /**\n                 * 初始化Echarts  X轴\n                */\n                if (result.data.length > 0) {\n                    let resultUseCharts = JSON.parse(JSON.stringify(result));\n                    // console.log(_this.optionGLSeriesData)\n                    // console.log(resultUseCharts)\n                    for (let kk in resultUseCharts.data) {\n                        for (let i in resultUseCharts.data[kk]) {\n                            if (typeof resultUseCharts.data[kk][i] == 'number') {\n                                resultUseCharts.data[kk][i] = resultUseCharts.data[kk][i] == null ? 0 : Number(resultUseCharts.data[kk][i].toFixed(2))\n                            }\n                        }\n                    }\n                    if (_this.globelNum == 0) {\n                        _this.renderEcharts(resultUseCharts, true)\n                    } else {\n                        _this.renderEcharts(resultUseCharts, false)\n                    }\n                    _this.globelNum += 1;\n                    // 获取时间\n                    _this.form = {\n                        getDataTime: result.data[0].timeTag,\n                    };\n                    _this.thisTimes = result.data[0].timeTag;\n\n                    let resultdata = result.data[0]\n                    // input框赋值\n                    for (let i in _this.formArray) {\n                        for (let j in resultdata) {\n                            if (_this.formArray[i].fieldName == j) {\n                                _this.formArray[i].vals = resultdata[j];\n                            }\n                        }\n                    }\n                    _this.limit = '';\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 动态更新Echarts的option\n         * @param {*} result\n         * @param {*} isFirst\n         * @return {*}\n         */\n        renderEcharts(result, isFirst) {\n            let _this = this;\n            if (!_this.myChartGL) {\n                return\n            }\n            let optionsGL = _this.myChartGL.getOption();\n            let useRollData = result.data;\n            if (useRollData.length > 1) {\n                useRollData.reverse();\n            }\n            // console.log(optionsGL)\n            for (let kk in useRollData) {\n                // 初始化 X 轴数量\n                if (isFirst == true) {\n                    for (let i = 0; i < _this.echartsDataZoom; i++) {\n                        optionsGL.xAxis3D[0].data.push(_this.formatterTimes(useRollData[kk].timeTag, i))\n                    }\n                }\n                if (optionsGL.xAxis3D[0].data.indexOf(useRollData[kk].timeTag) == -1) {\n                    optionsGL.xAxis3D[0].data.push(useRollData[kk].timeTag)\n                }\n                let line3DData = [];\n                let resultdata = useRollData[kk];\n                for (let iiii in optionsGL.series) {\n                    if (optionsGL.series[iiii].type == 'line3D') {\n                        line3DData.push(optionsGL.series[iiii])\n                    }\n                }\n                for (let iii in line3DData) {\n                    let ar = [];\n                    ar.push(resultdata.timeTag);\n                    ar.push(line3DData[iii].name);\n                    for (let j in resultdata) {\n                        if (j == line3DData[iii].filed) {\n                            ar.push(resultdata[j]);\n                        }\n                    }\n                    _this.optionGLSeriesData[iii].push(ar)\n                }\n                // console.log(optionsGL.series)\n                for (let ii in optionsGL.series) {\n                    for (let jj = 0; jj < _this.optionGLSeriesData.length; jj++) {\n                        if (optionsGL.series[ii].name == _this.optionGLSeriesData[jj][0][1]) {\n                            // console.log(optionsGL.series[ii].min)\n                            // console.log(optionsGL.series[ii].max)\n                            // return\n                            if (optionsGL.series[ii].max == 0) {\n                                optionsGL.series[ii].max = _this.nowDeep\n                            }\n                            let oldmin, oldmax, oldresult, newmax, newresult;\n                            oldmin = optionsGL.series[ii].min;\n                            oldmax = optionsGL.series[ii].max;\n                            oldresult = Math.round(_this.optionGLSeriesData[jj][0][2] - optionsGL.series[ii].min);\n                            // newmin = 0;\n                            newmax = oldmax - oldmin;\n                            newresult = Math.round(oldresult / newmax * 100)\n\n                            // let newresult = Math.round((_this.optionGLSeriesData[jj][0][2] - optionsGL.series[ii].min) / (optionsGL.series[ii].max - optionsGL.series[ii].min) * 100);\n                            console.log(newresult)\n                            debugger\n                            _this.optionGLSeriesData[jj][0][2] = newresult\n                            optionsGL.series[ii].data = _this.optionGLSeriesData[jj]\n                        }\n                    }\n\n                }\n                /**\n                 *  固定X轴数量与series的数量\n                */\n                if (optionsGL.xAxis3D[0].data.length > _this.echartsDataZoom) {\n                    optionsGL.xAxis3D[0].data.splice(0, (optionsGL.xAxis3D[0].data.length - _this.echartsDataZoom));\n                }\n                for (let i = 0; i < optionsGL.series.length; i++) {\n                    if (optionsGL.series[i].data.length > _this.echartsDataZoom) {\n                        optionsGL.series[i].data.splice(0, (optionsGL.series[i].data.length - _this.echartsDataZoom));\n                    }\n                }\n            }\n            _this.myChartGL.setOption(optionsGL);\n\n        },\n        /**\n         * @description: 获取任务投放深度\n         * @param {*}\n         * @return {*}\n         */\n        async getMissionDeep() {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_current_job\",\n                method: \"get\"\n            });\n            // console.log(result, \"result\");\n            try {\n                // console.log(result);\n                // _this.nowDeep = 0;\n                if (result.data.length > 0) {\n                    _this.nowDeep = result.data[0].setDeep\n                } else {\n                    _this.nowDeep = 100;\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        /**\n         * @description:关闭当前组件窗口 \n         * @param {*} ele\n         * @return {*}\n         */\n        closeItem(ele) {\n            this.$emit('sendEleName', ele);\n        },\n        /**\n         * @description: 放大缩小当前组件窗口\n         * @param {*} ele\n         * @return {*}\n         */\n        handleSize(ele) {\n            if (this.pageSize == true) {\n                this.pageSize = false;\n            } else {\n                this.pageSize = true;\n            }\n            this.$emit('contrlEleName', {\n                ele: ele,\n                switch: this.pageSize\n            });\n        },\n        /**\n         * @description: 清理Echarts\n         * @param {*}\n         * @return {*}\n         */\n        clearEcharts() {\n            let _this = this;\n            window.clearInterval(_this.clearEchartsInterval)\n            _this.clearEchartsInterval = setInterval(() => {\n                let a = this.myChartGL.getOption();\n                _this.myChartGL.clear();\n                _this.myChartGL.setOption(a);\n                a = null;\n            }, 1000 * 60 * 15)\n        },\n        /**\n         * @description: 格式化时间+1s\n         * @param {*} time\n         * @param {*} sum\n         * @return {*}\n         */\n        formatterTimes(time, sum) {\n            let date = time;\n            if (!date) {\n                return\n            }\n            date = date.substring(0, 19);\n            date = date.replace(/-/g, '/');\n            let timestamp = new Date(date).getTime();\n            if (sum == 0) {\n                timestamp;\n            } else {\n                timestamp = timestamp += (sum * 1000);\n            }\n            var d = new Date(timestamp);\n            var dates = (d.getFullYear()) + \"-\" +\n                (d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1) + \"-\" +\n                (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + \" \" +\n                (d.getHours() < 10 ? '0' + d.getHours() : d.getHours()) + \":\" +\n                (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + \":\" +\n                (d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds());\n            return dates\n        },\n        /**\n         * @description: 改变Echarts的zoom值\n         * @param {*} type\n         * @return {*}\n         */\n        changeEchartsDataZoom(type) {\n            // let _this = this;\n            // if (type == 1) {\n            //     this.echartsDataZoom += 100\n            //     if (this.echartsDataZoom > 3000) {\n            //         this.echartsDataZoom = 3000\n            //     }\n            // } else {\n            //     this.echartsDataZoom -= 100\n            //     if (this.echartsDataZoom < 100) {\n            //         this.echartsDataZoom = 100\n            //     }\n            // }\n            // let a = _this.myChart.getOption();\n            // let t = a.xAxis[0].data[a.xAxis[0].data.length - 1];\n            // let l = a.xAxis[0].data.length;\n            // if (a.xAxis[0].data.length < this.echartsDataZoom) {\n            //     for (let i = 0; i < _this.echartsDataZoom - l; i++) {\n            //         a.xAxis[0].data.push(_this.formatterTimes(t, i))\n            //     }\n            // }\n            // _this.myChart.setOption(a);\n        },\n        /**\n         * @description: 重置图表配置\n         * @param {*}\n         * @return {*}\n         */\n        // resetEcharts() {\n        //     let _this = this;\n        //     let options = _this.myChart.getOption();\n        //     for (let i in options.yAxis) {\n        //         options.yAxis[i].show = false;\n        //     }\n        //     for (let i in options.series) {\n        //         options.series[i].lineStyle.width = 2;\n        //     }\n        //     options.yAxis[0].show = true;\n        //     options.dataZoom[0].start = 0;\n        //     options.dataZoom[0].end = 100;\n        //     _this.myChart.setOption(options);\n        // },\n        /**\n         * @description: 点击legend  文字显示Y轴与线条加粗\n         * @param {*}\n         * @return {*}\n         */\n        // showYAxisAndWeightLine(row) {\n        //     let _this = this;\n        //     // return\n        //     let options = _this.myChart.getOption();\n        //     for (let i in options.yAxis) {\n        //         options.yAxis[i].show = false;\n        //         if (options.yAxis[i].id == row.id) {\n        //             if (row.sameAs == null) {\n        //                 options.yAxis[i].show = true;\n        //                 if (options.series[i].lineStyle.width == 2) {\n        //                     options.series[i].lineStyle.width = 4\n        //                 } else {\n        //                     options.series[i].lineStyle.width = 2\n        //                 }\n        //             } else {\n        //                 for (let k in options.yAxis) {\n        //                     if (options.yAxis[k].id == row.sameAs) {\n        //                         options.yAxis[k].show = true;\n        //                         if (options.series[i].lineStyle.width == 4) {\n        //                             options.series[i].lineStyle.width = 2\n        //                         } else {\n        //                             options.series[i].lineStyle.width = 4\n        //                         }\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     _this.myChart.setOption(options);\n        // },\n        /**\n         * @description: 点击圆点显示折线\n         * @param {*}\n         * @return {*}\n         */\n        // showLine(row) {\n        //     let _this = this\n        //     let options = _this.myChart.getOption()\n        //     for (let i in options.yAxis) {\n        //         if (options.series[i].id == row) {\n        //             if (options.series[i].lineStyle.width == 0) {\n        //                 options.series[i].lineStyle.width = 2;\n        //             } else {\n        //                 options.series[i].lineStyle.width = 0;\n        //             }\n        //         }\n        //     }\n        //     _this.myChart.setOption(options);\n        // },\n\n    }\n}\n</script>\n\n<style scoped>\n.apparatus-content {\n    height: 94%;\n}\n\n.bigScreen {\n    height: 100%;\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n}\n.smellScreen {\n    height: 100%;\n    position: relative;\n    overflow-x: auto;\n}\n.smellScreen::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.from-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 20px;\n    margin-top: 96px;\n    z-index: 99;\n}\n.apparatus-from-content {\n    height: 100%;\n    overflow: hidden;\n    width: 15%;\n    border-left: 1px solid #eee;\n    position: relative;\n}\n.apparatus-from-content::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.apparatus-from-content-1 {\n    height: 100%;\n    overflow: auto;\n    width: 100%;\n    border-left: 1px solid #eee;\n}\n.apparatus-from-content-1::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n\n.page-title {\n    height: 32px;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    border-bottom: 1px solid #eee;\n    cursor: default;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    z-index: 1999;\n    padding-bottom: 5px;\n}\n.page-title .page-title-span {\n    font-size: 16px;\n    color: #409eff;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.page-title .close-btn:hover {\n    color: #5cb6ff;\n}\n.grid-content {\n    padding: 0 20px;\n    z-index: 99;\n    position: relative;\n}\n.grid-content::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.from-content-1 {\n    margin-top: 85px;\n}\n.from-content-1 .el-form-item {\n    margin-bottom: 6px;\n}\n.myChart {\n    border-right: 1px solid #ccc;\n}\n.top-input {\n    cursor: default;\n    margin-bottom: 18px;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    width: 100%;\n}\n.top-input p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.top-input-1 {\n    width: 100%;\n    cursor: default;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    padding: 0 20px;\n}\n.top-input-1 p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.legend-item {\n    display: inline-block;\n    padding: 0 4px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.legend-item .legend-point {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    background: #ccc;\n    border-radius: 50%;\n    position: relative;\n    margin: 0 5px 0 5px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.legend-point-line {\n    display: inline-block;\n    position: absolute;\n    width: 24px;\n    height: 1px;\n    top: 6px;\n    left: -6px;\n    background: #ccc;\n}\n.legend-item .legend-title {\n    font-size: 12px;\n    display: inline-block;\n    padding: 0 3px;\n    line-height: 24px;\n    cursor: pointer;\n}\n\n.form-label {\n    width: 100%;\n    cursor: default;\n    margin: 10px 0;\n}\n.form-label p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    max-width: 200px;\n    text-indent: 3px;\n    white-space: nowrap;\n}\n.form-label-top {\n    cursor: default;\n    margin: 10px 0;\n    padding: 0 20px;\n}\n.form-label-top p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label-top .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    text-indent: 3px;\n}\n.contrlbtns {\n    display: inline-block;\n    margin-left: 20px;\n    z-index: 999;\n}\n.contrlbtns .contrlbtnsinput {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 5px;\n    text-align: center;\n    font-size: 12px;\n}\n.refreshbtn {\n    display: inline-block;\n    margin-right: 10px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.tool-box {\n    display: inline-block;\n    margin-left: 20px;\n}\n</style>"]}]}