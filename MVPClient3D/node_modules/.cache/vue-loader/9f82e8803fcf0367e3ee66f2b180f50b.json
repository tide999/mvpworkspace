{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/winch.vue?vue&type=style&index=0&id=683d94e1&scoped=true&lang=css&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/src/components/winch.vue","mtime":1605581211229},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient3D/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["winch.vue"],"names":[],"mappingsufile":"winch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"winch\">\n        <p class=\"page-title\">\n            <span style=\"display:inline-block;margin-left:60px\" v-show=\"pageSize == false\">\n                <el-popover placement=\"left\" width=\"480\" trigger=\"hover\">\n                    <span class=\"contrlbtns\">\n                        <el-button type='success' @click=\"resetEcharts\" size=\"mini\">重置视图</el-button>\n                        <el-button type='primary' size=\"mini\" @click=\"changeEchartsDataZoom(0)\">减少显示数据</el-button>\n                        <span class=\"contrlbtnsinput\">当前总共显示{{echartsDataZoom}}秒数据</span>\n                        <el-button type='primary' @click=\"changeEchartsDataZoom(1)\" size=\"mini\">增加显示数据</el-button>\n                    </span>\n                    <i title=\"更多操作\" slot=\"reference\" class=\"el-icon-warning refreshbtn\"></i>\n                </el-popover>\n                <span class=\"legend-item\" v-for=\"(item , $index) in legendArray\" :key=\"$index\">\n                    <span class=\"legend-point\" :style=\"{'background':item.color}\" @click=\"showLine(item.id)\">\n                        <span :style=\"{'background':item.color}\" class=\"legend-point-line\"></span>\n                    </span>\n                    <span class=\"legend-title\" @click=\"showYAxisAndWeightLine(item)\">{{item.name}}</span>\n                </span>\n            </span>\n            <span class=\"close-btn\" style=\"right:20px\" @click=\"handleSize('winch')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n            <span class=\"close-btn\" @click=\"closeItem('winch')\"><i class=\"el-icon-circle-close\"></i></span>\n        </p>\n        <div class=\"winch-content\">\n            <div v-show=\"pageSize == true\">\n                <div class=\"input-area-1\">\n                    <div class=\"top-input-1\">\n                        <div class=\"form-label\">\n                            <p>数据时间</p>\n                            <span class=\"form-label-res\" style=\"max-width: 200px;\">\n                                {{form.getDataTime}}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"grid-content\">\n                        <div style=\"width:100%;height:90px\"></div>\n                        <div>\n                            <el-checkbox disabled v-for=\"(item, $index) in checkboxarray[0].arr[0].array\" :key=\"$index\" :label=\"item.dataValue\" v-model=\"item.checked\" :name=\"item.dataValue\">{{item.dataDescription}}</el-checkbox>\n                        </div>\n                        <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                            <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                            <span class=\"form-label-res\">\n                                {{item.vals | formatterDecimals}}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div v-show=\"pageSize == false\" style=\"height:100%;overflow:hidden\">\n                <div class=\"bigScreen\">\n                    <div class=\"leftScreen\">\n                        <div class=\"leftScreen-inside\">\n                            <div id=\"myChart1\" :style=\"{ width: '100%',zIndex:'9' }\"></div>\n                            <div class=\"checkbox-content\">\n                                <!-- <el-collapse v-model=\"activeNames\" @change=\"changeCollapse\">\n                                    <el-collapse-item class=\"checkbox-group\" v-for=\"(item, $index) in checkboxarray\" :key=\"$index\" :name=\"$index + 1\" v-if=\"$index < 1\">\n                                        <template slot=\"title\" v-if=\"activeNames.indexOf($index + 1) < 0\">\n                                            <div class=\"checkbox-box\" v-if=\"$index < 1\">\n                                                <el-checkbox disabled v-for=\"(itt, iss) in item.arr[0].array\" :key=\"iss\" :label=\"itt.dataValue\" v-model=\"itt.checked\" :name=\"itt.dataValue\" v-if=\"iss < 4\">{{itt.dataDescription}}</el-checkbox>\n                                            </div>\n                                        </template>\n                                        <div v-if=\"$index < 1\">\n                                            <div v-for=\"(it, is) in item.arr\" :key=\"is\" class=\"checkbox-box\">\n                                                <el-checkbox disabled v-for=\"(itt, iss) in it.array\" :key=\"iss\" :label=\"itt.dataValue\" v-model=\"itt.checked\" :name=\"itt.dataValue\">{{itt.dataDescription}}</el-checkbox>\n                                            </div>\n                                        </div>\n                                    </el-collapse-item>\n                                </el-collapse> -->\n                                <div class=\"checkbox-box\">\n                                    <el-checkbox disabled v-for=\"(item, $index) in checkboxarray[0].arr[0].array\" :key=\"$index\" :label=\"item.dataValue\" v-model=\"item.checked\" :name=\"item.dataValue\">{{item.dataDescription}}</el-checkbox>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"input-area-box\">\n                        <div class=\"top-input\">\n                            <div class=\"form-label-top\">\n                                <p>数据时间</p>\n                                <span class=\"form-label-res\">\n                                    {{form.getDataTime}}\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"input-area\">\n                            <div class=\"from-content\">\n                                <div class=\"form-label\" v-for=\"(item, $index) in formArray\" :key=\"$index\" :label=\"item.dataName + '(' + item.dataUnit + ')'\">\n                                    <p>{{item.dataName}} <span v-if=\"item.dataUnit!= null\">({{item.dataUnit}})</span></p>\n                                    <span class=\"form-label-res\">\n                                        {{item.vals | formatterDecimals}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n    name: 'winch',\n    data() {\n        return {\n            activeNames: [1, 2, 3],\n            readyRenderCheckboxData: false,\n            globelNum: 0,\n            formArray: [],\n            chartsArray: [],\n            isEnter: false,\n            echartsDataZoom: 300,\n            colorArray: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700'],\n            legendArray: [],\n            checkvalueArray: [],\n            checkList: [3, 5, 6],\n            checkList1: [6],\n            checkList2: [3],\n            userlevel: 0,\n            thisTimes: '',\n            limit: 1,\n            form: { getDataTime: '0' },\n            iconName: 'el-icon-right',\n            labelPosition: 'top',\n            sizeForm: {\n                ropeLengthMet: '',\n                pullRopeSpeed: '',\n                type: [1, 4],\n                collectSpeed: '',\n                ropeBar: '',\n                fuelTmp: '',\n                handleImport: '',\n                proportionalExport: '',\n                brakeBar: '',\n            },\n            checkboxarray: [{ arr: [{ array: [] }] }],\n            myChart1: \"\",\n            option: {\n                title: {\n                    text: ''\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                color: ['#0000FF', '#DC143C', '#800080', '#5F9EA0', '#FF8C00', '#48D1CC', '#696969', '#006400', '#8B4513', '#FFD700'],\n                grid: {\n                    left: '5%',\n                    right: '5%',\n                    bottom: '5%',\n                    containLabel: false\n                },\n                dataZoom: [\n                    {\n                        type: 'inside',\n                    },\n                ],\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: [],\n                    axisLine: { show: true, lineStyle: { color: '#FFFFFF' } },\n                    axisTick: { show: false },\n                    splitLine: { show: false },\n                    axisLabel: {\n                        show: false\n                    }\n                },\n                yAxis: [],\n                series: []\n            },\n            clearEchartsInterval: null,\n            settimeouts: null,\n            count: 0,\n        }\n    },\n    watch: {\n        pageSize(newVal, oldVal) {\n            if (newVal == true) {\n                this.iconName = 'el-icon-right'\n            } else {\n                this.iconName = 'el-icon-back'\n            }\n        }\n    },\n    filters: {\n        formatterDecimals(val) {\n            if (val == null) {\n                return 0\n            } else if (val == 0) {\n                return 0\n            } else if (typeof val == 'string') {\n                return val\n            } else {\n                return val.toFixed(4)\n            }\n        }\n    },\n    props: {\n        pageSize: Boolean,\n    },\n    created() {\n        this.echartsDataZoom = Number(localStorage.getItem('echartsDataZoom'))\n        if (isNaN(this.echartsDataZoom)) {\n            this.echartsDataZoom = 300\n        }\n        if (this.echartsDataZoom < 100) {\n            this.echartsDataZoom = 100\n        }\n        if (this.echartsDataZoom > 3000) {\n            this.echartsDataZoom = 3000\n        }\n        // console.log(this.echartsDataZoom)\n    },\n    beforeMount() {\n    },\n    mounted() {\n        this.getStatusDefine();\n        this.getwshow();\n        document.getElementsByClassName('input-area')[0].style.height = (document.getElementById('winch').clientHeight - 40) + 'px';\n        document.getElementsByClassName('input-area-1')[0].style.height = (document.getElementById('winch').clientHeight - 40) + 'px';\n        let _this = this;\n        window.onresize = function () {\n            _this.myChart1.resize()\n        }\n        this.getDataSec();\n        this.clearEcharts()\n    },\n    methods: {\n        changeCollapse(event) {\n            // console.log(event)\n        },\n        resetEcharts() {\n            let _this = this;\n            let options = _this.myChart1.getOption();\n            for (let i in options.yAxis) {\n                options.yAxis[i].show = false;\n            }\n            for (let i in options.series) {\n                options.series[i].lineStyle.width = 2;\n            }\n            options.yAxis[0].show = true;\n            options.dataZoom[0].start = 0;\n            options.dataZoom[0].end = 100;\n            _this.myChart1.setOption(options);\n        },\n        clearEcharts() {\n            let _this = this;\n            window.clearInterval(this.clearEchartsInterval)\n            this.clearEchartsInterval = setInterval(() => {\n                let a = this.myChart1.getOption();\n                this.myChart1.clear();\n                this.myChart1.setOption(a);\n                a = null;\n            }, 1000 * 60 * 15)\n        },\n        changeEchartsDataZoom(type) {\n            let _this = this;\n            if (type == 1) {\n                this.echartsDataZoom += 100\n                if (this.echartsDataZoom > 3000) {\n                    this.echartsDataZoom = 3000\n                }\n            } else {\n                this.echartsDataZoom -= 100\n                if (this.echartsDataZoom < 100) {\n                    this.echartsDataZoom = 100\n                }\n            }\n            let a = _this.myChart1.getOption();\n            let t = a.xAxis[0].data[a.xAxis[0].data.length - 1];\n            let l = a.xAxis[0].data.length;\n            if (a.xAxis[0].data.length < this.echartsDataZoom) {\n                for (let i = 0; i < _this.echartsDataZoom - l; i++) {\n                    a.xAxis[0].data.push(_this.formatterTimes(t, i))\n                }\n            } else if (a.xAxis[0].data.length > this.echartsDataZoom) {\n\n            }\n            _this.myChart1.setOption(a);\n        },\n        closeItem(ele) {\n            this.$emit('sendEleName', ele);\n        },\n        handleSize(ele) {\n            if (this.pageSize == true) {\n                this.pageSize = false;\n            } else {\n                this.pageSize = true;\n            }\n            this.$emit('contrlEleName', {\n                ele: ele,\n                switch: this.pageSize\n            });\n        },\n        /**\n         * 点击legend  文字显示Y轴与线条加粗\n         * */\n        showYAxisAndWeightLine(row) {\n            let _this = this;\n            let options = _this.myChart1.getOption();\n            for (let i in options.yAxis) {\n                options.yAxis[i].show = false;\n                if (options.yAxis[i].id == row.id) {\n                    if (row.sameAs == null) {\n                        options.yAxis[i].show = true;\n                        if (options.series[i].lineStyle.width == 2) {\n                            options.series[i].lineStyle.width = 4\n                        } else {\n                            options.series[i].lineStyle.width = 2\n                        }\n                    } else {\n                        for (let k in options.yAxis) {\n                            if (row.sameAs == options.yAxis[k].id) {\n                                options.yAxis[k].show = true;\n                                if (options.series[i].lineStyle.width == 2) {\n                                    options.series[i].lineStyle.width = 4\n                                } else {\n                                    options.series[i].lineStyle.width = 2\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            _this.myChart1.setOption(options);\n        },\n        /**\n         * 点击圆点显示折线\n         * */\n        showLine(row) {\n            let _this = this\n            let options = _this.myChart1.getOption()\n            for (let i in options.yAxis) {\n                if (options.series[i].id == row) {\n                    if (options.series[i].lineStyle.width == 0) {\n                        options.series[i].lineStyle.width = 2;\n                    } else {\n                        options.series[i].lineStyle.width = 0;\n                    }\n                }\n            }\n            _this.myChart1.setOption(options);\n        },\n        /**\n         * 格式化时间+1s\n        */\n        formatterTimes(time, sum) {\n            let date = time;\n            date = date.substring(0, 19);\n            date = date.replace(/-/g, '/');\n            let timestamp = new Date(date).getTime();\n            if (sum == 0) {\n                timestamp = timestamp;\n            } else {\n                timestamp = timestamp += (sum * 1000);\n            }\n            var d = new Date(timestamp);\n            var dates = (d.getFullYear()) + \"-\" +\n                (d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1) + \"-\" +\n                (d.getDate() < 10 ? '0' + d.getDate() : d.getDate()) + \" \" +\n                (d.getHours() < 10 ? '0' + d.getHours() : d.getHours()) + \":\" +\n                (d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes()) + \":\" +\n                (d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds());\n            return dates\n        },\n        /**\n         * 定时器\n        */\n        getDataSec() {\n            let _this = this;\n            window.clearInterval(_this.setInterval);\n            _this.setInterval = setInterval(() => {\n                _this.getWinchData({\n                    thisTimes: _this.thisTimes,\n                    limit: _this.limit\n                })\n            }, 1000)\n        },\n        /**\n         * 动态更新Echarts的option\n        */\n        renderEcharts(result, isFirst) {\n            let _this = this;\n            if (!_this.myChart1) {\n                return\n            }\n            let options = _this.myChart1.getOption();\n            let useRollData = result.data;\n            if (useRollData.length > 1) {\n                useRollData.reverse();\n            }\n            for (let kk in useRollData) {\n                if (isFirst == true) {\n                    for (let i = 0; i < _this.echartsDataZoom; i++) {\n                        options.xAxis[0].data.push(_this.formatterTimes(useRollData[kk].timeTag, i))\n                    }\n                }\n                // 初始化 X 轴数量\n                if (options.xAxis[0].data.indexOf(useRollData[kk].timeTag) == -1) {\n                    options.xAxis[0].data.push(useRollData[kk].timeTag)\n                }\n                let resultdata = useRollData[kk];\n                let seriesdata = options.series;\n                for (let i in seriesdata) {\n                    for (let j in resultdata) {\n                        if (seriesdata[i].labelName == j) {\n                            seriesdata[i].data.push(resultdata[j])\n                        }\n                    }\n                }\n                /**\n                 *  固定X轴数量与series的数量\n                */\n                if (options.xAxis[0].data.length > _this.echartsDataZoom) {\n                    options.xAxis[0].data.splice(0, (options.xAxis[0].data.length - _this.echartsDataZoom));\n                }\n                for (let i = 0; i < options.series.length; i++) {\n                    if (options.series[i].data.length > _this.echartsDataZoom) {\n                        options.series[i].data.splice(0, (options.series[i].data.length - _this.echartsDataZoom));\n                    }\n                }\n            }\n\n            _this.myChart1.setOption(options)\n        },\n        async getWinchData(row) {\n            let _this = this;\n            let result = await request({\n                url: \"winch/get_realdata\",\n                method: \"get\",\n                params: {\n                    start_time: row.thisTimes,\n                    limit: row.limit,\n                }\n            });\n            try {\n                /**\n                 * 初始化Echarts  X轴\n                */\n                if (result.data.length > 0) {\n                    let resultUseCharts = JSON.parse(JSON.stringify(result))\n                    let resultUseCharts1 = JSON.parse(JSON.stringify(result))\n                    for (let i in resultUseCharts.data[0]) {\n                        if (typeof resultUseCharts.data[0][i] == 'number') {\n                            resultUseCharts.data[0][i] = resultUseCharts.data[0][i] == null ? 0 : resultUseCharts.data[0][i].toFixed(2)\n                        }\n                    }\n                    if (_this.globelNum == 0) {\n                        _this.renderEcharts(resultUseCharts, true)\n                    } else {\n                        _this.renderEcharts(resultUseCharts, false)\n                    }\n                    _this.globelNum += 1;\n                    // 获取时间\n                    _this.form = {\n                        getDataTime: result.data[0].timeTag,\n                    };\n                    _this.thisTimes = result.data[0].timeTag;\n\n                    let resultdata = result.data[0]\n                    // input框赋值\n                    for (let i in _this.formArray) {\n                        for (let j in resultdata) {\n                            if (_this.formArray[i].fieldName == j) {\n                                _this.formArray[i].vals = resultdata[j];\n                            }\n\n                        }\n                    };\n                    for (let i in resultUseCharts1.data[0]) {\n                        for (let j in _this.checkboxarray) {\n                            for (let k in _this.checkboxarray[j].arr) {\n                                if (i == _this.checkboxarray[j].arr[k].fieldName) {\n                                    _this.checkboxarray[j].arr[k].value = resultUseCharts1.data[0][i]\n                                }\n                            }\n                        }\n                    }\n                    for (let y = 0; y < _this.checkboxarray.length; y++) {\n                        for (let u = 0; u < _this.checkboxarray[y].arr.length; u++) {\n                            for (let p = 0; p < _this.checkboxarray[y].arr[u].array.length; p++) {\n                                _this.checkboxarray[y].arr[u].array[p].checked = false;\n                                if ((_this.checkboxarray[y].arr[u].value & _this.checkboxarray[y].arr[u].array[p].dataValue) > 0) {\n                                    _this.checkboxarray[y].arr[u].array[p].checked = true\n                                }\n                            }\n                        }\n                    }\n                    // console.log(_this.checkboxarray)\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * 获取wshow\n         * */\n        async getwshow() {\n            let _this = this;\n            let result = await request({\n                url: \"sys-define/get_wshow_define\",\n                method: \"get\"\n            });\n            try {\n                _this.formArray = JSON.parse(JSON.stringify(result.data));\n\n                if (_this.formArray.length > 0) {\n                    for (let i in _this.formArray) {\n                        if (_this.formArray[i].showInChart == 1) {\n                            _this.chartsArray.push(_this.formArray[i])\n                        }\n                    }\n                    for (let i in _this.chartsArray) {\n                        _this.option.series.push({\n                            id: _this.chartsArray[i].serialNo,\n                            name: _this.chartsArray[i].dataName,\n                            type: 'line',\n                            yAxisIndex: i,\n                            symbol: 'none',\n                            smooth: true,\n                            data: [],\n                            labelName: _this.chartsArray[i].fieldName,\n                            sameAs: _this.chartsArray[i].sameAs\n                        });\n                        _this.option.yAxis.push({\n                            id: _this.chartsArray[i].serialNo,\n                            name: _this.chartsArray[i].dataName,\n                            position: 'left',\n                            type: 'value',\n                            show: i == 0 ? true : false,\n                            inverse: _this.chartsArray[i].topLeft == 1 ? true : false,\n                            axisLine: { show: true },\n                            axisTick: { show: false },\n                            splitLine: { show: true },\n                            nameLocation: _this.chartsArray[i].topLeft == 1 ? 'start' : 'end',\n                            min: _this.chartsArray[i].lowerLimit == null ? 'dataMin' : _this.chartsArray[i].lowerLimit,\n                            max: _this.chartsArray[i].upperLimit == null ? 'dataMax' : _this.chartsArray[i].upperLimit,\n                        });\n                        _this.legendArray.push({\n                            color: '',\n                            name: _this.chartsArray[i].dataName + '(' + _this.chartsArray[i].dataUnit + ')',\n                            id: _this.chartsArray[i].serialNo,\n                            sameAs: _this.chartsArray[i].sameAs\n                        })\n\n                    }\n\n                    for (let i in _this.option.yAxis) {\n                        for (let j in _this.option.series) {\n                            if (_this.option.series[j].sameAs == _this.option.yAxis[i].id) {\n                                _this.option.series[j].yAxisIndex = i\n                            }\n                        }\n                    }\n                    for (let i in _this.colorArray) {\n                        for (let j in _this.legendArray) {\n                            _this.legendArray[j].color = _this.colorArray[j]\n                        }\n                    }\n\n                    _this.drawLine()\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        drawLine() {\n            let _this = this;\n            this.myChart1 = this.$echarts.getInstanceByDom(document.getElementById(\"myChart1\"));\n            if (this.myChart1 === undefined) {\n                this.myChart1 = this.$echarts.init(document.getElementById(\"myChart1\"));\n            }\n            this.myChart1.getZr().on('mousemove', params => {\n                var pointInPixel = [params.offsetX, params.offsetY];\n                if (this.myChart1.containPixel('grid', pointInPixel)) {\n                    // if (_this.isEnter == true) {\n                    //     return\n                    // };\n                    // _this.isEnter = true;\n                    // window.clearInterval(_this.setInterval);\n\n                    // let settimeouts = null;\n                    // settimeouts = setTimeout(() => {\n                    //     _this.isEnter = false;\n                    //     _this.setInterval = setInterval(() => {\n                    //         _this.getWinchData({\n                    //             thisTimes: _this.thisTimes,\n                    //             limit: '',\n                    //         })\n                    //     }, 1000);\n                    //     window.clearTimeout(settimeouts);\n                    // }, 5000)\n\n                    if (_this.isEnter == true) {\n                        return\n                    };\n                    window.clearInterval(_this.setInterval);\n                    window.clearInterval(_this.settimeouts);\n                    _this.settimeouts = setInterval(() => {\n                        _this.isEnter = false;\n                        _this.count++\n                        if (_this.count > 6) {\n                            window.clearInterval(_this.setInterval);\n                            window.clearInterval(_this.settimeouts);\n                            _this.setInterval = setInterval(() => {\n                                _this.getWinchData({\n                                    thisTimes: _this.thisTimes,\n                                    limit: ''\n                                })\n                                _this.count = 0\n                            }, 1000)\n                        }\n                    }, 1000)\n                }\n            })\n            this.myChart1.getZr().on('mouseout', function (ev) {\n                _this.isEnter = false;\n                window.clearInterval(_this.setInterval);\n                window.clearInterval(_this.settimeouts);\n                _this.setInterval = setInterval(() => {\n                    _this.getWinchData({\n                        thisTimes: _this.thisTimes,\n                        limit: '',\n                    })\n                    _this.count = 0\n                }, 1000)\n            })\n            this.myChart1.setOption(this.option, true);\n            let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n            let erd = elementResizeDetectorMaker();\n            let winchContent = document.getElementsByClassName('winch-content')[0];\n            erd.listenTo(winchContent, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementById(\"myChart1\").style.width = '100%';\n                    _this.myChart1.resize(); //变化重新渲染饼图\n                })\n            });\n            /**\n             * 监听任务内容框是否缩小\n             * */\n            erd.listenTo(winchContent, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementsByClassName('input-area')[0].style.height = element.clientHeight + 'px';\n                    document.getElementsByClassName('input-area-1')[0].style.height = element.clientHeight + 'px';\n                    document.getElementById('myChart1').style.height = element.clientHeight - 100 + 'px';\n                    // document.getElementById('myChart1').style.height = element.clientHeight - document.getElementsByClassName('checkbox-content')[0].clientHeight + 'px';\n                    // if (document.getElementById('myChart1').clientHeight > 500) {\n                    //     document.getElementById('myChart1').style.height = element.clientHeight - document.getElementsByClassName('checkbox-content')[0].clientHeight + 'px';\n                    // } else {\n                    //     document.getElementById('myChart1').style.height = element.clientHeight - (49 * _this.checkboxarray.length) + 'px';\n                    // }\n                    _this.myChart1.resize(); //变化重新渲染饼图\n                })\n            });\n        },\n\n        async getStatusDefine() {\n            let _this = this;\n            let result = await request({\n                url: \"winch/get_status_define\",\n                method: \"get\"\n            });\n            try {\n                _this.checkboxarray = [];\n                let b = [];\n                let c = [];\n                for (let i in result.data) {\n                    if (b.indexOf(result.data[i].dataType) == -1) {\n                        b.push(result.data[i].dataType)\n                    }\n                    if (c.indexOf(result.data[i].fieldName) == -1) {\n                        c.push(result.data[i].fieldName)\n                    }\n                }\n                for (let o = 0; o < b.length; o++) {\n                    let a = {\n                        name: '',\n                        arr: [],\n                        dataType: '',\n                    };\n                    _this.checkboxarray.push(a)\n                }\n                for (let i = 0; i < b.length; i++) {\n                    for (let j = 0; j < result.data.length; j++) {\n                        if (b[i] == result.data[j].dataType) {\n                            _this.checkboxarray[i].dataType = result.data[j].dataType;\n                            if (_this.checkboxarray[i].name == '') {\n                                _this.checkboxarray[i].name = result.data[j].fieldName + ' System'\n                            }\n                            _this.checkboxarray[i].arr.push(result.data[j])\n                        }\n                    }\n                }\n\n                let aaa = [];\n                for (let i in c) {\n                    let bbb = {\n                        name: c[i],\n                        array: [],\n                        value: 0,\n                        dataType: '',\n                    };\n                    aaa.push(bbb)\n                }\n                for (let i = 0; i < _this.checkboxarray.length; i++) {\n                    for (let j = 0; j < _this.checkboxarray[i].arr.length; j++) {\n                        for (let k in aaa) {\n                            if (aaa[k].name == _this.checkboxarray[i].arr[j].fieldName) {\n                                aaa[k].array.push(_this.checkboxarray[i].arr[j]);\n                                aaa[k].dataType = _this.checkboxarray[i].arr[j].dataType\n                            }\n                        }\n\n                    }\n                }\n                for (let i = 0; i < _this.checkboxarray.length; i++) {\n                    _this.checkboxarray[i].arr = [];\n                    for (let j = 0; j < aaa.length; j++) {\n                        if (_this.checkboxarray[i].dataType == aaa[j].dataType) {\n                            for (let k in aaa[j].array) {\n                                aaa[j].array[k].checked = false\n                            }\n                            _this.checkboxarray[i].arr.push({\n                                array: aaa[j].array,\n                                value: 0,\n                                fieldName: aaa[j].name,\n                                dataType: aaa[j].dataType,\n                            })\n                        }\n                    }\n                }\n                _this.readyRenderCheckboxData = true\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n    }\n}\n</script>\n\n<style scoped>\n/* #myChart1{\n    height: calc(100% - 60px);\n} */\n.winch-content {\n    height: 94%;\n}\n.checkbox-box {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 10px 0;\n    padding-left: 20px;\n}\n.checkbox-box .el-checkbox {\n    width: 220px;\n}\n.winch-from-content {\n    margin-top: 10px;\n    text-align: center;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n}\n.el-radio {\n    display: block;\n    text-align: left;\n    margin: 10px;\n}\n.el-checkbox {\n    display: block;\n    text-align: left;\n    line-height: 20px;\n}\n.page-title {\n    height: 32px;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    border-bottom: 1px solid #eee;\n    cursor: default;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    z-index: 1999;\n    padding-bottom: 5px;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.page-title .close-btn:hover {\n    color: #5cb6ff;\n}\n.form-1 {\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n}\n.bigScreenCheckbox .el-checkbox {\n    display: inline;\n    margin-right: 10px;\n}\n.bigScreenTextarea {\n    padding: 0 20px;\n}\n.bigScreenTextarea p {\n    font-size: 14px;\n    color: #303133;\n    margin: 10px 0;\n    font-weight: 600;\n}\n.bigScreen {\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding: 0 20px;\n    overflow: hidden;\n}\n.leftScreen-inside {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n.leftScreen {\n    width: 85%;\n    height: 100%;\n    overflow: auto;\n}\n.leftScreen::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.input-area-box {\n    width: 15%;\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    border-left: 1px solid #eee;\n}\n.input-area {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n.input-area::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.input-area-box::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.input-area-1 {\n    height: 100%;\n    border-left: 1px solid #eee;\n    overflow: auto;\n    padding: 0 20px;\n    position: relative;\n}\n.input-area-1::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.contrlbtns {\n    display: inline-block;\n    margin-left: 20px;\n    z-index: 999;\n}\n.contrlbtns .contrlbtnsinput {\n    display: inline-block;\n    /* width: 35px; */\n    vertical-align: middle;\n    margin: 0 5px;\n    text-align: center;\n    font-size: 12px;\n}\n.legend-item {\n    display: inline-block;\n    padding: 0 4px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.legend-item .legend-point {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    background: #ccc;\n    border-radius: 50%;\n    position: relative;\n    margin: 0 5px 0 5px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.legend-point-line {\n    display: inline-block;\n    position: absolute;\n    width: 24px;\n    height: 1px;\n    top: 6px;\n    left: -6px;\n    background: #ccc;\n}\n.legend-item .legend-title {\n    font-size: 12px;\n    display: inline-block;\n    padding: 0 3px;\n    line-height: 24px;\n    cursor: pointer;\n}\n.form-label {\n    width: 100%;\n    cursor: default;\n    margin: 10px 0;\n}\n.form-label p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    max-width: 200px;\n    text-indent: 3px;\n    white-space: nowrap;\n}\n.form-label-top {\n    cursor: default;\n    margin: 10px 0;\n    padding: 0 20px;\n}\n.form-label-top p {\n    margin: 0;\n    color: #303133;\n    font-size: 14px;\n    font-weight: 600;\n}\n.form-label-top .form-label-res {\n    display: inline-block;\n    border: 1px solid #dcdfe6;\n    color: #606266;\n    font-size: 14px;\n    padding: 4px 3px;\n    border-radius: 4px;\n    width: 100%;\n    text-indent: 3px;\n}\n.top-input {\n    cursor: default;\n    margin-bottom: 18px;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    width: 100%;\n}\n.top-input p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.top-input-1 {\n    width: 100%;\n    cursor: default;\n    background: #fff;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n}\n.top-input-1 p {\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.from-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 20px;\n    margin-top: 96px;\n    z-index: 99;\n}\n.el-collapse-item__content {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 100%;\n}\n.refreshbtn {\n    display: inline-block;\n    margin-right: 10px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.tool-box {\n    display: inline-block;\n    margin-left: 20px;\n}\n</style>"]}]}