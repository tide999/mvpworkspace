{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/thread-loader/dist/cjs.js!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/src/components/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/src/components/index.vue","mtime":1606901993386},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPPlayback/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"index\" v-loading=\"loadingpage\">\n        <div class=\"mission\">\n            <div class=\"mission-left\">\n                <div class=\"mission-left-top\">\n                    <span class=\"form-label\">回放任务名称:</span>\n                    <el-select v-model=\"missionname\" placeholder=\"请选择任务\" @change=\"getThisMission\" style=\"width:300px\" size=\"mini\">\n                        <el-option v-for=\"item in missionlist\" :key=\"item.jobId\" :label=\"item.jobName\" :value=\"item.jobId\">\n                        </el-option>\n                    </el-select>\n                    <span title=\"刷新回放任务列表\" @click=\"refreshGetMission\" class=\"form-label isHover\" style=\"cursor: pointer;\"><i class=\"el-icon-refresh\"></i></span>\n                </div>\n                <div class=\"mission-left-bottom\">\n                    <el-form class=\"form-content\" ref=\"missiondata\" :model=\"missiondata\" label-width=\"80px\" size=\"mini\">\n                        <el-form-item label=\"任务模式:\">\n                            <el-input v-model=\"missiondata.jobModes\" disabled style=\"width:120px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"投放深度:\">\n                            <el-input v-model=\"missiondata.setDeep\" disabled style=\"width:80px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"投放次数:\">\n                            <el-input v-model=\"missiondata.runtimes\" disabled style=\"width:80px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"投放间隔:\">\n                            <el-input v-model=\"missiondata.intervalTime\" disabled style=\"width:80px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"安全深度:\">\n                            <el-input v-model=\"missiondata.safeDeep\" disabled style=\"width:80px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"任务状态:\">\n                            <el-input v-model=\"missiondata.jobStatuss\" disabled style=\"width:120px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"实际投放次数:\" label-width=\"110px\">\n                            <el-input v-model=\"missiondata.dropTimes\" disabled style=\"width:80px\"></el-input>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n            <div class=\"mission-right\">\n                <el-button type=\"primary\" @click=\"playBack\" class=\"mission-right-btn\">开始回放</el-button>\n                <el-button type=\"success\" :disabled=\"!missiondata.jobId\" @click=\"exportss\" class=\"mission-right-btn\">下载当前<br />数据</el-button>\n            </div>\n        </div>\n        <div class=\"chartscontent\">\n            <div class=\"chartscontent-top\">\n                <el-button size=\"mini\" :disabled='!isPushBtn' @click=\"beforeTimes\" type=\"primary\">前一次投放数据</el-button>\n                <el-button size=\"mini\" :disabled='!isPushBtn' @click=\"nextTimes\" type=\"primary\">下一次投放数据</el-button>\n                <div style=\"margin-left:10px\">\n                    <span style=\"margin-left:10px\">自动显示时间间隔(秒)</span>\n                    <el-input size=\"mini\" style=\"width:80px;margin:0 10px\" :disabled='!isPushBtn' type=\"number\" v-model=\"autoShowTimes\"></el-input>\n                    <el-button size=\"mini\" type=\"primary\" :disabled='!isPushBtn' @click=\"autoPlay\">自动</el-button>\n                    <el-button size=\"mini\" type=\"danger\" :disabled='!isPushBtn' @click=\"stopAutoPlay\">停止</el-button>\n                </div>\n                <div class=\"shrinkEchartsBtn\">\n                    <el-button v-for=\"(item, $index) in echartsArray\" :key=\"$index\" @click=\"showitem(item)\" size=\"mini\" plain type=\"primary\">{{item.title}}</el-button>\n                </div>\n            </div>\n            <div class=\"chartscontent-mid\">\n                <div class=\"echart-item\" v-for=\"(item, $index) in myChartsArray\" :key='$index'>\n                    <span class=\"closeit\" @click=\"closeitem(item.id)\"><i class=\"el-icon-circle-close\"></i></span>\n                    <div :id=\"'myChart' + item.id\" style=\"width:100%;height:100%\"></div>\n                </div>\n            </div>\n            <!-- <div class=\"chartscontent-bottom\">\n                <el-button v-for=\"(item, $index) in echartsArray\" :key=\"$index\" @click=\"showitem(item)\" size=\"mini\" plain type=\"primary\">{{item.title}}</el-button>\n            </div> -->\n        </div>\n\n        <el-dialog :title=\"'海深' + echartToolTipsData.devDeep + '米  ' + echartToolTipsData.name\" top=\"8vh\" v-loading='echartToolTipsDataDialogLoading' :visible.sync=\"echartToolTipsDataDialog\" width=\"500px\" :modal=\"false\" v-dialogDrag :before-close=\"echartToolTipsDataDialogClose\">\n            <div class=\"dialog-div\">\n                <el-table border size='mini' height=\"500\" :data=\"echartToolTipsData.data\" :row-class-name=\"tableRowClassName\">\n                    <el-table-column label=\"Run Times\" align=\"center\" width='100'>\n                        <template slot-scope=\"scope\">\n                            <span>第{{scope.row['runTimes']}}次</span>\n                        </template>\n                    </el-table-column>\n                    <!-- <el-table-column label=\"Dev Deep\" align=\"center\" width='100'>\n                        <template>\n                            <span>{{echartToolTipsData.devDeep}}</span>\n                        </template>\n                    </el-table-column> -->\n                    <el-table-column :label=\"echartToolTipsData.name + '值'\" align=\"center\">\n                        <template slot-scope=\"scope\">\n                            <span>{{scope.row | getObjectKey}}</span>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"echartToolTipsDataDialogClose\">关 闭</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport request from \"@/utils/request.js\";\nimport '@/utils/directives.js'\nexport default {\n    name: 'index',\n    data() {\n        return {\n            autoShowTimes: 0,\n            loadingpage: false,\n            runTimes: 0,\n            missionlist: [],\n            missionname: '',\n            missiondata: {},\n            echartsArray: [],\n            myChartsArray: [],\n            getishowArray: [],\n            optionArray: [],\n            yAxisNumber: 2000,\n            yAxisDataArray: [],\n            legendDataArray: [],\n            option: {\n                title: {\n                    text: '',\n                    textStyle: {\n                        fontSize: 12\n                    }\n                },\n                legend: {\n                    show: true,\n                    itemGap: 5,\n                    itemWidth: 10,\n                    orient: 'vertical',\n                    top: 25,\n                    textStyle: {\n                        fontSize: 12,\n                    }\n                },\n                color: ['#FF8C00', '#5F9EA0', '#48D1CC'],\n                tooltip: {\n                    trigger: 'axis',\n                    triggerOn: 'click'\n                    // formatter: function (params, ticket, callback) {\n                    //     console.log(params);\n                    // }\n                    // formatter:'{a}{b}{c}'\n                },\n                dataZoom: [\n                    {\n                        type: 'inside',\n                    },\n                ],\n                grid: {\n                    top: 120,\n                    left: 42,\n                    right: 40,\n                    bottom: 15,\n                    containLabel: false\n                },\n                yAxis: {\n                    type: 'category',\n                    position: 'top',\n                    axisLine: {\n                        onZero: false\n                    },\n                    boundaryGap: false,\n                    data: [],\n                    inverse: true,\n                },\n                xAxis: {\n                    inverse: true,\n                    position: 'top',\n                    axisLine: {\n                        onZero: false\n                    },\n                    boundaryGap: false,\n                    type: 'value',\n                    splitLine: {\n                        show: false\n                    },\n                    axisLabel: {\n                        interval: 1,\n                        show: true,\n                        rotate: 45\n                    },\n                    // scale: true\n                },\n                series: [{\n                    data: [],\n                    type: 'line',\n                    symbol: 'none',\n                    smooth: true\n                }]\n            },\n            isPushBtn: false,\n            baseURL: '',\n            exportTimes: 0,\n            si: null,\n            threeTimes: 0,\n            playBackInterval: null,\n            isplaybackbtn: false,\n            autoInterval: null,\n            echartToolTipsData: {\n                name: '',\n                data: [],\n                fieldName: '',\n                devDeep: '',\n            },\n            echartToolTipsDataDialog: false,\n            echartToolTipsDataDialogLoading: false,\n        }\n    },\n    mounted() {\n        this.baseURL = localStorage.getItem('mvpip');\n        this.getishow();\n        this.getFinishedJobs();\n        this.set();\n    },\n    filters: {\n        getObjectKey(val) {\n            // let aaa = '';\n            // aaa = Object.keys(val)[1];\n            // console.log(aaa)\n            return Object.values(val)[1]\n        }\n    },\n    watch: {\n        myChartsArray() {\n            this.drawLine();\n        }\n    },\n    methods: {\n        set() {\n\n        },\n        tableRowClassName({ row, rowIndex }) {\n            // console.log(row.runTimes);\n            if (row.runTimes % 2 == 0) {\n                return 'one-row'\n            } else {\n                return 'two-row'\n            }\n        },\n        echartToolTipsDataDialogClose() {\n            this.echartToolTipsDataDialog = false;\n            this.echartToolTipsData = {\n                name: '',\n                data: [],\n                fieldName: '',\n                devDeep: '',\n            };\n        },\n        exportss() {\n            window.clearInterval(this.si)\n            this.si = window.setInterval(() => {\n                this.exportTimes++;\n                this.exportFile(this.missiondata.jobId)\n            }, 1000)\n        },\n        stopAutoPlay() {\n            window.clearInterval(this.autoInterval);\n            this.$message({\n                type: 'success',\n                message: \"已停止自动显示回放\"\n            })\n        },\n        autoPlay() {\n            console.log(this.autoShowTimes);\n            if (this.autoShowTimes < 1) {\n                return\n            } else {\n                window.clearInterval(this.autoInterval)\n                this.$message({\n                    type: 'success',\n                    message: `已开始自动显示回放,间隔${this.autoShowTimes}秒`\n                })\n                this.autoInterval = window.setInterval(() => {\n                    console.log(11)\n                }, this.autoShowTimes * 1000)\n            }\n        },\n        refreshGetMission() {\n            // this.missionlist = [];\n            // this.missionname = '';\n            // this.missiondata = {};\n            this.getFinishedJobs()\n        },\n        closeitem(clnum) {\n            if (this.echartsArray.length > this.myChartsArray.length - 2) {\n                this.$message({\n                    message: '不能再关了！',\n                    type: 'warning'\n                })\n                return\n            }\n            document.getElementsByClassName('echart-item')[clnum].style.display = 'none';\n            for (let i in this.myChartsArray) {\n                if (clnum == this.myChartsArray[i].id) {\n                    this.echartsArray.push(this.myChartsArray[i]);\n                }\n            }\n            for (let i = 0; i < document.getElementsByClassName('echart-item').length; i++) {\n                if (i == clnum) {\n                    document.getElementsByClassName('echart-item')[i].style.width = 0\n                } else {\n                    document.getElementsByClassName('echart-item')[i].style.width = (95 / (document.getElementsByClassName('echart-item').length - this.echartsArray.length)) + \"%\"\n                }\n\n            }\n        },\n        showitem(row) {\n            for (let i in this.echartsArray) {\n                if (row.id == this.echartsArray[i].id) {\n                    this.echartsArray.splice(i, 1)\n                }\n            }\n            document.getElementsByClassName('echart-item')[row.id].style.display = 'block';\n            for (let i = 0; i < document.getElementsByClassName('echart-item').length; i++) {\n                document.getElementsByClassName('echart-item')[i].style.width = (95 / (document.getElementsByClassName('echart-item').length - this.echartsArray.length)) + \"%\"\n            }\n        },\n        drawLine() {\n            let _this = this;\n            this.$nextTick(function () {\n                for (let i in _this.myChartsArray) {\n                    _this.myChartsArray[i].render = _this.$echarts.getInstanceByDom(document.getElementById(_this.myChartsArray[i].name));\n                    if (_this.myChartsArray[i].render === undefined) {\n                        _this.myChartsArray[i].render = _this.$echarts.init(document.getElementById(_this.myChartsArray[i].name));\n                    }\n                    for (let j in _this.optionArray) {\n                        if (i == j) {\n                            _this.myChartsArray[i].render.setOption(_this.optionArray[j], true);\n                        }\n                    }\n                    _this.myChartsArray[i].render.resize()\n                }\n                for (let i = 0; i < document.getElementsByClassName('echart-item').length; i++) {\n                    document.getElementsByClassName('echart-item')[i].style.width = (95 / document.getElementsByClassName('echart-item').length) + \"%\"\n                }\n                let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n                let erd = elementResizeDetectorMaker();\n                for (let i = 0; i < document.getElementsByClassName('echart-item').length; i++) {\n                    let worldMapContainer = document.getElementsByClassName('echart-item')[i];\n                    erd.listenTo(worldMapContainer, function (element) {  //执行监听 \n                        _this.$nextTick(function () {\n                            document.getElementById(`myChart` + i).style.width = element.offsetWidth + 'px';\n                            _this.myChartsArray[i].render.resize()\n                        })\n                    });\n                }\n            })\n        },\n        getThisMission(e) {\n            for (let i in this.missionlist) {\n                if (e == this.missionlist[i].jobId) {\n                    this.missiondata = this.missionlist[i];\n                    if (this.missiondata.jobMode == 5) {\n                        this.missiondata.jobModes = '定深投放'\n                    } else if (this.missiondata.jobMode == 80) {\n                        this.missiondata.jobModes = '距底定距投放'\n                    } else {\n                        this.missiondata.jobModes = '无'\n                    }\n                    if (this.missiondata.jobStatus == 3) {\n                        this.missiondata.jobStatuss = '等待执行'\n                    } else if (this.missiondata.jobStatus == 48) {\n                        this.missiondata.jobStatuss = '正在执行'\n                    } else if (this.missiondata.jobStatus == 51) {\n                        this.missiondata.jobStatuss = '投放间隔等待'\n                    } else if (this.missiondata.jobStatus == 768) {\n                        this.missiondata.jobStatuss = '执行完成'\n                    } else if (this.missiondata.jobStatus == 12288) {\n                        this.missiondata.jobStatuss = '已经取消'\n                    } else {\n                        this.missiondata.jobStatuss = '无'\n                    }\n                }\n            }\n            this.yAxisNumber = this.missiondata.setDeep;\n            this.runTimes = 1;\n        },\n        async getFinishedJobs() {\n            let _this = this;\n            this.loadingpage = true\n            let result = await request({\n                url: \"/job/get_finished_jobs\",\n                method: \"get\"\n            });\n            try {\n                // console.log(result.data);\n                _this.missionlist = result.data;\n                _this.loadingpage = false\n            } catch (error) {\n                console.log(error);\n                _this.loadingpage = false\n            }\n        },\n        beforeTimes() {\n            if (!this.missiondata.jobId) {\n                this.$message.error('请先选择回放任务！');\n                return\n            }\n            if (!this.isPushBtn) {\n                this.$message.error('请先点击开始回放！');\n                return\n            }\n            this.runTimes--;\n            if (this.runTimes == 0) {\n                this.runTimes = 1;\n            }\n            // console.log(this.runTimes);\n            this.getHisdata({\n                jobId: this.missiondata.jobId,\n                run_times: this.runTimes\n            })\n\n        },\n        nextTimes() {\n            if (!this.missiondata.jobId) {\n                this.$message.error('请先选择回放任务！');\n                return\n            }\n            if (!this.isPushBtn) {\n                this.$message.error('请先点击开始回放！');\n                return\n            }\n            this.runTimes++;\n            this.getHisdata({\n                jobId: this.missiondata.jobId,\n                run_times: this.runTimes\n            })\n        },\n        playBack() {\n            let _this = this;\n            _this.threeTimes = 0;\n            _this.runTimes = 0;\n            this.loadingpage = true;\n            if (!this.missiondata.jobId) {\n                this.$message.error('请选择回放任务')\n                return\n            };\n\n            for (let i in this.myChartsArray) {\n                if (this.myChartsArray[i].render != '') {\n                    let bb = this.myChartsArray[i].render.getOption();\n                    this.myChartsArray[i].render.clear();\n                    bb.series = [];\n                    this.myChartsArray[i].render.setOption(bb);\n                };\n                this.myChartsArray[i].series = [];\n            }\n            this.isPushBtn = true;\n            this.isplaybackbtn = true;\n            window.clearInterval(this.playBackInterval);\n            this.playBackInterval = window.setInterval(() => {\n                console.log(`threeTimes:${_this.threeTimes},runTimes:${_this.runTimes}`);\n                _this.runTimes++\n                _this.getHisdata({\n                    jobId: _this.missiondata.jobId,\n                    run_times: _this.runTimes\n                });\n                _this.threeTimes++;\n                if (_this.threeTimes == 3) {\n                    window.clearInterval(_this.playBackInterval);\n                    _this.threeTimes = 0;\n                    _this.loadingpage = false;\n                }\n            }, 1000)\n\n        },\n        async getHisdata(row) {\n            let _this = this;\n            // console.log(this.runTimes);\n            // this.loadingpage = true\n            let result = await request({\n                url: \"/job/get_hisdata_by_runtimes\",\n                method: \"get\",\n                params: {\n                    jobId: row.jobId,\n                    run_times: row.run_times\n                }\n            });\n            try {\n                if (result.data.length == 0) {\n                    _this.$message.error(`暂无第${_this.runTimes}次投放数据`);\n                } else {\n                    _this.yAxisDataArray = [];\n                    _this.legendDataArray = [];\n                    let aa = result.data[0].devDeep;\n                    // 初始化Y轴data\n                    for (let i = 0; i < result.data.length; i++) {\n                        _this.yAxisDataArray.push(aa);\n                        aa++;\n                    }\n                    for (let j = 0; j < _this.myChartsArray.length; j++) {\n                        // 初始化Y轴\n                        let cc = _this.myChartsArray[j].render.getOption();\n                        cc.yAxis[0].data = _this.yAxisDataArray;\n                        _this.myChartsArray[j].render.setOption(cc);\n                        cc = null;\n                        // 插入series数据\n                        let aaa = {\n                            data: [],\n                            type: 'line',\n                            symbol: 'none',\n                            smooth: true,\n                            times: 0,\n                            name: `第${result.data[0].runTimes}次`\n                        };\n                        aaa.times = result.data[0].runTimes\n                        for (let i = 0; i < result.data.length; i++) {\n                            aaa.data.push(result.data[i][_this.myChartsArray[j].fieldName]);\n                        }\n                        _this.myChartsArray[j].series.push(aaa);\n                        _this.legendDataArray.push(aaa.name)\n                    }\n\n                    // 渲染图表\n                    for (let i = 0; i < _this.myChartsArray.length; i++) {\n                        // 去重\n                        for (let j = 0; j < _this.myChartsArray[i].series.length; j++) {\n                            for (let k = j + 1; k < _this.myChartsArray[i].series.length; k++) {\n                                if (_this.myChartsArray[i].series[j].times == _this.myChartsArray[i].series[k].times) {\n                                    _this.myChartsArray[i].series.splice(k, 1);\n                                    k--;\n                                }\n                            }\n                        };\n\n\n                        let aaa = _this.myChartsArray[i].render.getOption();\n                        aaa.series = _this.myChartsArray[i].series;\n                        aaa.legend.data = _this.legendDataArray;\n                        _this.myChartsArray[i].render.setOption(aaa);\n                        aaa = null;\n                    };\n                    console.log(_this.myChartsArray);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        async getishow() {\n            let _this = this;\n            let result = await request({\n                url: \"sys-define/get_ishow_define\",\n                method: \"get\"\n            });\n            try {\n                // console.log(result.data);\n                _this.getishowArray = JSON.parse(JSON.stringify(result.data));\n                console.log(_this.getishowArray)\n                for (let i = 0; i < _this.getishowArray.length; i++) {\n                    if (_this.getishowArray[i].showInChart == 1) {\n                        let a = {\n                            name: 'myChart',\n                            render: '',\n                            title: _this.getishowArray[i].dataName + '(' + _this.getishowArray[i].dataUnit + ')',\n                            id: 0,\n                            fieldName: _this.getishowArray[i].fieldName,\n                            series: []\n                        }\n                        _this.myChartsArray.push(a)\n                    }\n                }\n                for (let i in _this.myChartsArray) {\n                    _this.myChartsArray[i].name = 'myChart' + i\n                    _this.myChartsArray[i].id = + i;\n                    let a = JSON.parse(JSON.stringify(_this.option));\n                    a.title.text = _this.myChartsArray[i].title;\n                    // 自定义 提示窗\n                    a.tooltip.filedName = _this.myChartsArray[i].filedName;\n                    a.tooltip.formatter = function (params, ticket, callback) {\n                        // console.log(_this.myChartsArray[i].fieldName)\n                        let tArray = [];\n                        for (let j in _this.myChartsArray[i].series) {\n                            tArray.push(_this.myChartsArray[i].series[j].times);\n                        }\n                        _this.getMoreData({\n                            jobid: _this.missiondata.jobId,\n                            fieldname: _this.myChartsArray[i].fieldName,\n                            runtimes: tArray.toString(),\n                            devdeep: params[0].axisValue,\n                        });\n                        // console.log(_this.echartToolTipsData)\n                    }\n                    _this.optionArray.push(a);\n                }\n\n                for (let i in _this.myChartsArray) {\n                    if (_this.myChartsArray[i].fieldName == 'oceanDeep') {\n                        _this.myChartsArray.splice(i, 1)\n                    }\n                }\n                console.log(_this.myChartsArray)\n            }\n            catch (error) {\n                console.log(error)\n            }\n        },\n        async getMoreData(row) {\n            let _this = this;\n            _this.echartToolTipsDataDialog = true;\n            _this.echartToolTipsDataDialogLoading = true;\n            let result = await request({\n                url: \"job/get_more_data\",\n                method: \"get\",\n                params: {\n                    jobId: row.jobid,\n                    run_times: row.runtimes,\n                    field_name: row.fieldname,\n                    dev_deep: row.devdeep\n                }\n            });\n            try {\n                _this.echartToolTipsData.data = result.data;\n                // _this.echartToolTipsData.fieldName = Object.keys(result.data[0])[1];\n                _this.echartToolTipsData.fieldName = row.fieldname;\n                _this.echartToolTipsData.devDeep = row.devdeep;\n                for (let i in _this.getishowArray) {\n                    if (_this.echartToolTipsData.fieldName == _this.getishowArray[i].fieldName) {\n                        _this.echartToolTipsData.name = `${_this.getishowArray[i].dataName}(${_this.getishowArray[i].dataUnit})`\n                    }\n                }\n                console.log(_this.echartToolTipsData)\n                _this.echartToolTipsDataDialogLoading = false;\n            } catch (er) {\n                console.error(er);\n                _this.echartToolTipsDataDialogLoading = false;\n            }\n        },\n        async exportFile(jobid) {\n            let _this = this;\n            let result = await request({\n                url: \"job/get_export_file\",\n                method: \"get\",\n                params: {\n                    jobId: jobid\n                }\n            });\n            try {\n                if (result.data[0].filePrepare == 1) {\n                    window.location.href = _this.baseURL + `/api/job/download?file_name=export_file/` + result.data[0].downloadFile\n                    window.clearInterval(_this.si)\n                } else {\n                    if (_this.exportTimes == 15) {\n                        window.clearInterval(_this.si);\n                        _this.exportTimes = 0;\n                        alert('数据下载失败，请使用专用软件重新获取数据文件')\n                    }\n                }\n            } catch (error) {\n                console.log(error);\n                window.clearInterval(_this.si)\n            }\n        },\n    }\n}\n\n</script>\n<style>\n#index {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n}\n.dialog-div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.el-dialog {\n    box-shadow: 0 3px 3px rgba(0, 0, 0, 0.4) !important;\n    border: 1px solid #ccc;\n    border-radius: 8px !important;\n}\n.el-table--scrollable-y .el-table__body-wrapper::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.el-dialog__body {\n    /* height: 400px !important;\n    overflow: auto; */\n}\n.shrinkEchartsBtn {\n    position: absolute;\n    top:1px;\n    right: 0;\n    background: #fff;\n    /* max-width: calc(100% - 242px - 385px); */\n}\n.el-table .cell {\n    cursor: default;\n}\n.el-table .one-row {\n    background: #f0f9eb;\n}\n.el-table .two-row {\n    background: #d1e7ff;\n}\n.el-form-item--mini.el-form-item,\n.el-form-item--small.el-form-item {\n    margin-bottom: 0 !important;\n}\n.mission,\n.chartscontent {\n    background: #fff;\n    width: 99%;\n    border-radius: 8px;\n    margin: 10px 0;\n}\n.mission {\n    height: 140px;\n    margin-bottom: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.mission-left {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding-left: 10px;\n    height: 100%;\n}\n.mission-right {\n    display: flex;\n    flex-direction: column;\n    /* flex-direction: row; */\n    justify-content: space-around;\n    height: 70%;\n    margin: 0 10px;\n}\n.mission-right-btn {\n    width: 120px;\n    margin-left: 0 !important;\n    margin-top: 5px !important;\n    margin-bottom: 5px !important;\n}\n.mission-left-top {\n    height: 40px;\n    padding-top: 10px;\n    display: flex;\n    align-items: center;\n}\n.mission-left-bottom {\n    height: calc(100% - 40px);\n}\n.form-content {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n}\n.chartscontent {\n    margin-top: 5px;\n    height: calc(100% - 150px);\n}\n.form-label {\n    text-align: right;\n    vertical-align: middle;\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    padding: 0 12px 0 8px;\n    box-sizing: border-box;\n    display: inline-block;\n    font-weight: 600;\n}\n.chartscontent {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n}\n.chartscontent-top {\n    display: flex;\n    width: 98%;\n    position: relative;\n    margin-top:10px;\n}\n.chartscontent-mid {\n    height: calc(100% - 50px);\n    width: 98%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n.chartscontent-bottom {\n    width: 98%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n}\n.echart-item {\n    width: 220px;\n    height: 98%;\n    border-radius: 8px;\n    box-shadow: 0px 2px 3px #888;\n    position: relative;\n}\n.closeit {\n    position: absolute;\n    top: -10px;\n    right: -8px;\n    border-radius: 50%;\n    background: #fff;\n    cursor: pointer;\n    z-index: 99;\n    width: 20px;\n    height: 20px;\n    line-height: 20px;\n    font-size: 20px;\n}\n.closeit:hover {\n    color: #f56c6c;\n}\n.isHover:hover {\n    color: #409eff;\n}\n</style>"],"sourceRoot":"src/components"}]}