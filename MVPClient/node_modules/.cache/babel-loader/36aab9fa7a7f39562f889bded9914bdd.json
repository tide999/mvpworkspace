{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/thread-loader/dist/cjs.js!/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/babel-loader/lib/index.js!/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/src/components/mission.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/src/components/mission.vue","mtime":1610431954876},{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mission.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"mission\">\n        <div class=\"mission-box\">\n            <p class=\"page-title\">\n                <span v-show=\"isMaxScreen == true\">任务内容显示</span>\n                <span v-show=\"isMaxScreen == false\">\n                    <span class=\"labelfont\">当前任务状态：</span>\n                    <el-radio-group disabled v-model=\"form.missionStatus\">\n                        <el-radio :label=\"3\">等待执行</el-radio>\n                        <el-radio :label=\"48\">正在执行</el-radio>\n                        <el-radio :label=\"51\">投放间隔等待</el-radio>\n                        <el-radio :label=\"768\">执行完成</el-radio>\n                        <el-radio :label=\"12288\">已经取消</el-radio>\n                    </el-radio-group>\n                </span>\n\n                <span class=\"close-btn\" style=\"right:26px\" @click=\"handleSize('mission')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n                <span class=\"close-btn\" @click=\"closeItem('mission')\"><i class=\"el-icon-circle-close\"></i></span>\n            </p>\n            <div class=\"mission-content\" v-show=\"isMaxScreen == true\">\n                <el-form ref=\"form\" :model=\"form\" inline class=\"from-content\" size=\"mini\">\n                    <el-form-item label=\"当前任务名称：\" label-width=\"120px\">\n                        <el-input disabled v-model=\"form.missionName\" style=\"width:250px\"></el-input>\n                    </el-form-item>\n                    <br />\n                    <el-form-item label=\"当前任务模式：\" label-width=\"120px\">\n                        <el-radio-group disabled v-model=\"form.missionType\">\n                            <el-radio :label=\"5\">定深投放</el-radio>\n                            <el-radio :label=\"80\">距底定距离投放</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <el-form-item label=\"当前任务状态：\" label-width=\"120px\">\n                        <el-radio-group disabled v-model=\"form.missionStatus\">\n                            <el-radio :label=\"3\">等待执行</el-radio>\n                            <el-radio :label=\"48\">正在执行</el-radio>\n                            <el-radio :label=\"51\">投放间隔等待</el-radio>\n                            <el-radio :label=\"768\">执行完成</el-radio>\n                            <el-radio :label=\"12288\">已经取消</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <br />\n                    <el-form-item label=\"每次投放间隔(秒)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.timesThrowSec\" style=\"width:70px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"距底安全深度(米)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.securityDeepMet\" style=\"width:72px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定深度(米)：\" label-width=\"120px\">\n                        <el-input disabled v-model=\"form.settingDepth\" style=\"width:70px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定投放次数(次)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.settingThrowTimes\" style=\"width:65px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"当前投放次数(次)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.thisSettingThrowTimes\" style=\"width:65px\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div class=\"btn-content\" v-show=\"userlevel == 0\">\n                    <el-button type=\"primary\" class=\"create-btn\" @click=\"createMission\">增加任务</el-button>\n                    <div class=\"left-btn-area\">\n                        <el-button type=\"success\" @click=\"startingMission\" :disabled='startBtn'>开始执行任务</el-button>\n                        <el-button type=\"warning\" @click=\"cancelMission\" :disabled='cancelBtn'>取消当前任务并回收仪器</el-button>\n                    </div>\n                    <el-button type=\"danger\" class=\"delete-btn\" @click=\"cancelMissionNow\">立即取消<br />当前任务</el-button>\n                </div>\n            </div>\n            <div class=\"minScreen\" v-show=\"isMaxScreen == false\">\n            </div>\n        </div>\n\n        <el-dialog title=\"新增任务\" :visible.sync=\"dialogVisible\" width=\"600px\" top=\"5vh\" v-dialogDrag :before-close=\"handleClose\">\n            <div>\n                <el-form ref=\"dialogFrom\" :model=\"dialogFrom\" label-width=\"140px\">\n                    <el-form-item label=\"新任务名称\">\n                        <el-input v-model=\"dialogFrom.missionName\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"任务工作模式\">\n                        <el-radio-group v-model=\"dialogFrom.missionType\">\n                            <el-radio :label=\"5\">定深投放</el-radio>\n                            <el-radio :label=\"80\">距底定距投放</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <el-form-item label=\"设定深度(米)\">\n                        <el-input type='number' v-model=\"dialogFrom.settingDeep\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定投放次数(次)\">\n                        <el-input type='number' v-model=\"dialogFrom.settingTimes\" class=\"usedinput\" v-show=\"isMaxTimes==false\" style=\"width:90px;padding-right:20px\"></el-input>\n                        <el-checkbox v-model=\"dialogFrom.checkbox\" @change=\"isSettingTimes\">无限次投放</el-checkbox>\n                    </el-form-item>\n                    <el-form-item type='number' label=\"每次投放间隔(秒)\">\n                        <el-input v-model=\"dialogFrom.settingInterval\"></el-input>\n                    </el-form-item>\n                    <el-form-item type='number' label=\"距底安全深度(米)\">\n                        <el-input v-model=\"dialogFrom.safeDepth\"></el-input>\n                    </el-form-item>\n                </el-form>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"handleClose\" style=\"margin-right:20px\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"createMissionDialogBtn\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport '@/utils/directives.js'\nexport default {\n    name: 'mission',\n    data() {\n        return {\n            iconName: 'el-icon-top',\n            isMaxScreen: true,\n            userlevel: 0,\n            startBtn: false,\n            cancelBtn: false,\n            dialogVisible: false,\n            form: {\n                missionName: '当前暂无任务',\n                missionType: '',\n                missionStatus: '',\n                timesThrowSec: '',\n                securityDeepMet: '',\n                settingDepth: '',\n                settingThrowTimes: '',\n                thisSettingThrowTimes: ''\n            },\n            dialogFrom: {\n                missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                missionType: 5,\n                settingDeep: 100,\n                settingTimes: 1,\n                settingInterval: 5,\n                safeDepth: 20,\n                checkbox: false\n            },\n            isMaxTimes: false,\n            realTimeJobId: '',\n            runningJob: [],\n            hasRunningJob: false,\n            waitingJob: [],\n            setinterval: '',\n            setinterval1: '',\n            baseURL: '',\n            exportTimes: 0,\n            si: null\n        }\n    },\n    created() {\n        this.userlevel = localStorage.getItem('mvplevel');\n        console.log(this.userlevel + '==>0:USE;1:READONLY')\n    },\n    mounted() {\n        this.baseURL = localStorage.getItem('mvpip');\n        this.getCurrentJob();\n    },\n    methods: {\n        /**\n         * @description: 组件\n         * @param {*} ele\n         * @return {*}\n         */\n        handleSize(ele) {\n            this.$emit('sendEleName', { ele: ele, btn: 'shrink' });\n            if (this.iconName == 'el-icon-top') {\n                // 缩小\n                this.iconName = 'el-icon-bottom';\n                this.isMaxScreen = false;\n            } else {\n                // 放大\n                this.iconName = 'el-icon-top'\n                this.isMaxScreen = true;\n            }\n        },\n        /**\n         * @description: \n         * @param {*} ele\n         * @return {*}\n         */\n        closeItem(ele) {\n            this.$emit('sendEleName', { ele: ele, btn: 'close' });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        startingMission() {\n            this.$confirm('是否开始任务？', '提示', {\n                confirmButtonText: '开始',\n                cancelButtonText: '取消',\n                type: 'info'\n            }, 'info').then(() => {\n                this.addCommand({\n                    cmdId: 1280,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务开始指令已发送'\n                });\n            }).catch(() => {\n\n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        cancelMission() {\n            this.$confirm('是否取消当前任务？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '关闭',\n                type: 'warning'\n            }).then(() => {\n                this.addCommand({\n                    cmdId: 1360,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务取消指令已发送'\n                });\n            }).catch(() => {\n\n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        cancelMissionNow() {\n            this.$confirm('当前任务将立即被取消并且不会回收仪器，是否确认执行？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '关闭',\n                type: 'warning'\n            }).then(() => {\n                this.addCommand({\n                    cmdId: 255,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务立即取消指令已发送'\n                });\n            }).catch(() => {\n                \n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        createMission() {\n            this.dialogVisible = true;\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        handleClose() {\n            this.dialogFrom = {\n                missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                missionType: 5,\n                settingDeep: 100,\n                settingTimes: 1,\n                settingInterval: 5,\n                safeDepth: 20,\n                checkbox: false\n            };\n            this.dialogVisible = false;\n        },\n        /**\n         * @description: 新增任务按钮 \n         * @param {*}\n         * @return {*}\n         */\n        createMissionDialogBtn() {\n            const _this = this;\n            let params = JSON.parse(JSON.stringify(this.dialogFrom));\n            if (params.checkbox == true) {\n                params.settingTimes = -1\n            }\n            if (!params.missionName) {\n                _this.$message.error('请输入任务名称');\n                return;\n            }\n            if (!params.missionType) {\n                _this.$message.error('请选择工作模式');\n                return;\n            }\n            if (!params.settingDeep) {\n                _this.$message.error('请输入设定深度');\n                return;\n            }\n            if (!params.settingTimes && params.checkbox == false) {\n                _this.$message.error('请设定投放次数');\n                return;\n            }\n            if (!params.settingInterval) {\n                _this.$message.error('请输入投放间隔');\n                return;\n            }\n            if (!params.safeDepth) {\n                _this.$message.error('请输入距底安全深度');\n                return;\n            }\n            if (params.missionName.length > 100) {\n                _this.$message.error('任务名称过长');\n                return\n            }\n            if (params.settingDeep > 10001 || params.settingDeep < 1) {\n                _this.$message.error('设定深度格式错误请重新输入');\n                return\n            }\n            if (params.checkbox == false) {\n                if (params.settingTimes > 10001 || params.settingTimes < 1) {\n                    _this.$message.error('投放次数格式错误请重新输入');\n                    return\n                }\n            }\n            if (params.settingInterval > 301 || params.settingInterval < 1) {\n                _this.$message.error('投放间隔格式错误请重新输入');\n                return\n            }\n            if (Number(params.safeDepth) > Number(params.settingDeep)) {\n                _this.$message.error('距底安全深度格式错误请重新输入');\n                return\n            }\n            params.safeDepth = Number(params.safeDepth);\n            params.settingDeep = Number(params.settingDeep);\n            params.settingInterval = Number(params.settingInterval);\n            params.settingTimes = Number(params.settingTimes);\n            this.addJob(params);\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        isSettingTimes() {\n            if (this.dialogFrom.checkbox == true) {\n                this.isMaxTimes = true\n            } else {\n                this.isMaxTimes = false\n            }\n        },\n        /**\n         * @description: 新增任务\n         * @param {*}\n         * @return {*}\n         */\n        async addJob(row) {\n            let _this = this;\n            let result = await request({\n                url: \"/job/add_job\",\n                method: \"get\",\n                params: {\n                    jobName: row.missionName,\n                    jobMode: row.missionType,\n                    jobDeep: row.settingDeep,\n                    dropTimes: row.settingTimes,\n                    intervalTime: row.settingInterval,\n                    safeDeep: row.safeDepth,\n                    operateMode: 0,\n                    operateSpeed: 0\n                }\n            });\n            try {\n                _this.isMaxTimes = false;\n                _this.$message({\n                    message: '已添加任务',\n                    type: 'success'\n                });\n                _this.dialogVisible = false;\n                _this.dialogFrom = {\n                    missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                    missionType: 5,\n                    settingDeep: 100,\n                    settingTimes: 1,\n                    settingInterval: 5,\n                    safeDepth: 20,\n                    checkbox: false\n                };\n            } catch (error) {\n                console.error(error);\n                _this.$message({\n                    message: error,\n                    type: 'warning'\n                });\n                this.dialogVisible = false;\n            }\n        },\n        /**\n         * @description: 获取当前任务信息\n         * @param {*}\n         * @return {*}\n         */\n        async getRealtimeJob(jobId) {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_job_realdata\",\n                method: \"get\",\n                params: {\n                    jobId: jobId,\n                }\n            });\n            try {\n                window.clearInterval(_this.setinterval1);\n                if (result.data.length != 0) {\n                    _this.form = {\n                        missionName: result.data[0].jobName,\n                        missionType: result.data[0].jobMode,\n                        missionStatus: result.data[0].jobStatus,\n                        timesThrowSec: result.data[0].intervalTime,\n                        securityDeepMet: result.data[0].safeDeep,\n                        settingDepth: result.data[0].setDeep,\n                        settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                        thisSettingThrowTimes: result.data[0].runTimes\n                    }\n                    if (result.data[0].jobStatus >= 768) {\n                        if (_this.userlevel == 0) {\n                            // 导出\n                            _this.si = window.setInterval(() => {\n                                _this.exportTimes++;\n                                _this.exportFile(jobId);\n                            }, 5000)\n                        }\n                        _this.getCurrentJob();\n                    } else {\n                        _this.setinterval1 = window.setInterval(() => {\n                            _this.getRealtimeJob(_this.realTimeJobId);\n                        }, 1000)\n                    }\n                } else {\n\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 获取最新任务信息\n         * @param {*}\n         * @return {*}\n         */\n        async getCurrentJob() {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_current_job\",\n                method: \"get\"\n            });\n            try {\n                window.clearInterval(_this.setinterval);\n                if (result.data.length > 0) {\n                    _this.form = {\n                        missionName: result.data[0].jobName,\n                        missionType: result.data[0].jobMode,\n                        missionStatus: result.data[0].jobStatus,\n                        timesThrowSec: result.data[0].intervalTime,\n                        securityDeepMet: result.data[0].safeDeep,\n                        settingDepth: result.data[0].setDeep,\n                        settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                        thisSettingThrowTimes: result.data[0].runTimes\n                    };\n                    _this.realTimeJobId = result.data[0].jobId;\n                    _this.getRealtimeJob(_this.realTimeJobId)\n                } else {\n                    _this.setinterval = window.setInterval(() => {\n                        _this.getCurrentJob()\n                    }, 1000);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description:导出 \n         * @param {*}\n         * @return {*}\n         */\n        async exportFile(jobid) {\n            let _this = this;\n            let result = await request({\n                url: \"job/get_export_file\",\n                method: \"get\",\n                params: {\n                    jobId: jobid\n                }\n            });\n            try {\n                if (result.data[0].filePrepare == 1) {\n                    window.location.href = _this.baseURL + `/api/job/download?file_name=export_file/` + result.data[0].downloadFile\n                    window.clearInterval(_this.si)\n                } else {\n                    if (_this.exportTimes == 3) {\n                        window.clearInterval(_this.si);\n                        _this.exportTimes = 0;\n                        alert('数据下载失败，请使用专用软件重新获取数据文件')\n                    }\n                }\n            } catch (error) {\n                console.error(error);\n                window.clearInterval(_this.si)\n            }\n        },\n        /**\n         * @description:增加控制指令 \n         * @param {*}\n         * @return {*}\n         */\n        async addCommand(row) {\n            let _this = this;\n            let result = await request({\n                url: \"/sys-define/add_command\",\n                method: \"get\",\n                params: {\n                    cmdId: row.cmdId,\n                    cmdContent: row.cmdContent,\n                }\n            });\n            try {\n                // console.log(result.data);\n            } catch (error) {\n                console.error(error);\n            }\n        },\n    }\n}\n</script>\n\n<style scoped>\n.mission-box {\n    width: 100%;\n    height: 100%;\n}\n\n.mission-content {\n    overflow: hidden;\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #eee;\n    position: relative;\n}\n.from-content {\n    margin-top: 10px;\n    margin-left: 5px;\n}\n.btn-content {\n    padding: 15px 0;\n    display: flex;\n    justify-content: center;\n    margin-right: 30px;\n}\n.page-title {\n    font-size: 16px;\n    color: #409eff;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    height: 32px;\n    cursor: default;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 5px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.page-title .close-btn:hover {\n    color: #5cb6ff;\n}\n.left-btn-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    margin-right: 12px;\n    margin-left: 12px;\n}\n.left-btn-area .el-button {\n    display: block;\n    height: 48%;\n    width: 130px;\n    white-space: normal;\n}\n.btn-content .create-btn {\n    display: block;\n}\n.delete-btn {\n    display: block;\n    /* padding: 0 3px; */\n}\n.el-button + .el-button {\n    margin-left: 0;\n}\n.usedinput[disabled] {\n    border-color: #e4e7ed;\n    color: #e4e7ed;\n}\n.labelfont {\n    font-size: 14px;\n    font-weight: 600;\n    color: #303133;\n    display: inline-block;\n    margin-left: 18px;\n}\n.form-content {\n    margin: 10px 0 12px 0;\n}\n</style>"],"sourceRoot":"src/components"}]}