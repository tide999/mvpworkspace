{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/mvp-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/mvp-client/src/components/apparatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/mvp-client/src/components/apparatus.vue","mtime":1600409468549},{"path":"/Users/hezitai/Desktop/MVPClient/mvp-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvp-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvp-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/mvp-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["apparatus.vue"],"names":[],"mappingsfile":"apparatus.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"apparatus\">\n        <p class=\"page-title\">\n            <span>仪器数据显示</span>\n            <span class=\"close-btn\" style=\"right:20px\" @click=\"handleSize('apparatus')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n            <span class=\"close-btn\" @click=\"closeItem('apparatus')\"><i class=\"el-icon-circle-close\"></i></span>\n        </p>\n        <div class=\"apparatus-content\">\n            <div v-show=\"pageSize == true\">\n                <div class=\"apparatus-from-content\">\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" size=\"mini\" class=\"from-content\" inline :label-position=\"labelPosition\">\n                        <el-form-item label=\"数据时间\">\n                            <el-input disabled v-model=\"form.getDataTime\" style=\"width:140px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"仪器下降速度(m/s)\">\n                            <el-input disabled v-model=\"form.instrumentDownSpeed\" style=\"width:130px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"仪器深度(m)\">\n                            <el-input disabled v-model=\"form.instrumentDepth\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"温度(℃)\">\n                            <el-input disabled v-model=\"form.temperature\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"电导率(S/m)\">\n                            <el-input disabled v-model=\"form.electricConductivity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"压力(bar)\">\n                            <el-input disabled v-model=\"form.pressure\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"盐度(psu)\">\n                            <el-input disabled v-model=\"form.salinity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"声速(m/s)\">\n                            <el-input disabled v-model=\"form.soundVelocity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"PH()\">\n                            <el-input disabled v-model=\"form.ph\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"浊度(ug/l)\">\n                            <el-input disabled v-model=\"form.turbidity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"叶绿素(ug/l)\">\n                            <el-input disabled v-model=\"form.chlorophyll\"></el-input>\n                        </el-form-item>\n                    </el-form>\n                </div>\n                <div id=\"myChart\" :style=\"{ width: '100%', height: '450px' }\"></div>\n                <div class=\"apparatus-from-content-btm\">\n                    <el-form ref=\"form\" :model=\"formdown\" size=\"mini\" class=\"from-content\" inline>\n                        <el-form-item label=\"当前海深(米)\">\n                            <el-input disabled v-model=\"formdown.oceanDeep\" style=\"width:80px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"经度\">\n                            <el-input disabled v-model=\"formdown.longitude\" style=\"width:120px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"纬度\">\n                            <el-input disabled v-model=\"formdown.latitude\" style=\"width:120px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"航速(节)\">\n                            <el-input disabled v-model=\"formdown.speed\" style=\"width:100px\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"数据保存位置\">\n                            <el-input disabled v-model=\"formdown.dataFileAddress\" style=\"width:250px\"></el-input>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n            <div v-show=\"pageSize == false\">\n                <div class=\"grid-content\">\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" size=\"mini\" class=\"from-content-1\" :label-position=\"labelPosition\">\n                        <el-form-item label=\"数据时间\">\n                            <el-input disabled v-model=\"form.getDataTime\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"仪器下降速度(m/s)\">\n                            <el-input disabled v-model=\"form.instrumentDownSpeed\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"仪器深度(m)\">\n                            <el-input disabled v-model=\"form.instrumentDepth\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"温度(℃)\">\n                            <el-input disabled v-model=\"form.temperature\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"电导率(S/m)\">\n                            <el-input disabled v-model=\"form.electricConductivity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"压力(bar)\">\n                            <el-input disabled v-model=\"form.pressure\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"盐度(psu)\">\n                            <el-input disabled v-model=\"form.salinity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"声速(m/s)\">\n                            <el-input disabled v-model=\"form.soundVelocity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"PH()\">\n                            <el-input disabled v-model=\"form.ph\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"浊度(ug/l)\">\n                            <el-input disabled v-model=\"form.turbidity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"叶绿素(ug/l)\">\n                            <el-input disabled v-model=\"form.chlorophyll\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"当前海深(米)\">\n                            <el-input disabled v-model=\"formdown.oceanDeep\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"经度\">\n                            <el-input disabled v-model=\"formdown.longitude\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"纬度\">\n                            <el-input disabled v-model=\"formdown.latitude\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"航速(节)\">\n                            <el-input disabled v-model=\"formdown.speed\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"数据保存位置\">\n                            <el-input disabled v-model=\"formdown.dataFileAddress\"></el-input>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\n// import elementResizeDetectorMakers from 'element-resize-detector'\nexport default {\n    name: 'apparatus',\n    data() {\n        return {\n            setInterval: null,\n            thisTimes: '',\n            limit: 1,\n            iconName: 'el-icon-right',\n            labelPosition: \"top\",\n            labelPosition1: \"left\",\n            form: {\n                getDataTime: '2020-09-10 15:13:45',\n                instrumentDownSpeed: '-27.16286',\n                instrumentDepth: '90.92881',\n                temperature: '18.769869',\n                electricConductivity: '0.01287323',\n                pressure: '60.93201',\n                salinity: '9.082812',\n                soundVelocity: '1233.870',\n                ph: '1.81818273',\n                turbidity: '0.62736273',\n                chlorophyll: '0.0000002736',\n            },\n            formdown: {\n                oceanDeep: '221.2389212',\n                longitude: '29.239102',\n                latitude: '213.23182',\n                speed: '0',\n                dataFileAddress: `D:/Datas`,\n            },\n            myChart: \"\",\n            option: {\n                title: {\n                    text: ''\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                color: ['#DC143C', '#800080', '#0000FF', '#5F9EA0', '#48D1CC', '#00FF7F', '#006400', '#FFFF00', '#FFD700', '#FF8C00'],\n                legend: {\n                    data: ['深度(米)', '当前海深(米)', '温度(℃)', '导电率(S/m)', '压力(bar)', '盐度(psu)', '声速(m/s)', 'PH()', '浊度(ug/l)', '叶绿素(ug/l)']\n                },\n                grid: {\n                    left: '3%',\n                    right: '4%',\n                    bottom: '5%',\n                    containLabel: false\n                },\n                dataZoom: [{\n                    type: 'inside',\n                }],\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: [],\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                },\n                yAxis: [{\n                    // name: '深度',\n                    position: 'left',\n                    type: 'value',\n                    show: true,\n                    inverse: true,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    },\n\n                }, {\n                    // name: '温度',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '导电率',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '压力',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '盐度',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '声速',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: 'PH',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '浊度',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }, {\n                    // name: '叶绿素',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: false },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        formatter() {\n                            return \"\"\n                        }\n                    }\n                }],\n                series: [\n                    {\n                        name: '深度(米)',\n                        type: 'line',\n                        yAxisIndex: 0,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '当前海深(米)',\n                        type: 'line',\n                        yAxisIndex: 0,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '温度(℃)',\n                        type: 'line',\n                        yAxisIndex: 1,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '导电率(S/m)',\n                        type: 'line',\n                        yAxisIndex: 2,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '压力(bar)',\n                        type: 'line',\n                        yAxisIndex: 3,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '盐度(psu)',\n                        type: 'line',\n                        yAxisIndex: 4,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '声速(m/s)',\n                        type: 'line',\n                        yAxisIndex: 5,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: 'PH()',\n                        type: 'line',\n                        yAxisIndex: 6,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '浊度(ug/l)',\n                        type: 'line',\n                        yAxisIndex: 7,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        name: '叶绿素(ug/l)',\n                        type: 'line',\n                        yAxisIndex: 8,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    }\n                ]\n            }\n        }\n    },\n    mounted() {\n        this.drawLine();\n        let _this = this;\n        window.onresize = function () {\n            _this.myChart.resize()\n        }\n        this.getDataSec();\n    },\n    props: {\n        pageSize: Boolean,\n    },\n    watch: {\n        pageSize(newVal, oldVal) {\n            console.log('apparatus' + newVal);\n            if (newVal == false) {\n                this.iconName = 'el-icon-back'\n            } else {\n                this.iconName = 'el-icon-right'\n            }\n        }\n    },\n    methods: {\n        /**\n         * 初始化Echarts，监听父容器大小自适应宽度、高度\n        */\n        drawLine() {\n            let _this = this;\n            // 基于准备好的dom，初始化echarts实例\n            this.myChart = this.$echarts.init(document.getElementById(\"myChart\"));\n            this.myChart.setOption(this.option, true);\n            let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n            let erd = elementResizeDetectorMaker();\n            let worldMapContainer = document.getElementById('apparatus');\n            erd.listenTo(worldMapContainer, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementById(\"myChart\").style.width = element.offsetWidth\n                    _this.myChart.resize(); //变化重新渲染饼图\n                })\n            });\n        },\n        /**\n         * 定时器\n        */\n        getDataSec() {\n            let _this = this\n            _this.setInterval = setInterval(() => {\n                _this.getApparatusData({\n                    thisTimes: _this.thisTimes,\n                    limit: _this.limit\n                })\n            }, 1000)\n        },\n        /**\n         * 关闭当前组件窗口\n        */\n        closeItem(ele) {\n            this.$emit('sendEleName', ele);\n        },\n        /**\n         * 放大缩小当前组件窗口\n        */\n        handleSize(ele) {\n            if (this.pageSize == true) {\n                this.pageSize = false;\n            } else {\n                this.pageSize = true;\n            }\n            this.$emit('contrlEleName', {\n                ele: ele,\n                switch: this.pageSize\n            });\n        },\n        /**\n         * 动态更新Echarts的option\n        */\n        renderEcharts(result) {\n            let _this = this;\n            if (!_this.myChart) {\n                return\n            }\n            let options = _this.myChart.getOption();\n            options.xAxis[0].data.push(result.data[0].timeTag);\n            options.yAxis[0].max = result.data[0].oceanDeep + (result.data[0].oceanDeep * 0.2)\n            options.series[0].data.push(result.data[0].devDeep) // 深度\n            options.series[1].data.push(result.data[0].oceanDeep) // 当前海深\n            options.series[2].data.push(result.data[0].dataTemp) // 温度\n            options.series[3].data.push(result.data[0].dataConv) // 导电率\n            options.series[4].data.push(result.data[0].dataP) // 压力\n            options.series[5].data.push(result.data[0].dataSal) // 盐度\n            options.series[6].data.push(result.data[0].dataSV) // 声速\n            options.series[7].data.push(result.data[0].dataPH) // Ph\n            _this.myChart.setOption(options)\n        },\n        /**\n         * 获取Echarts数据\n        */\n        async getApparatusData(row) {\n            let _this = this;\n            let result = await request({\n                url: \"realtime\",\n                method: \"get\",\n                params: {\n                    start_time: row.thisTimes,\n                    limit: row.limit,\n                }\n            });\n            try {\n                if (result.data.length == 0) {\n                    clearInterval(_this.setInterval);\n                    return;\n                }\n                _this.thisTimes = result.data[0].timeTag;\n                // if (_this.option.xAxis.data.length == 0) {\n                //     _this.option.xAxis.data.push(0)\n                // } else {\n                //     _this.option.xAxis.data.push(Number(_this.option.xAxis.data[_this.option.xAxis.data.length - 1]) + 1);\n                // }\n                // _this.option.xAxis[0].data.push(result.data[0].timeTag);\n                // _this.option.yAxis[0].max = result.data[0].oceanDeep + (result.data[0].oceanDeep * 0.2)\n                // _this.option.series[0].data.push(result.data[0].devDeep) // 深度\n                // _this.option.series[1].data.push(result.data[0].oceanDeep) // 当前海深\n                // _this.option.series[2].data.push(result.data[0].dataTemp) // 温度\n                // _this.option.series[3].data.push(result.data[0].dataConv) // 导电率\n                // _this.option.series[4].data.push(result.data[0].dataP) // 压力\n                // _this.option.series[5].data.push(result.data[0].dataSal) // 盐度\n                // _this.option.series[6].data.push(result.data[0].dataSV) // 声速\n                // _this.option.series[7].data.push(result.data[0].dataPH) // Ph\n                // _this.option.series[8].data.push(result.data[0].) // 浊度\n                // _this.option.series[9].data.push(result.data[0].) // 叶绿素\n                // _this.myChart.setOption(_this.option, true);\n                _this.renderEcharts(result)\n                _this.form = {\n                    getDataTime: result.data[0].timeTag,\n                    instrumentDownSpeed: result.data[0].devSpeed,\n                    instrumentDepth: result.data[0].devDeep,\n                    temperature: result.data[0].dataTemp,\n                    electricConductivity: result.data[0].dataConv,\n                    pressure: result.data[0].dataP,\n                    salinity: result.data[0].dataSal,\n                    soundVelocity: result.data[0].dataSV,\n                    ph: result.data[0].dataPH,\n                    turbidity: '0',\n                    chlorophyll: '0',\n                };\n                _this.formdown = {\n                    oceanDeep: result.data[0].oceanDeep,\n                    longitude: result.data[0].dataZ,\n                    latitude: result.data[0].dataY,\n                    speed: result.data[0].shipSpeed,\n                    dataFileAddress: `D:/Datas`,\n                };\n\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        // async getJsonDate(row) {\n        //     // console.log(row);\n        //     this.loadingPage = true;\n        //     let result = await request({\n        //         url: \"/json/index.json\",\n        //         method: \"get\"\n        //     });\n        //     // console.log(result, \"result\");\n        //     try {\n        //         console.log(result);\n        //     } catch (error) {\n        //         console.log(error);\n        //     }\n        // }\n\n    }\n}\n</script>\n\n<style scoped>\n.apparatus-content {\n    /* min-width: 1200px; */\n}\n.apparatus-from-content {\n    margin: 8px 0 0 12px;\n}\n.apparatus-from-content .from-content {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n}\n.apparatus-from-content-btm {\n    margin: 10px 0 0 12px;\n}\n.apparatus-from-content-btm .from-content {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n}\n.page-title {\n    font-size: 16px;\n    color: #409eff;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    border-bottom: 1px solid #eee;\n    cursor: default;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.grid-content {\n    padding-left: 10px;\n}\n.from-content-1 .el-form-item {\n    margin-bottom: 6px;\n}\n</style>"]}]}