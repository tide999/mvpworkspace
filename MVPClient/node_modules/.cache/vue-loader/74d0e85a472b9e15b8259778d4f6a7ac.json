{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/src/components/apparatus.vue?vue&type=style&index=0&id=3955b721&scoped=true&lang=css&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/src/components/apparatus.vue","mtime":1601105403986},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHBhcmF0dXMtY29udGVudCB7CiAgICAvKiBtaW4td2lkdGg6IDEyMDBweDsgKi8KfQoKLmJpZ1NjcmVlbiB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KLnNtZWxsU2NyZWVuIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouZnJvbS1jb250ZW50IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgcGFkZGluZzogMCAyMHB4OwogICAgbWFyZ2luLXRvcDogOTBweDsKICAgIHotaW5kZXg6IDk5OwogICAgLyogb3ZlcmZsb3c6IGF1dG87ICovCn0KLmFwcGFyYXR1cy1mcm9tLWNvbnRlbnQgewogICAgaGVpZ2h0OiAxMDAlOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgICB3aWR0aDogMTUlOwogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZWVlOwp9Ci5wYWdlLXRpdGxlIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGNvbG9yOiAjNDA5ZWZmOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgbWFyZ2luOiA1cHggMTBweDsKICAgIGxpbmUtaGVpZ2h0OiAzMnB4OwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7CiAgICBjdXJzb3I6IGRlZmF1bHQ7Cn0KLnBhZ2UtdGl0bGUgLmNsb3NlLWJ0biB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMHB4OwogICAgdG9wOiAwcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBjb2xvcjogIzMwMzEzMzsKfQouZ3JpZC1jb250ZW50IHsKICAgIG92ZXJmbG93OiBhdXRvOwogICAgcGFkZGluZzogMCAyMHB4OwogICAgei1pbmRleDogOTk7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmZyb20tY29udGVudC0xIHsKICAgIG1hcmdpbi10b3A6IDg1cHg7Cn0KLmZyb20tY29udGVudC0xIC5lbC1mb3JtLWl0ZW0gewogICAgbWFyZ2luLWJvdHRvbTogNnB4Owp9Ci5teUNoYXJ0IHsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7Cn0KLyogNjggKi8KLnRvcC1pbnB1dCB7CiAgICBjdXJzb3I6IGRlZmF1bHQ7CiAgICBtYXJnaW46IDAgMjBweDsKICAgIG1hcmdpbi1ib3R0b206IDE4cHg7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOwogICAgcGFkZGluZy1ib3R0b206IDIwcHg7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICB6LWluZGV4OiAxMDA7CiAgICBwYWRkaW5nLXJpZ2h0OiAxNHB4Owp9Ci50b3AtaW5wdXQgcCB7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICBmbG9hdDogbGVmdDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGNvbG9yOiAjMzAzMTMzOwogICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgICBwYWRkaW5nOiAwIDEycHggMCAwOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIGZvbnQtd2VpZ2h0OiA2MDA7CiAgICBtYXJnaW46IDA7Cn0KLnRvcC1pbnB1dC0xIHsKICAgIGN1cnNvcjogZGVmYXVsdDsKICAgIG1hcmdpbjogMCAyMHB4OwogICAgbWFyZ2luLWJvdHRvbTogMThweDsKICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMDsKICAgIHotaW5kZXg6IDEwMDsKICAgIHBhZGRpbmctcmlnaHQ6IDE0cHg7Cn0KLnRvcC1pbnB1dC0xIHAgewogICAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgZmxvYXQ6IGxlZnQ7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBjb2xvcjogIzMwMzEzMzsKICAgIGxpbmUtaGVpZ2h0OiA0MHB4OwogICAgcGFkZGluZzogMCAxMnB4IDAgMDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBmb250LXdlaWdodDogNjAwOwogICAgbWFyZ2luOiAwOwp9Cg=="},{"version":3,"sources":["apparatus.vue"],"names":[],"mappingsrfile":"apparatus.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"apparatus\">\n        <!-- 点击输入框  对应的折线加粗 -->\n        <p class=\"page-title\">\n            <span>仪器数据显示</span>\n            <span class=\"close-btn\" style=\"right:20px\" @click=\"handleSize('apparatus')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n            <span class=\"close-btn\" @click=\"closeItem('apparatus')\"><i class=\"el-icon-circle-close\"></i></span>\n        </p>\n        <div class=\"apparatus-content\">\n            <div class=\"bigScreen\" v-show=\"pageSize == true\">\n                <div id=\"myChart\" :style=\"{ width: '85%', height: '500px' }\"></div>\n                <div class=\"apparatus-from-content\">\n                    <div class=\"top-input\">\n                        <p>数据时间</p>\n                        <el-input size=\"mini\" disabled v-model=\"form.getDataTime\"></el-input>\n                    </div>\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" size=\"mini\" class=\"from-content\" :label-position=\"labelPosition\">\n                        <el-form-item label=\"仪器下降速度(m/s)\">\n                            <el-input disabled v-model=\"form.instrumentDownSpeed\"></el-input>\n                            <!-- <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(1)\">查看坐标轴</el-button> -->\n                        </el-form-item>\n                        <el-form-item label=\"仪器深度(m)\">\n                            <el-input disabled v-model=\"form.instrumentDepth\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(0)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"温度(℃)\">\n                            <el-input disabled v-model=\"form.temperature\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(2)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"电导率(S/m)\">\n                            <el-input disabled v-model=\"form.electricConductivity\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(3)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"压力(bar)\">\n                            <el-input disabled v-model=\"form.pressure\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(4)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"盐度(psu)\">\n                            <el-input disabled v-model=\"form.salinity\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(5)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"声速(m/s)\">\n                            <el-input disabled v-model=\"form.soundVelocity\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(6)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"PH()\">\n                            <el-input disabled v-model=\"form.ph\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(7)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"浊度(ug/l)\">\n                            <el-input disabled v-model=\"form.turbidity\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(8)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"叶绿素(ug/l)\">\n                            <el-input disabled v-model=\"form.chlorophyll\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(9)\">查看坐标轴</el-button>\n                        </el-form-item>\n\n                        <el-form-item label=\"当前海深(米)\">\n                            <el-input disabled v-model=\"form.oceanDeep\"></el-input>\n                            <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(1)\">查看坐标轴</el-button>\n                        </el-form-item>\n                        <el-form-item label=\"经度\">\n                            <el-input disabled v-model=\"form.longitude\"></el-input>\n                            <!-- <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(1)\">查看坐标轴</el-button> -->\n                        </el-form-item>\n                        <el-form-item label=\"纬度\">\n                            <el-input disabled v-model=\"form.latitude\"></el-input>\n                            <!-- <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(1)\">查看坐标轴</el-button> -->\n                        </el-form-item>\n                        <el-form-item label=\"航速(节)\">\n                            <el-input disabled v-model=\"form.speed\"></el-input>\n                            <!-- <el-button size=\"mini\" style=\"width:100%\" @click=\"showYAxisAndWeightLine(1)\">查看坐标轴</el-button> -->\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </div>\n            <div v-show=\"pageSize == false\" class=\"smellScreen\">\n                <div class=\"top-input-1\">\n                    <p>数据时间</p>\n                    <el-input size=\"mini\" disabled v-model=\"form.getDataTime\"></el-input>\n                </div>\n                <div class=\"grid-content\">\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" size=\"mini\" class=\"from-content-1\" :label-position=\"labelPosition\">\n                        <el-form-item label=\"仪器下降速度(m/s)\">\n                            <el-input disabled v-model=\"form.instrumentDownSpeed\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"仪器深度(m)\">\n                            <el-input disabled v-model=\"form.instrumentDepth\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"温度(℃)\">\n                            <el-input disabled v-model=\"form.temperature\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"电导率(S/m)\">\n                            <el-input disabled v-model=\"form.electricConductivity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"压力(bar)\">\n                            <el-input disabled v-model=\"form.pressure\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"盐度(psu)\">\n                            <el-input disabled v-model=\"form.salinity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"声速(m/s)\">\n                            <el-input disabled v-model=\"form.soundVelocity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"PH()\">\n                            <el-input disabled v-model=\"form.ph\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"浊度(ug/l)\">\n                            <el-input disabled v-model=\"form.turbidity\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"叶绿素(ug/l)\">\n                            <el-input disabled v-model=\"form.chlorophyll\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"当前海深(米)\">\n                            <el-input disabled v-model=\"form.oceanDeep\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"经度\">\n                            <el-input disabled v-model=\"form.longitude\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"纬度\">\n                            <el-input disabled v-model=\"form.latitude\"></el-input>\n                        </el-form-item>\n                        <el-form-item label=\"航速(节)\">\n                            <el-input disabled v-model=\"form.speed\"></el-input>\n                        </el-form-item>\n                        <!-- <el-form-item label=\"数据保存位置\">\n                            <el-input disabled v-model=\"formdown.dataFileAddress\"></el-input>\n                        </el-form-item> -->\n                    </el-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n    name: 'apparatus',\n    data() {\n        return {\n            setInterval: null,\n            thisTimes: '',\n            limit: 1,\n            iconName: 'el-icon-right',\n            labelPosition: \"top\",\n            labelPosition1: \"left\",\n            form: {\n                getDataTime: '2020-09-10 15:13:45',\n                instrumentDownSpeed: '-27.16286',\n                instrumentDepth: '90.92881',\n                temperature: '18.769869',\n                electricConductivity: '0.01287323',\n                pressure: '60.93201',\n                salinity: '9.082812',\n                soundVelocity: '1233.870',\n                ph: '1.81818273',\n                turbidity: '0.62736273',\n                chlorophyll: '0.0000002736',\n                oceanDeep: '221.2389212',\n                longitude: '29.239102',\n                latitude: '213.23182',\n                speed: '0',\n            },\n            myChart: \"\",\n            option: {\n                title: {\n                    text: ''\n                },\n                grid: {\n                    left: '5%',\n                    right: '2%',\n                    bottom: '5%',\n                    containLabel: false\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                color: ['#0000FF','#DC143C', '#800080',  '#5F9EA0', '#FF8C00', '#48D1CC', '#00FF7F', '#006400', '#FFFF00', '#FFD700'],\n                legend: {\n                    data: ['深度(米)', '当前海深(米)', '温度(℃)', '导电率(S/m)', '压力(bar)', '盐度(psu)', '声速(m/s)', 'PH()', '浊度(ug/l)', '叶绿素(ug/l)'],\n                    left: '12%',\n                    top: '0%',\n                    zlevel: 999,\n                },\n\n                dataZoom: [\n                    {\n                        type: 'inside',\n                    },\n                ],\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: [],\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        show: false\n                    }\n                },\n                yAxis: [{\n                    id: 0,\n                    name: '深度',\n                    position: 'left',\n                    type: 'value',\n                    show: true,\n                    inverse: true,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    nameLocation: 'start',\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    },\n\n                }, {\n                    id: 1,\n                    name: '海深',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    inverse: true,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    nameLocation: 'start',\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    },\n\n                }, {\n                    id: 2,\n                    name: '温度',\n                    position: 'left',\n                    type: 'value',\n                    // offset:30,\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 3,\n                    name: '导电率',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    // offset:60,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 4,\n                    name: '压力',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 5,\n                    name: '盐度',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 6,\n                    name: '声速',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 7,\n                    name: 'PH',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 8,\n                    name: '浊度',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }, {\n                    id: 9,\n                    name: '叶绿素',\n                    position: 'left',\n                    type: 'value',\n                    show: false,\n                    axisLine: { show: true },\n                    axisTick: { show: false },\n                    splitLine: { show: true },\n                    axisLabel: {\n                        // formatter() {\n                        //     return \"\"\n                        // }\n                    }\n                }],\n                series: [\n                    {\n                        id: 0,\n                        name: '深度(米)',\n                        type: 'line',\n                        yAxisIndex: 0,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 1,\n                        name: '当前海深(米)',\n                        type: 'line',\n                        yAxisIndex: 0,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 2,\n                        name: '温度(℃)',\n                        type: 'line',\n                        yAxisIndex: 1,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 3,\n                        name: '导电率(S/m)',\n                        type: 'line',\n                        yAxisIndex: 2,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 4,\n                        name: '压力(bar)',\n                        type: 'line',\n                        yAxisIndex: 3,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 5,\n                        name: '盐度(psu)',\n                        type: 'line',\n                        yAxisIndex: 4,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 6,\n                        name: '声速(m/s)',\n                        type: 'line',\n                        yAxisIndex: 5,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 7,\n                        name: 'PH()',\n                        type: 'line',\n                        yAxisIndex: 6,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 8,\n                        name: '浊度(ug/l)',\n                        type: 'line',\n                        yAxisIndex: 7,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    },\n                    {\n                        id: 9,\n                        name: '叶绿素(ug/l)',\n                        type: 'line',\n                        yAxisIndex: 8,\n                        symbol: 'none',\n                        smooth: true,\n                        data: []\n                    }\n                ]\n            }\n        }\n    },\n    mounted() {\n        // grid-content\n        document.getElementsByClassName('apparatus-from-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementsByClassName('grid-content')[0].style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        document.getElementById('myChart').style.height = (document.getElementById('apparatus').clientHeight - 50) + 'px';\n        // console.log(document.getElementById('myChart').style.height = )\n        this.getAllnDate()\n        this.drawLine();\n        let _this = this;\n        window.onresize = function () {\n            _this.myChart.resize()\n        }\n        this.getDataSec();\n    },\n    filters: {\n        formatterDecimals(val) {\n            return val.toFixed(4)\n        }\n    },\n    props: {\n        pageSize: Boolean,\n    },\n    watch: {\n        pageSize(newVal, oldVal) {\n            console.log('apparatus' + newVal);\n            if (newVal == false) {\n                this.iconName = 'el-icon-back'\n            } else {\n                this.iconName = 'el-icon-right'\n            }\n        }\n    },\n    methods: {\n        showYAxisAndWeightLine(row) {\n            // console.log(row);\n            let _this = this;\n            let options = _this.myChart.getOption()\n            console.log(options)\n            for (let i in options.yAxis) {\n                options.yAxis[i].show = false;\n                options.series[i].lineStyle.width = 2;\n                if (options.yAxis[i].id == row) {\n                    options.yAxis[i].show = true;\n                }\n                if (options.series[i].id == row) {\n                    options.series[i].lineStyle.width = 6;\n                }\n            }\n            _this.myChart.setOption(options);\n        },\n        /**\n         * 初始化Echarts，监听父容器大小自适应宽度、高度\n        */\n        drawLine() {\n            let _this = this;\n            // 基于准备好的dom，初始化echarts实例\n            this.myChart = this.$echarts.init(document.getElementById(\"myChart\"));\n            this.myChart.setOption(this.option, true);\n            let elementResizeDetectorMaker = require(\"element-resize-detector\");//引入监听dom变化的组件\n            let erd = elementResizeDetectorMaker();\n            let worldMapContainer = document.getElementById('apparatus');\n            erd.listenTo(worldMapContainer, function (element) {  //执行监听 \n                _this.$nextTick(function () {\n                    document.getElementById(\"myChart\").style.width = element.offsetWidth\n                    _this.myChart.resize(); //变化重新渲染饼图\n                })\n            });\n            /** \n                legend点击事件\n            */\n            this.myChart.on('legendselectchanged', function (params) {\n                // console.log(obj)\n                var option = this.getOption();\n                var select_key = Object.keys(params.selected);\n                var select_value = Object.values(params.selected);\n                var n = 0;\n                select_value.map(res => {\n                    if (!res) {\n                        n++;\n                    }\n                });\n                console.log('n', n)\n                if (n == select_value.length) {\n                    option.legend[0].selected[params.name] = true;\n                }\n                this.setOption(option)\n\n            });\n        },\n        /**\n         * 定时器\n        */\n        getDataSec() {\n            let _this = this\n            _this.setInterval = setInterval(() => {\n                _this.getApparatusData({\n                    thisTimes: _this.thisTimes,\n                    limit: _this.limit\n                })\n            }, 1000)\n        },\n        /**\n         * 关闭当前组件窗口\n        */\n        closeItem(ele) {\n            this.$emit('sendEleName', ele);\n        },\n        /**\n         * 放大缩小当前组件窗口\n        */\n        handleSize(ele) {\n            if (this.pageSize == true) {\n                this.pageSize = false;\n            } else {\n                this.pageSize = true;\n            }\n            this.$emit('contrlEleName', {\n                ele: ele,\n                switch: this.pageSize\n            });\n        },\n        /**\n         * 动态更新Echarts的option\n        */\n        renderEcharts(result) {\n            let _this = this;\n            if (!_this.myChart) {\n                return\n            }\n            let options = _this.myChart.getOption();\n            if (options.xAxis[0].data.indexOf(result.data[0].timeTag) == -1) {\n                options.xAxis[0].data.push(result.data[0].timeTag);\n            }\n            options.yAxis[0].max = result.data[0].oceanDeep == null ? 500 : result.data[0].oceanDeep + (result.data[0].oceanDeep.toFixed(0) * 0.2)\n            options.yAxis[6].max = result.data[0].dataSV == null ? 2000 : result.data[0].dataSV + (result.data[0].dataSV.toFixed(0) * 0.5)\n            options.series[0].data.push(result.data[0].devDeep == null ? 0 : result.data[0].devDeep) // 深度\n            options.series[1].data.push(result.data[0].oceanDeep == null ? 0 : result.data[0].oceanDeep) // 当前海深\n            options.series[2].data.push(result.data[0].dataTemp == null ? 0 : result.data[0].dataTemp) // 温度\n            options.series[3].data.push(result.data[0].dataConv == null ? 0 : result.data[0].dataConv) // 导电率\n            options.series[4].data.push(result.data[0].dataP == null ? 0 : result.data[0].dataP) // 压力\n            options.series[5].data.push(result.data[0].dataSal == null ? 0 : result.data[0].dataSal) // 盐度\n            options.series[6].data.push(result.data[0].dataSV == null ? 0 : result.data[0].dataSV) // 声速\n            options.series[7].data.push(result.data[0].dataPH == null ? 0 : result.data[0].dataPH) // Ph\n            //    options.xAxis.data.push(Number(_this.option.xAxis.data[_this.option.xAxis.data.length - 1]) + 20)\n            //    options.series[0].data.push(Number(_this.option.series[0].data[_this.option.series[0].data.length - 1] + 40)) // 深度\n            //    options.series[1].data.push(Number(_this.option.series[1].data[_this.option.series[1].data.length - 1] + 2)) // 当前海深\n            //    options.series[2].data.push(Number(_this.option.series[2].data[_this.option.series[2].data.length - 1])) // 温度\n            //    options.series[3].data.push(Number(_this.option.series[3].data[_this.option.series[3].data.length - 1] + 1)) // 导电率\n            //    options.series[4].data.push(Number(_this.option.series[4].data[_this.option.series[4].data.length - 1] + Math.floor(Math.random() * 10))) // 压力\n            //    options.series[5].data.push(Number(_this.option.series[5].data[_this.option.series[5].data.length - 1] + Math.floor(Math.random()))) // 盐度\n            //    options.series[6].data.push(Number(_this.option.series[6].data[_this.option.series[6].data.length - 1] + Math.floor(Math.random() * 20))) // 声速\n            //    options.series[7].data.push(Number(_this.option.series[7].data[_this.option.series[7].data.length - 1] + Math.floor(Math.random() * 3))) // Ph\n            //    options.series[8].data.push(Number(_this.option.series[8].data[_this.option.series[8].data.length - 1] + Math.floor(Math.random() * 4))) // 浊度\n            //    options.series[9].data.push(Number(_this.option.series[9].data[_this.option.series[9].data.length - 1])) // 叶绿素\n            _this.myChart.setOption(options)\n        },\n        /**\n         * 获取Echarts数据\n        */\n        async getApparatusData(row) {\n            let _this = this;\n            let result = await request({\n                url: \"realtime\",\n                method: \"get\",\n                params: {\n                    start_time: row.thisTimes,\n                    limit: row.limit,\n                }\n            });\n            try {\n                if (result.data.length == 0) {\n                    clearInterval(_this.setInterval);\n                    return;\n                }\n                // result.data[0].dataConv = result.data[0].dataConv.toFixed(4)\n                // result.data[0].dataP = result.data[0].dataP.toFixed(4)\n                // result.data[0].dataPH = result.data[0].dataPH.toFixed(4)\n                // result.data[0].dataSV = result.data[0].dataSV.toFixed(4)\n                // result.data[0].dataSal = result.data[0].dataSal.toFixed(4)\n                // result.data[0].dataTemp = result.data[0].dataTemp.toFixed(4)\n                // result.data[0].dataY = result.data[0].dataY.toFixed(4)\n                // result.data[0].dataZ = result.data[0].dataZ.toFixed(4)\n                // result.data[0].devDeep = result.data[0].devDeep.toFixed(4)\n                // result.data[0].devSpeed = result.data[0].devSpeed.toFixed(4)\n                _this.thisTimes = result.data[0].timeTag;\n                _this.renderEcharts(result)\n                _this.form = {\n                    getDataTime: result.data[0].timeTag,\n                    instrumentDownSpeed: result.data[0].devSpeed.toFixed(4),\n                    instrumentDepth: result.data[0].devDeep.toFixed(4),\n                    temperature: result.data[0].dataTemp.toFixed(4),\n                    electricConductivity: result.data[0].dataConv.toFixed(4),\n                    pressure: result.data[0].dataP.toFixed(4),\n                    salinity: result.data[0].dataSal.toFixed(4),\n                    soundVelocity: result.data[0].dataSV.toFixed(4),\n                    ph: result.data[0].dataPH.toFixed(4),\n                    turbidity: '0',\n                    chlorophyll: '0',\n                    oceanDeep: result.data[0].oceanDeep == null ? 0 : result.data[0].oceanDeep.toFixed(4),\n                    longitude: result.data[0].longitude == null ? 0 : result.data[0].longitude.toFixed(4),\n                    latitude: result.data[0].iatitude == null ? 0 : result.data[0].iatitude.toFixed(4),\n                    speed: result.data[0].shipSpeed == null ? 0 : result.data[0].shipSpeed.toFixed(4),\n                };\n            } catch (error) {\n                console.log(error);\n            }\n        },\n        /**\n         * 初始化Echarts  X轴\n        */\n        async getAllnDate() {\n            let _this = this;\n            let result = await request({\n                url: \"realtime\",\n                method: \"get\"\n            });\n            try {\n                // console.log(result.data.length);\n                let timgTagArr = [];\n                if (result.data.length < 61) {\n                    for (let i = 0; i < result.data.length; i++) {\n                        timgTagArr.push(result.data[i].timeTag);\n                    }\n                } else {\n                    for (let i = 0; i < 61; i++) {\n                        timgTagArr.push(result.data[i].timeTag);\n                    }\n                }\n                let options = _this.myChart.getOption();\n                // console.log(options)\n                options.xAxis[0].data = timgTagArr\n                _this.myChart.setOption(options)\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        // async getJsonDate(row) {\n        //     // console.log(row);\n        //     this.loadingPage = true;\n        //     let result = await request({\n        //         url: \"/json/index.json\",\n        //         method: \"get\"\n        //     });\n        //     // console.log(result, \"result\");\n        //     try {\n        //         console.log(result);\n        //     } catch (error) {\n        //         console.log(error);\n        //     }\n        // }\n\n    }\n}\n</script>\n\n<style scoped>\n.apparatus-content {\n    /* min-width: 1200px; */\n}\n\n.bigScreen {\n    height: 100%;\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n}\n.smellScreen {\n    height: 100%;\n    position: relative;\n}\n.from-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0 20px;\n    margin-top: 90px;\n    z-index: 99;\n    /* overflow: auto; */\n}\n.apparatus-from-content {\n    height: 100%;\n    overflow: auto;\n    width: 15%;\n    border-left: 1px solid #eee;\n}\n.page-title {\n    font-size: 16px;\n    color: #409eff;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    border-bottom: 1px solid #eee;\n    cursor: default;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.grid-content {\n    overflow: auto;\n    padding: 0 20px;\n    z-index: 99;\n    position: relative;\n}\n.from-content-1 {\n    margin-top: 85px;\n}\n.from-content-1 .el-form-item {\n    margin-bottom: 6px;\n}\n.myChart {\n    border-right: 1px solid #ccc;\n}\n/* 68 */\n.top-input {\n    cursor: default;\n    margin: 0 20px;\n    margin-bottom: 18px;\n    background: #fff;\n    padding-bottom: 20px;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    padding-right: 14px;\n}\n.top-input p {\n    text-align: right;\n    vertical-align: middle;\n    float: left;\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    padding: 0 12px 0 0;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n.top-input-1 {\n    cursor: default;\n    margin: 0 20px;\n    margin-bottom: 18px;\n    background: #fff;\n    padding-bottom: 20px;\n    position: absolute;\n    top: 0;\n    z-index: 100;\n    padding-right: 14px;\n}\n.top-input-1 p {\n    text-align: right;\n    vertical-align: middle;\n    float: left;\n    font-size: 14px;\n    color: #303133;\n    line-height: 40px;\n    padding: 0 12px 0 0;\n    box-sizing: border-box;\n    font-weight: 600;\n    margin: 0;\n}\n</style>"]}]}