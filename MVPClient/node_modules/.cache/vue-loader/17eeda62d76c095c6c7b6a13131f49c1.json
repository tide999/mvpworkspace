{"remainingRequest":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/src/components/mission.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/src/components/mission.vue","mtime":1609743416094},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hezitai/Desktop/MVPClient/MVPServer/mvpworkspace/MVPClient/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdC5qcyI7CmltcG9ydCAnQC91dGlscy9kaXJlY3RpdmVzLmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnbWlzc2lvbicsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGljb25OYW1lOiAnZWwtaWNvbi10b3AnLAogICAgICAgICAgICBpc01heFNjcmVlbjogdHJ1ZSwKICAgICAgICAgICAgdXNlcmxldmVsOiAwLAogICAgICAgICAgICBzdGFydEJ0bjogZmFsc2UsCiAgICAgICAgICAgIGNhbmNlbEJ0bjogZmFsc2UsCiAgICAgICAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBmb3JtOiB7CiAgICAgICAgICAgICAgICBtaXNzaW9uTmFtZTogJ+W9k+WJjeaaguaXoOS7u+WKoScsCiAgICAgICAgICAgICAgICBtaXNzaW9uVHlwZTogJycsCiAgICAgICAgICAgICAgICBtaXNzaW9uU3RhdHVzOiAnJywKICAgICAgICAgICAgICAgIHRpbWVzVGhyb3dTZWM6ICcnLAogICAgICAgICAgICAgICAgc2VjdXJpdHlEZWVwTWV0OiAnJywKICAgICAgICAgICAgICAgIHNldHRpbmdEZXB0aDogJycsCiAgICAgICAgICAgICAgICBzZXR0aW5nVGhyb3dUaW1lczogJycsCiAgICAgICAgICAgICAgICB0aGlzU2V0dGluZ1Rocm93VGltZXM6ICcnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRpYWxvZ0Zyb206IHsKICAgICAgICAgICAgICAgIG1pc3Npb25OYW1lOiBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAobmV3IERhdGUoKS5nZXRNb250aCgpICsgMSA8IDEwID8gJzAnICsgKG5ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDEpIDogbmV3IERhdGUoKS5nZXRNb250aCgpICsgMSkgKyAnLScgKyAobmV3IERhdGUoKS5nZXREYXRlKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0RGF0ZSgpIDogbmV3IERhdGUoKS5nZXREYXRlKCkpICsgJyAnICsgKG5ldyBEYXRlKCkuZ2V0SG91cnMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRIb3VycygpIDogbmV3IERhdGUoKS5nZXRIb3VycygpKSArICc6JyArIChuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRNaW51dGVzKCkgOiBuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSkgKyAnOicgKyAobmV3IERhdGUoKS5nZXRTZWNvbmRzKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0U2Vjb25kcygpIDogbmV3IERhdGUoKS5nZXRTZWNvbmRzKCkpICsn5Lu75YqhJywKICAgICAgICAgICAgICAgIG1pc3Npb25UeXBlOiA1LAogICAgICAgICAgICAgICAgc2V0dGluZ0RlZXA6IDEwMCwKICAgICAgICAgICAgICAgIHNldHRpbmdUaW1lczogMSwKICAgICAgICAgICAgICAgIHNldHRpbmdJbnRlcnZhbDogNSwKICAgICAgICAgICAgICAgIHNhZmVEZXB0aDogMjAsCiAgICAgICAgICAgICAgICBjaGVja2JveDogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXNNYXhUaW1lczogZmFsc2UsCiAgICAgICAgICAgIHJlYWxUaW1lSm9iSWQ6ICcnLAogICAgICAgICAgICBydW5uaW5nSm9iOiBbXSwKICAgICAgICAgICAgaGFzUnVubmluZ0pvYjogZmFsc2UsCiAgICAgICAgICAgIHdhaXRpbmdKb2I6IFtdLAogICAgICAgICAgICBzZXRpbnRlcnZhbDogJycsCiAgICAgICAgICAgIHNldGludGVydmFsMTogJycsCiAgICAgICAgICAgIGJhc2VVUkw6ICcnLAogICAgICAgICAgICBleHBvcnRUaW1lczogMCwKICAgICAgICAgICAgc2k6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLnVzZXJsZXZlbCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdtdnBsZXZlbCcpOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMudXNlcmxldmVsICsgJz09PjA6VVNFOzE6UkVBRE9OTFknKQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5iYXNlVVJMID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ212cGlwJyk7CiAgICAgICAgdGhpcy5nZXRDdXJyZW50Sm9iKCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjog57uE5Lu2CiAgICAgICAgICogQHBhcmFtIHsqfSBlbGUKICAgICAgICAgKiBAcmV0dXJuIHsqfQogICAgICAgICAqLwogICAgICAgIGhhbmRsZVNpemUoZWxlKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NlbmRFbGVOYW1lJywgeyBlbGU6IGVsZSwgYnRuOiAnc2hyaW5rJyB9KTsKICAgICAgICAgICAgaWYgKHRoaXMuaWNvbk5hbWUgPT0gJ2VsLWljb24tdG9wJykgewogICAgICAgICAgICAgICAgLy8g57yp5bCPCiAgICAgICAgICAgICAgICB0aGlzLmljb25OYW1lID0gJ2VsLWljb24tYm90dG9tJzsKICAgICAgICAgICAgICAgIHRoaXMuaXNNYXhTY3JlZW4gPSBmYWxzZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vIOaUvuWkpwogICAgICAgICAgICAgICAgdGhpcy5pY29uTmFtZSA9ICdlbC1pY29uLXRvcCcKICAgICAgICAgICAgICAgIHRoaXMuaXNNYXhTY3JlZW4gPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb246IAogICAgICAgICAqIEBwYXJhbSB7Kn0gZWxlCiAgICAgICAgICogQHJldHVybiB7Kn0KICAgICAgICAgKi8KICAgICAgICBjbG9zZUl0ZW0oZWxlKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3NlbmRFbGVOYW1lJywgeyBlbGU6IGVsZSwgYnRuOiAnY2xvc2UnIH0pOwogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uOiAKICAgICAgICAgKiBAcGFyYW0geyp9CiAgICAgICAgICogQHJldHVybiB7Kn0KICAgICAgICAgKi8KICAgICAgICBzdGFydGluZ01pc3Npb24oKSB7CiAgICAgICAgICAgIHRoaXMuJGNvbmZpcm0oJ+aYr+WQpuW8gOWni+S7u+WKoe+8nycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+W8gOWniycsCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJwogICAgICAgICAgICB9LCAnaW5mbycpLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5hZGRDb21tYW5kKHsKICAgICAgICAgICAgICAgICAgICBjbWRJZDogMTI4MCwKICAgICAgICAgICAgICAgICAgICBjbWRDb250ZW50OiAwCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfku7vliqHlvIDlp4vmjIfku6Tlt7Llj5HpgIEnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewoKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb246IAogICAgICAgICAqIEBwYXJhbSB7Kn0KICAgICAgICAgKiBAcmV0dXJuIHsqfQogICAgICAgICAqLwogICAgICAgIGNhbmNlbE1pc3Npb24oKSB7CiAgICAgICAgICAgIHRoaXMuJGNvbmZpcm0oJ+aYr+WQpuWPlua2iOW9k+WJjeS7u+WKoe+8nycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5YWz6ZetJywKICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29tbWFuZCh7CiAgICAgICAgICAgICAgICAgICAgY21kSWQ6IDEzNjAsCiAgICAgICAgICAgICAgICAgICAgY21kQ29udGVudDogMAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5Lu75Yqh5Y+W5raI5oyH5Luk5bey5Y+R6YCBJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKCiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogQGRlc2NyaXB0aW9uOiAKICAgICAgICAgKiBAcGFyYW0geyp9CiAgICAgICAgICogQHJldHVybiB7Kn0KICAgICAgICAgKi8KICAgICAgICBjYW5jZWxNaXNzaW9uTm93KCkgewogICAgICAgICAgICB0aGlzLiRjb25maXJtKCflvZPliY3ku7vliqHlsIbnq4vljbPooqvlj5bmtojlubbkuJTkuI3kvJrlm57mlLbku6rlmajvvIzmmK/lkKbnoa7orqTmiafooYzvvJ8nLCAn5o+Q56S6JywgewogICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WFs+mXrScsCiAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmFkZENvbW1hbmQoewogICAgICAgICAgICAgICAgICAgIGNtZElkOiAyNTUsCiAgICAgICAgICAgICAgICAgICAgY21kQ29udGVudDogMAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5Lu75Yqh56uL5Y2z5Y+W5raI5oyH5Luk5bey5Y+R6YCBJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjogCiAgICAgICAgICogQHBhcmFtIHsqfQogICAgICAgICAqIEByZXR1cm4geyp9CiAgICAgICAgICovCiAgICAgICAgY3JlYXRlTWlzc2lvbigpIHsKICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjogCiAgICAgICAgICogQHBhcmFtIHsqfQogICAgICAgICAqIEByZXR1cm4geyp9CiAgICAgICAgICovCiAgICAgICAgaGFuZGxlQ2xvc2UoKSB7CiAgICAgICAgICAgIHRoaXMuZGlhbG9nRnJvbSA9IHsKICAgICAgICAgICAgICAgIG1pc3Npb25OYW1lOiBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAobmV3IERhdGUoKS5nZXRNb250aCgpICsgMSA8IDEwID8gJzAnICsgKG5ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDEpIDogbmV3IERhdGUoKS5nZXRNb250aCgpICsgMSkgKyAnLScgKyAobmV3IERhdGUoKS5nZXREYXRlKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0RGF0ZSgpIDogbmV3IERhdGUoKS5nZXREYXRlKCkpICsgJyAnICsgKG5ldyBEYXRlKCkuZ2V0SG91cnMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRIb3VycygpIDogbmV3IERhdGUoKS5nZXRIb3VycygpKSArICc6JyArIChuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRNaW51dGVzKCkgOiBuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSkgKyAnOicgKyAobmV3IERhdGUoKS5nZXRTZWNvbmRzKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0U2Vjb25kcygpIDogbmV3IERhdGUoKS5nZXRTZWNvbmRzKCkpICsn5Lu75YqhJywKICAgICAgICAgICAgICAgIG1pc3Npb25UeXBlOiA1LAogICAgICAgICAgICAgICAgc2V0dGluZ0RlZXA6IDEwMCwKICAgICAgICAgICAgICAgIHNldHRpbmdUaW1lczogMSwKICAgICAgICAgICAgICAgIHNldHRpbmdJbnRlcnZhbDogNSwKICAgICAgICAgICAgICAgIHNhZmVEZXB0aDogMjAsCiAgICAgICAgICAgICAgICBjaGVja2JveDogZmFsc2UKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb246IOaWsOWinuS7u+WKoeaMiemSriAKICAgICAgICAgKiBAcGFyYW0geyp9CiAgICAgICAgICogQHJldHVybiB7Kn0KICAgICAgICAgKi8KICAgICAgICBjcmVhdGVNaXNzaW9uRGlhbG9nQnRuKCkgewogICAgICAgICAgICBjb25zdCBfdGhpcyA9IHRoaXM7CiAgICAgICAgICAgIGxldCBwYXJhbXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZGlhbG9nRnJvbSkpOwogICAgICAgICAgICBpZiAocGFyYW1zLmNoZWNrYm94ID09IHRydWUpIHsKICAgICAgICAgICAgICAgIHBhcmFtcy5zZXR0aW5nVGltZXMgPSAtMQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghcGFyYW1zLm1pc3Npb25OYW1lKSB7CiAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcign6K+36L6T5YWl5Lu75Yqh5ZCN56ewJyk7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCFwYXJhbXMubWlzc2lvblR5cGUpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfor7fpgInmi6nlt6XkvZzmqKHlvI8nKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIXBhcmFtcy5zZXR0aW5nRGVlcCkgewogICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+i+k+WFpeiuvuWumua3seW6picpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghcGFyYW1zLnNldHRpbmdUaW1lcyAmJiBwYXJhbXMuY2hlY2tib3ggPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfor7forr7lrprmipXmlL7mrKHmlbAnKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIXBhcmFtcy5zZXR0aW5nSW50ZXJ2YWwpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfor7fovpPlhaXmipXmlL7pl7TpmpQnKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIXBhcmFtcy5zYWZlRGVwdGgpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfor7fovpPlhaXot53lupXlronlhajmt7HluqYnKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocGFyYW1zLm1pc3Npb25OYW1lLmxlbmd0aCA+IDEwMCkgewogICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S7u+WKoeWQjeensOi/h+mVvycpOwogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHBhcmFtcy5zZXR0aW5nRGVlcCA+IDEwMDAxIHx8IHBhcmFtcy5zZXR0aW5nRGVlcCA8IDEpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCforr7lrprmt7HluqbmoLzlvI/plJnor6/or7fph43mlrDovpPlhaUnKTsKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChwYXJhbXMuY2hlY2tib3ggPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgIGlmIChwYXJhbXMuc2V0dGluZ1RpbWVzID4gMTAwMDEgfHwgcGFyYW1zLnNldHRpbmdUaW1lcyA8IDEpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcign5oqV5pS+5qyh5pWw5qC85byP6ZSZ6K+v6K+36YeN5paw6L6T5YWlJyk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHBhcmFtcy5zZXR0aW5nSW50ZXJ2YWwgPiAzMDEgfHwgcGFyYW1zLnNldHRpbmdJbnRlcnZhbCA8IDEpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKCfmipXmlL7pl7TpmpTmoLzlvI/plJnor6/or7fph43mlrDovpPlhaUnKTsKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChOdW1iZXIocGFyYW1zLnNhZmVEZXB0aCkgPiBOdW1iZXIocGFyYW1zLnNldHRpbmdEZWVwKSkgewogICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+i3neW6leWuieWFqOa3seW6puagvOW8j+mUmeivr+ivt+mHjeaWsOi+k+WFpScpOwogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcGFyYW1zLnNhZmVEZXB0aCA9IE51bWJlcihwYXJhbXMuc2FmZURlcHRoKTsKICAgICAgICAgICAgcGFyYW1zLnNldHRpbmdEZWVwID0gTnVtYmVyKHBhcmFtcy5zZXR0aW5nRGVlcCk7CiAgICAgICAgICAgIHBhcmFtcy5zZXR0aW5nSW50ZXJ2YWwgPSBOdW1iZXIocGFyYW1zLnNldHRpbmdJbnRlcnZhbCk7CiAgICAgICAgICAgIHBhcmFtcy5zZXR0aW5nVGltZXMgPSBOdW1iZXIocGFyYW1zLnNldHRpbmdUaW1lcyk7CiAgICAgICAgICAgIHRoaXMuYWRkSm9iKHBhcmFtcyk7CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb246IAogICAgICAgICAqIEBwYXJhbSB7Kn0KICAgICAgICAgKiBAcmV0dXJuIHsqfQogICAgICAgICAqLwogICAgICAgIGlzU2V0dGluZ1RpbWVzKCkgewogICAgICAgICAgICBpZiAodGhpcy5kaWFsb2dGcm9tLmNoZWNrYm94ID09IHRydWUpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXNNYXhUaW1lcyA9IHRydWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuaXNNYXhUaW1lcyA9IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjog5paw5aKe5Lu75YqhCiAgICAgICAgICogQHBhcmFtIHsqfQogICAgICAgICAqIEByZXR1cm4geyp9CiAgICAgICAgICovCiAgICAgICAgYXN5bmMgYWRkSm9iKHJvdykgewogICAgICAgICAgICBsZXQgX3RoaXMgPSB0aGlzOwogICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgcmVxdWVzdCh7CiAgICAgICAgICAgICAgICB1cmw6ICIvam9iL2FkZF9qb2IiLAogICAgICAgICAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGpvYk5hbWU6IHJvdy5taXNzaW9uTmFtZSwKICAgICAgICAgICAgICAgICAgICBqb2JNb2RlOiByb3cubWlzc2lvblR5cGUsCiAgICAgICAgICAgICAgICAgICAgam9iRGVlcDogcm93LnNldHRpbmdEZWVwLAogICAgICAgICAgICAgICAgICAgIGRyb3BUaW1lczogcm93LnNldHRpbmdUaW1lcywKICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbFRpbWU6IHJvdy5zZXR0aW5nSW50ZXJ2YWwsCiAgICAgICAgICAgICAgICAgICAgc2FmZURlZXA6IHJvdy5zYWZlRGVwdGgsCiAgICAgICAgICAgICAgICAgICAgb3BlcmF0ZU1vZGU6IDAsCiAgICAgICAgICAgICAgICAgICAgb3BlcmF0ZVNwZWVkOiAwCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgX3RoaXMuaXNNYXhUaW1lcyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICflt7Lmt7vliqDku7vliqEnLAogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5kaWFsb2dGcm9tID0gewogICAgICAgICAgICAgICAgICAgIG1pc3Npb25OYW1lOiBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgKyAnLScgKyAobmV3IERhdGUoKS5nZXRNb250aCgpICsgMSA8IDEwID8gJzAnICsgKG5ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDEpIDogbmV3IERhdGUoKS5nZXRNb250aCgpICsgMSkgKyAnLScgKyAobmV3IERhdGUoKS5nZXREYXRlKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0RGF0ZSgpIDogbmV3IERhdGUoKS5nZXREYXRlKCkpICsgJyAnICsgKG5ldyBEYXRlKCkuZ2V0SG91cnMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRIb3VycygpIDogbmV3IERhdGUoKS5nZXRIb3VycygpKSArICc6JyArIChuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSA8IDEwID8gJzAnICsgbmV3IERhdGUoKS5nZXRNaW51dGVzKCkgOiBuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKSkgKyAnOicgKyAobmV3IERhdGUoKS5nZXRTZWNvbmRzKCkgPCAxMCA/ICcwJyArIG5ldyBEYXRlKCkuZ2V0U2Vjb25kcygpIDogbmV3IERhdGUoKS5nZXRTZWNvbmRzKCkpICsn5Lu75YqhJywKICAgICAgICAgICAgICAgICAgICBtaXNzaW9uVHlwZTogNSwKICAgICAgICAgICAgICAgICAgICBzZXR0aW5nRGVlcDogMTAwLAogICAgICAgICAgICAgICAgICAgIHNldHRpbmdUaW1lczogMSwKICAgICAgICAgICAgICAgICAgICBzZXR0aW5nSW50ZXJ2YWw6IDUsCiAgICAgICAgICAgICAgICAgICAgc2FmZURlcHRoOiAyMCwKICAgICAgICAgICAgICAgICAgICBjaGVja2JveDogZmFsc2UKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvciwKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjog6I635Y+W5b2T5YmN5Lu75Yqh5L+h5oGvCiAgICAgICAgICogQHBhcmFtIHsqfQogICAgICAgICAqIEByZXR1cm4geyp9CiAgICAgICAgICovCiAgICAgICAgYXN5bmMgZ2V0UmVhbHRpbWVKb2Ioam9iSWQpIHsKICAgICAgICAgICAgbGV0IF90aGlzID0gdGhpczsKICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHJlcXVlc3QoewogICAgICAgICAgICAgICAgdXJsOiAiL2pvYi9nZXRfam9iX3JlYWxkYXRhIiwKICAgICAgICAgICAgICAgIG1ldGhvZDogImdldCIsCiAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBqb2JJZDogam9iSWQsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoX3RoaXMuc2V0aW50ZXJ2YWwxKTsKICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YS5sZW5ndGggIT0gMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzLmZvcm0gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1pc3Npb25OYW1lOiByZXN1bHQuZGF0YVswXS5qb2JOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBtaXNzaW9uVHlwZTogcmVzdWx0LmRhdGFbMF0uam9iTW9kZSwKICAgICAgICAgICAgICAgICAgICAgICAgbWlzc2lvblN0YXR1czogcmVzdWx0LmRhdGFbMF0uam9iU3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICB0aW1lc1Rocm93U2VjOiByZXN1bHQuZGF0YVswXS5pbnRlcnZhbFRpbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3VyaXR5RGVlcE1ldDogcmVzdWx0LmRhdGFbMF0uc2FmZURlZXAsCiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdEZXB0aDogcmVzdWx0LmRhdGFbMF0uc2V0RGVlcCwKICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZ1Rocm93VGltZXM6IHJlc3VsdC5kYXRhWzBdLmRyb3BUaW1lcyA9PSAtMSA/ICfml6DpmZDmrKEnIDogcmVzdWx0LmRhdGFbMF0uZHJvcFRpbWVzLAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzU2V0dGluZ1Rocm93VGltZXM6IHJlc3VsdC5kYXRhWzBdLnJ1blRpbWVzCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YVswXS5qb2JTdGF0dXMgPj0gNzY4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy51c2VybGV2ZWwgPT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5a+85Ye6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5zaSA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZXhwb3J0VGltZXMrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5leHBvcnRGaWxlKGpvYklkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDUwMDApCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZ2V0Q3VycmVudEpvYigpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNldGludGVydmFsMSA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5nZXRSZWFsdGltZUpvYihfdGhpcy5yZWFsVGltZUpvYklkKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwgMTAwMCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb246IOiOt+WPluacgOaWsOS7u+WKoeS/oeaBrwogICAgICAgICAqIEBwYXJhbSB7Kn0KICAgICAgICAgKiBAcmV0dXJuIHsqfQogICAgICAgICAqLwogICAgICAgIGFzeW5jIGdldEN1cnJlbnRKb2IoKSB7CiAgICAgICAgICAgIGxldCBfdGhpcyA9IHRoaXM7CiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCByZXF1ZXN0KHsKICAgICAgICAgICAgICAgIHVybDogIi9qb2IvZ2V0X2N1cnJlbnRfam9iIiwKICAgICAgICAgICAgICAgIG1ldGhvZDogImdldCIKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbChfdGhpcy5zZXRpbnRlcnZhbCk7CiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzLmZvcm0gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1pc3Npb25OYW1lOiByZXN1bHQuZGF0YVswXS5qb2JOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBtaXNzaW9uVHlwZTogcmVzdWx0LmRhdGFbMF0uam9iTW9kZSwKICAgICAgICAgICAgICAgICAgICAgICAgbWlzc2lvblN0YXR1czogcmVzdWx0LmRhdGFbMF0uam9iU3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICB0aW1lc1Rocm93U2VjOiByZXN1bHQuZGF0YVswXS5pbnRlcnZhbFRpbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3VyaXR5RGVlcE1ldDogcmVzdWx0LmRhdGFbMF0uc2FmZURlZXAsCiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdEZXB0aDogcmVzdWx0LmRhdGFbMF0uc2V0RGVlcCwKICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZ1Rocm93VGltZXM6IHJlc3VsdC5kYXRhWzBdLmRyb3BUaW1lcyA9PSAtMSA/ICfml6DpmZDmrKEnIDogcmVzdWx0LmRhdGFbMF0uZHJvcFRpbWVzLAogICAgICAgICAgICAgICAgICAgICAgICB0aGlzU2V0dGluZ1Rocm93VGltZXM6IHJlc3VsdC5kYXRhWzBdLnJ1blRpbWVzCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZWFsVGltZUpvYklkID0gcmVzdWx0LmRhdGFbMF0uam9iSWQ7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuZ2V0UmVhbHRpbWVKb2IoX3RoaXMucmVhbFRpbWVKb2JJZCkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMuc2V0aW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5nZXRDdXJyZW50Sm9iKCkKICAgICAgICAgICAgICAgICAgICB9LCAxMDAwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb2465a+85Ye6IAogICAgICAgICAqIEBwYXJhbSB7Kn0KICAgICAgICAgKiBAcmV0dXJuIHsqfQogICAgICAgICAqLwogICAgICAgIGFzeW5jIGV4cG9ydEZpbGUoam9iaWQpIHsKICAgICAgICAgICAgbGV0IF90aGlzID0gdGhpczsKICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHJlcXVlc3QoewogICAgICAgICAgICAgICAgdXJsOiAiam9iL2dldF9leHBvcnRfZmlsZSIsCiAgICAgICAgICAgICAgICBtZXRob2Q6ICJnZXQiLAogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgam9iSWQ6IGpvYmlkCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5kYXRhWzBdLmZpbGVQcmVwYXJlID09IDEpIHsKICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IF90aGlzLmJhc2VVUkwgKyBgL2FwaS9qb2IvZG93bmxvYWQ/ZmlsZV9uYW1lPWV4cG9ydF9maWxlL2AgKyByZXN1bHQuZGF0YVswXS5kb3dubG9hZEZpbGUKICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbChfdGhpcy5zaSkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmV4cG9ydFRpbWVzID09IDMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoX3RoaXMuc2kpOwogICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5leHBvcnRUaW1lcyA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfmlbDmja7kuIvovb3lpLHotKXvvIzor7fkvb/nlKjkuJPnlKjova/ku7bph43mlrDojrflj5bmlbDmja7mlofku7YnKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoX3RoaXMuc2kpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbjrlop7liqDmjqfliLbmjIfku6QgCiAgICAgICAgICogQHBhcmFtIHsqfQogICAgICAgICAqIEByZXR1cm4geyp9CiAgICAgICAgICovCiAgICAgICAgYXN5bmMgYWRkQ29tbWFuZChyb3cpIHsKICAgICAgICAgICAgbGV0IF90aGlzID0gdGhpczsKICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IHJlcXVlc3QoewogICAgICAgICAgICAgICAgdXJsOiAiL3N5cy1kZWZpbmUvYWRkX2NvbW1hbmQiLAogICAgICAgICAgICAgICAgbWV0aG9kOiAiZ2V0IiwKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIGNtZElkOiByb3cuY21kSWQsCiAgICAgICAgICAgICAgICAgICAgY21kQ29udGVudDogcm93LmNtZENvbnRlbnQsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0LmRhdGEpOwogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgfQp9Cg=="},{"version":3,"sources":["mission.vue"],"names":[],"mappingsfile":"mission.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"mission\">\n        <div class=\"mission-box\">\n            <p class=\"page-title\">\n                <span v-show=\"isMaxScreen == true\">任务内容显示</span>\n                <span v-show=\"isMaxScreen == false\">\n                    <span class=\"labelfont\">当前任务状态：</span>\n                    <el-radio-group disabled v-model=\"form.missionStatus\">\n                        <el-radio :label=\"3\">等待执行</el-radio>\n                        <el-radio :label=\"48\">正在执行</el-radio>\n                        <el-radio :label=\"51\">投放间隔等待</el-radio>\n                        <el-radio :label=\"768\">执行完成</el-radio>\n                        <el-radio :label=\"12288\">已经取消</el-radio>\n                    </el-radio-group>\n                </span>\n\n                <span class=\"close-btn\" style=\"right:26px\" @click=\"handleSize('mission')\" title=\"放大/缩小\"><i :class=\"iconName\"></i></span>\n                <span class=\"close-btn\" @click=\"closeItem('mission')\"><i class=\"el-icon-circle-close\"></i></span>\n            </p>\n            <div class=\"mission-content\" v-show=\"isMaxScreen == true\">\n                <el-form ref=\"form\" :model=\"form\" inline class=\"from-content\" size=\"mini\">\n                    <el-form-item label=\"当前任务名称：\" label-width=\"120px\">\n                        <el-input disabled v-model=\"form.missionName\" style=\"width:250px\"></el-input>\n                    </el-form-item>\n                    <br />\n                    <el-form-item label=\"当前任务模式：\" label-width=\"120px\">\n                        <el-radio-group disabled v-model=\"form.missionType\">\n                            <el-radio :label=\"5\">定深投放</el-radio>\n                            <el-radio :label=\"80\">距底定距离投放</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <el-form-item label=\"当前任务状态：\" label-width=\"120px\">\n                        <el-radio-group disabled v-model=\"form.missionStatus\">\n                            <el-radio :label=\"3\">等待执行</el-radio>\n                            <el-radio :label=\"48\">正在执行</el-radio>\n                            <el-radio :label=\"51\">投放间隔等待</el-radio>\n                            <el-radio :label=\"768\">执行完成</el-radio>\n                            <el-radio :label=\"12288\">已经取消</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <br />\n                    <el-form-item label=\"每次投放间隔(秒)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.timesThrowSec\" style=\"width:70px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"距底安全深度(米)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.securityDeepMet\" style=\"width:72px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定深度(米)：\" label-width=\"120px\">\n                        <el-input disabled v-model=\"form.settingDepth\" style=\"width:70px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定投放次数(次)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.settingThrowTimes\" style=\"width:65px\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"当前投放次数(次)：\" label-width=\"145px\">\n                        <el-input disabled v-model=\"form.thisSettingThrowTimes\" style=\"width:65px\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div class=\"btn-content\" v-show=\"userlevel == 0\">\n                    <el-button type=\"primary\" class=\"create-btn\" @click=\"createMission\">增加任务</el-button>\n                    <div class=\"left-btn-area\">\n                        <el-button type=\"success\" @click=\"startingMission\" :disabled='startBtn'>开始执行任务</el-button>\n                        <el-button type=\"warning\" @click=\"cancelMission\" :disabled='cancelBtn'>取消当前任务并回收仪器</el-button>\n                    </div>\n                    <el-button type=\"danger\" class=\"delete-btn\" @click=\"cancelMissionNow\">立即取消<br />当前任务</el-button>\n                </div>\n            </div>\n            <div class=\"minScreen\" v-show=\"isMaxScreen == false\">\n            </div>\n        </div>\n\n        <el-dialog title=\"新增任务\" :visible.sync=\"dialogVisible\" width=\"600px\" top=\"5vh\" v-dialogDrag :before-close=\"handleClose\">\n            <div>\n                <el-form ref=\"dialogFrom\" :model=\"dialogFrom\" label-width=\"140px\">\n                    <el-form-item label=\"新任务名称\">\n                        <el-input v-model=\"dialogFrom.missionName\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"任务工作模式\">\n                        <el-radio-group v-model=\"dialogFrom.missionType\">\n                            <el-radio :label=\"5\">定深投放</el-radio>\n                            <el-radio :label=\"80\">距底定距投放</el-radio>\n                        </el-radio-group>\n                    </el-form-item>\n                    <el-form-item label=\"设定深度(米)\">\n                        <el-input type='number' v-model=\"dialogFrom.settingDeep\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"设定投放次数(次)\">\n                        <el-input type='number' v-model=\"dialogFrom.settingTimes\" class=\"usedinput\" v-show=\"isMaxTimes==false\" style=\"width:90px;padding-right:20px\"></el-input>\n                        <el-checkbox v-model=\"dialogFrom.checkbox\" @change=\"isSettingTimes\">无限次投放</el-checkbox>\n                    </el-form-item>\n                    <el-form-item type='number' label=\"每次投放间隔(秒)\">\n                        <el-input v-model=\"dialogFrom.settingInterval\"></el-input>\n                    </el-form-item>\n                    <el-form-item type='number' label=\"距底安全深度(米)\">\n                        <el-input v-model=\"dialogFrom.safeDepth\"></el-input>\n                    </el-form-item>\n                </el-form>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"handleClose\" style=\"margin-right:20px\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"createMissionDialogBtn\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport '@/utils/directives.js'\nexport default {\n    name: 'mission',\n    data() {\n        return {\n            iconName: 'el-icon-top',\n            isMaxScreen: true,\n            userlevel: 0,\n            startBtn: false,\n            cancelBtn: false,\n            dialogVisible: false,\n            form: {\n                missionName: '当前暂无任务',\n                missionType: '',\n                missionStatus: '',\n                timesThrowSec: '',\n                securityDeepMet: '',\n                settingDepth: '',\n                settingThrowTimes: '',\n                thisSettingThrowTimes: ''\n            },\n            dialogFrom: {\n                missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                missionType: 5,\n                settingDeep: 100,\n                settingTimes: 1,\n                settingInterval: 5,\n                safeDepth: 20,\n                checkbox: false\n            },\n            isMaxTimes: false,\n            realTimeJobId: '',\n            runningJob: [],\n            hasRunningJob: false,\n            waitingJob: [],\n            setinterval: '',\n            setinterval1: '',\n            baseURL: '',\n            exportTimes: 0,\n            si: null\n        }\n    },\n    created() {\n        this.userlevel = localStorage.getItem('mvplevel');\n        console.log(this.userlevel + '==>0:USE;1:READONLY')\n    },\n    mounted() {\n        this.baseURL = localStorage.getItem('mvpip');\n        this.getCurrentJob();\n    },\n    methods: {\n        /**\n         * @description: 组件\n         * @param {*} ele\n         * @return {*}\n         */\n        handleSize(ele) {\n            this.$emit('sendEleName', { ele: ele, btn: 'shrink' });\n            if (this.iconName == 'el-icon-top') {\n                // 缩小\n                this.iconName = 'el-icon-bottom';\n                this.isMaxScreen = false;\n            } else {\n                // 放大\n                this.iconName = 'el-icon-top'\n                this.isMaxScreen = true;\n            }\n        },\n        /**\n         * @description: \n         * @param {*} ele\n         * @return {*}\n         */\n        closeItem(ele) {\n            this.$emit('sendEleName', { ele: ele, btn: 'close' });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        startingMission() {\n            this.$confirm('是否开始任务？', '提示', {\n                confirmButtonText: '开始',\n                cancelButtonText: '取消',\n                type: 'info'\n            }, 'info').then(() => {\n                this.addCommand({\n                    cmdId: 1280,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务开始指令已发送'\n                });\n            }).catch(() => {\n\n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        cancelMission() {\n            this.$confirm('是否取消当前任务？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '关闭',\n                type: 'warning'\n            }).then(() => {\n                this.addCommand({\n                    cmdId: 1360,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务取消指令已发送'\n                });\n            }).catch(() => {\n\n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        cancelMissionNow() {\n            this.$confirm('当前任务将立即被取消并且不会回收仪器，是否确认执行？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '关闭',\n                type: 'warning'\n            }).then(() => {\n                this.addCommand({\n                    cmdId: 255,\n                    cmdContent: 0\n                })\n                this.$message({\n                    type: 'success',\n                    message: '任务立即取消指令已发送'\n                });\n            }).catch(() => {\n                \n            });\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        createMission() {\n            this.dialogVisible = true;\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        handleClose() {\n            this.dialogFrom = {\n                missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                missionType: 5,\n                settingDeep: 100,\n                settingTimes: 1,\n                settingInterval: 5,\n                safeDepth: 20,\n                checkbox: false\n            };\n            this.dialogVisible = false;\n        },\n        /**\n         * @description: 新增任务按钮 \n         * @param {*}\n         * @return {*}\n         */\n        createMissionDialogBtn() {\n            const _this = this;\n            let params = JSON.parse(JSON.stringify(this.dialogFrom));\n            if (params.checkbox == true) {\n                params.settingTimes = -1\n            }\n            if (!params.missionName) {\n                _this.$message.error('请输入任务名称');\n                return;\n            }\n            if (!params.missionType) {\n                _this.$message.error('请选择工作模式');\n                return;\n            }\n            if (!params.settingDeep) {\n                _this.$message.error('请输入设定深度');\n                return;\n            }\n            if (!params.settingTimes && params.checkbox == false) {\n                _this.$message.error('请设定投放次数');\n                return;\n            }\n            if (!params.settingInterval) {\n                _this.$message.error('请输入投放间隔');\n                return;\n            }\n            if (!params.safeDepth) {\n                _this.$message.error('请输入距底安全深度');\n                return;\n            }\n            if (params.missionName.length > 100) {\n                _this.$message.error('任务名称过长');\n                return\n            }\n            if (params.settingDeep > 10001 || params.settingDeep < 1) {\n                _this.$message.error('设定深度格式错误请重新输入');\n                return\n            }\n            if (params.checkbox == false) {\n                if (params.settingTimes > 10001 || params.settingTimes < 1) {\n                    _this.$message.error('投放次数格式错误请重新输入');\n                    return\n                }\n            }\n            if (params.settingInterval > 301 || params.settingInterval < 1) {\n                _this.$message.error('投放间隔格式错误请重新输入');\n                return\n            }\n            if (Number(params.safeDepth) > Number(params.settingDeep)) {\n                _this.$message.error('距底安全深度格式错误请重新输入');\n                return\n            }\n            params.safeDepth = Number(params.safeDepth);\n            params.settingDeep = Number(params.settingDeep);\n            params.settingInterval = Number(params.settingInterval);\n            params.settingTimes = Number(params.settingTimes);\n            this.addJob(params);\n        },\n        /**\n         * @description: \n         * @param {*}\n         * @return {*}\n         */\n        isSettingTimes() {\n            if (this.dialogFrom.checkbox == true) {\n                this.isMaxTimes = true\n            } else {\n                this.isMaxTimes = false\n            }\n        },\n        /**\n         * @description: 新增任务\n         * @param {*}\n         * @return {*}\n         */\n        async addJob(row) {\n            let _this = this;\n            let result = await request({\n                url: \"/job/add_job\",\n                method: \"get\",\n                params: {\n                    jobName: row.missionName,\n                    jobMode: row.missionType,\n                    jobDeep: row.settingDeep,\n                    dropTimes: row.settingTimes,\n                    intervalTime: row.settingInterval,\n                    safeDeep: row.safeDepth,\n                    operateMode: 0,\n                    operateSpeed: 0\n                }\n            });\n            try {\n                _this.isMaxTimes = false;\n                _this.$message({\n                    message: '已添加任务',\n                    type: 'success'\n                });\n                _this.dialogVisible = false;\n                _this.dialogFrom = {\n                    missionName: new Date().getFullYear() + '-' + (new Date().getMonth() + 1 < 10 ? '0' + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + '-' + (new Date().getDate() < 10 ? '0' + new Date().getDate() : new Date().getDate()) + ' ' + (new Date().getHours() < 10 ? '0' + new Date().getHours() : new Date().getHours()) + ':' + (new Date().getMinutes() < 10 ? '0' + new Date().getMinutes() : new Date().getMinutes()) + ':' + (new Date().getSeconds() < 10 ? '0' + new Date().getSeconds() : new Date().getSeconds()) +'任务',\n                    missionType: 5,\n                    settingDeep: 100,\n                    settingTimes: 1,\n                    settingInterval: 5,\n                    safeDepth: 20,\n                    checkbox: false\n                };\n            } catch (error) {\n                console.error(error);\n                _this.$message({\n                    message: error,\n                    type: 'warning'\n                });\n                this.dialogVisible = false;\n            }\n        },\n        /**\n         * @description: 获取当前任务信息\n         * @param {*}\n         * @return {*}\n         */\n        async getRealtimeJob(jobId) {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_job_realdata\",\n                method: \"get\",\n                params: {\n                    jobId: jobId,\n                }\n            });\n            try {\n                window.clearInterval(_this.setinterval1);\n                if (result.data.length != 0) {\n                    _this.form = {\n                        missionName: result.data[0].jobName,\n                        missionType: result.data[0].jobMode,\n                        missionStatus: result.data[0].jobStatus,\n                        timesThrowSec: result.data[0].intervalTime,\n                        securityDeepMet: result.data[0].safeDeep,\n                        settingDepth: result.data[0].setDeep,\n                        settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                        thisSettingThrowTimes: result.data[0].runTimes\n                    }\n                    if (result.data[0].jobStatus >= 768) {\n                        if (_this.userlevel == 0) {\n                            // 导出\n                            _this.si = window.setInterval(() => {\n                                _this.exportTimes++;\n                                _this.exportFile(jobId);\n                            }, 5000)\n                        }\n                        _this.getCurrentJob();\n                    } else {\n                        _this.setinterval1 = window.setInterval(() => {\n                            _this.getRealtimeJob(_this.realTimeJobId);\n                        }, 1000)\n                    }\n                } else {\n\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description: 获取最新任务信息\n         * @param {*}\n         * @return {*}\n         */\n        async getCurrentJob() {\n            let _this = this;\n            let result = await request({\n                url: \"/job/get_current_job\",\n                method: \"get\"\n            });\n            try {\n                window.clearInterval(_this.setinterval);\n                if (result.data.length > 0) {\n                    _this.form = {\n                        missionName: result.data[0].jobName,\n                        missionType: result.data[0].jobMode,\n                        missionStatus: result.data[0].jobStatus,\n                        timesThrowSec: result.data[0].intervalTime,\n                        securityDeepMet: result.data[0].safeDeep,\n                        settingDepth: result.data[0].setDeep,\n                        settingThrowTimes: result.data[0].dropTimes == -1 ? '无限次' : result.data[0].dropTimes,\n                        thisSettingThrowTimes: result.data[0].runTimes\n                    };\n                    _this.realTimeJobId = result.data[0].jobId;\n                    _this.getRealtimeJob(_this.realTimeJobId)\n                } else {\n                    _this.setinterval = window.setInterval(() => {\n                        _this.getCurrentJob()\n                    }, 1000);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        /**\n         * @description:导出 \n         * @param {*}\n         * @return {*}\n         */\n        async exportFile(jobid) {\n            let _this = this;\n            let result = await request({\n                url: \"job/get_export_file\",\n                method: \"get\",\n                params: {\n                    jobId: jobid\n                }\n            });\n            try {\n                if (result.data[0].filePrepare == 1) {\n                    window.location.href = _this.baseURL + `/api/job/download?file_name=export_file/` + result.data[0].downloadFile\n                    window.clearInterval(_this.si)\n                } else {\n                    if (_this.exportTimes == 3) {\n                        window.clearInterval(_this.si);\n                        _this.exportTimes = 0;\n                        alert('数据下载失败，请使用专用软件重新获取数据文件')\n                    }\n                }\n            } catch (error) {\n                console.error(error);\n                window.clearInterval(_this.si)\n            }\n        },\n        /**\n         * @description:增加控制指令 \n         * @param {*}\n         * @return {*}\n         */\n        async addCommand(row) {\n            let _this = this;\n            let result = await request({\n                url: \"/sys-define/add_command\",\n                method: \"get\",\n                params: {\n                    cmdId: row.cmdId,\n                    cmdContent: row.cmdContent,\n                }\n            });\n            try {\n                // console.log(result.data);\n            } catch (error) {\n                console.error(error);\n            }\n        },\n    }\n}\n</script>\n\n<style scoped>\n.mission-box {\n    width: 100%;\n    height: 100%;\n}\n\n.mission-content {\n    overflow: hidden;\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #eee;\n    position: relative;\n}\n.from-content {\n    margin-top: 10px;\n    margin-left: 5px;\n}\n.btn-content {\n    padding: 15px 0;\n    display: flex;\n    justify-content: center;\n    margin-right: 30px;\n}\n.page-title {\n    font-size: 16px;\n    color: #409eff;\n    position: relative;\n    margin: 5px 10px;\n    line-height: 32px;\n    height: 32px;\n    cursor: default;\n}\n.page-title .close-btn {\n    position: absolute;\n    right: 5px;\n    top: 0px;\n    cursor: pointer;\n    color: #303133;\n}\n.page-title .close-btn:hover {\n    color: #5cb6ff;\n}\n.left-btn-area {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    margin-right: 12px;\n    margin-left: 12px;\n}\n.left-btn-area .el-button {\n    display: block;\n    height: 48%;\n    width: 130px;\n    white-space: normal;\n}\n.btn-content .create-btn {\n    display: block;\n}\n.delete-btn {\n    display: block;\n    /* padding: 0 3px; */\n}\n.el-button + .el-button {\n    margin-left: 0;\n}\n.usedinput[disabled] {\n    border-color: #e4e7ed;\n    color: #e4e7ed;\n}\n.labelfont {\n    font-size: 14px;\n    font-weight: 600;\n    color: #303133;\n    display: inline-block;\n    margin-left: 18px;\n}\n.form-content {\n    margin: 10px 0 12px 0;\n}\n</style>"]}]}